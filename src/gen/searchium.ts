/* eslint-disable */
// @generated by protobuf-ts 2.8.3 with parameter output_legacy_commonjs,eslint_disable
// @generated from protobuf file "searchium.proto" (package "searchium.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { DateTime } from "./protobuf-net/bcl";
/**
 * @generated from protobuf message searchium.v1.IpcMessage
 */
export interface IpcMessage {
    /**
     * @generated from protobuf field: int64 request_id = 1;
     */
    requestId: bigint;
    /**
     * @generated from protobuf field: string protocol = 2;
     */
    protocol: string;
    /**
     * @generated from protobuf field: searchium.v1.IpcMessageData data = 3;
     */
    data?: IpcMessageData;
    /**
     * @generated from protobuf oneof: request_response
     */
    requestResponse: {
        oneofKind: "request";
        /**
         * @generated from protobuf field: searchium.v1.IpcRequest request = 10;
         */
        request: IpcRequest;
    } | {
        oneofKind: "response";
        /**
         * @generated from protobuf field: searchium.v1.IpcResponse response = 11;
         */
        response: IpcResponse;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message searchium.v1.IpcMessageData
 */
export interface IpcMessageData {
    /**
     * @generated from protobuf oneof: subtype
     */
    subtype: {
        oneofKind: "ipcStringData";
        /**
         * @generated from protobuf field: searchium.v1.IpcStringData ipc_string_data = 10;
         */
        ipcStringData: IpcStringData;
    } | {
        oneofKind: "typedMessage";
        /**
         * @generated from protobuf field: searchium.v1.TypedMessage typed_message = 11;
         */
        typedMessage: TypedMessage;
    } | {
        oneofKind: "errorResponse";
        /**
         * @generated from protobuf field: searchium.v1.ErrorResponse error_response = 12;
         */
        errorResponse: ErrorResponse;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message searchium.v1.IpcStringData
 */
export interface IpcStringData {
    /**
     * @generated from protobuf field: string text = 1;
     */
    text: string;
}
/**
 * @generated from protobuf message searchium.v1.TypedMessage
 */
export interface TypedMessage {
    /**
     * @generated from protobuf field: string class_name = 1;
     */
    className: string;
    /**
     * @generated from protobuf oneof: subtype
     */
    subtype: {
        oneofKind: "typedRequest";
        /**
         * @generated from protobuf field: searchium.v1.TypedRequest typed_request = 10;
         */
        typedRequest: TypedRequest;
    } | {
        oneofKind: "typedResponse";
        /**
         * @generated from protobuf field: searchium.v1.TypedResponse typed_response = 11;
         */
        typedResponse: TypedResponse;
    } | {
        oneofKind: "typedEvent";
        /**
         * @generated from protobuf field: searchium.v1.TypedEvent typed_event = 12;
         */
        typedEvent: TypedEvent;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message searchium.v1.ErrorResponse
 */
export interface ErrorResponse {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: string full_type_name = 2;
     */
    fullTypeName: string;
    /**
     * @generated from protobuf field: string stack_trace = 3;
     */
    stackTrace: string;
    /**
     * @generated from protobuf field: searchium.v1.ErrorResponse inner_error = 4;
     */
    innerError?: ErrorResponse;
}
/**
 * @generated from protobuf message searchium.v1.TypedRequest
 */
export interface TypedRequest {
    /**
     * @generated from protobuf oneof: subtype
     */
    subtype: {
        oneofKind: "registerFileRequest";
        /**
         * @generated from protobuf field: searchium.v1.RegisterFileRequest register_file_request = 10;
         */
        registerFileRequest: RegisterFileRequest;
    } | {
        oneofKind: "unregisterFileRequest";
        /**
         * @generated from protobuf field: searchium.v1.UnregisterFileRequest unregister_file_request = 11;
         */
        unregisterFileRequest: UnregisterFileRequest;
    } | {
        oneofKind: "getFileSystemRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetFileSystemRequest get_file_system_request = 12;
         */
        getFileSystemRequest: GetFileSystemRequest;
    } | {
        oneofKind: "searchFilePathsRequest";
        /**
         * @generated from protobuf field: searchium.v1.SearchFilePathsRequest search_file_paths_request = 13;
         */
        searchFilePathsRequest: SearchFilePathsRequest;
    } | {
        oneofKind: "searchCodeRequest";
        /**
         * @generated from protobuf field: searchium.v1.SearchCodeRequest search_code_request = 14;
         */
        searchCodeRequest: SearchCodeRequest;
    } | {
        oneofKind: "getFileSystemVersionRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetFileSystemVersionRequest get_file_system_version_request = 15;
         */
        getFileSystemVersionRequest: GetFileSystemVersionRequest;
    } | {
        oneofKind: "getFileExtractsRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetFileExtractsRequest get_file_extracts_request = 16;
         */
        getFileExtractsRequest: GetFileExtractsRequest;
    } | {
        oneofKind: "getDirectoryStatisticsRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetDirectoryStatisticsRequest get_directory_statistics_request = 18;
         */
        getDirectoryStatisticsRequest: GetDirectoryStatisticsRequest;
    } | {
        oneofKind: "refreshFilesystemTreeRequest";
        /**
         * @generated from protobuf field: searchium.v1.RefreshFileSystemTreeRequest refresh_filesystem_tree_request = 19;
         */
        refreshFilesystemTreeRequest: RefreshFileSystemTreeRequest;
    } | {
        oneofKind: "getDatabaseStatisticsRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetDatabaseStatisticsRequest get_database_statistics_request = 20;
         */
        getDatabaseStatisticsRequest: GetDatabaseStatisticsRequest;
    } | {
        oneofKind: "pauseIndexingRequest";
        /**
         * @generated from protobuf field: searchium.v1.PauseIndexingRequest pause_indexing_request = 21;
         */
        pauseIndexingRequest: PauseIndexingRequest;
    } | {
        oneofKind: "resumeIndexingRequest";
        /**
         * @generated from protobuf field: searchium.v1.ResumeIndexingRequest resume_indexing_request = 22;
         */
        resumeIndexingRequest: ResumeIndexingRequest;
    } | {
        oneofKind: "getDatabaseDetailsRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetDatabaseDetailsRequest get_database_details_request = 23;
         */
        getDatabaseDetailsRequest: GetDatabaseDetailsRequest;
    } | {
        oneofKind: "getProjectDetailsRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetProjectDetailsRequest get_project_details_request = 24;
         */
        getProjectDetailsRequest: GetProjectDetailsRequest;
    } | {
        oneofKind: "getDirectoryDetailsRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetDirectoryDetailsRequest get_directory_details_request = 25;
         */
        getDirectoryDetailsRequest: GetDirectoryDetailsRequest;
    } | {
        oneofKind: "getFilesystemTreeRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetFilesystemTreeRequest get_filesystem_tree_request = 26;
         */
        getFilesystemTreeRequest: GetFilesystemTreeRequest;
    } | {
        oneofKind: "getDirectoryEntriesRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetDirectoryEntriesRequest get_directory_entries_request = 27;
         */
        getDirectoryEntriesRequest: GetDirectoryEntriesRequest;
    } | {
        oneofKind: "getDirectoryEntriesMultipleRequest";
        /**
         * @generated from protobuf field: searchium.v1.GetDirectoryEntriesMultipleRequest get_directory_entries_multiple_request = 28;
         */
        getDirectoryEntriesMultipleRequest: GetDirectoryEntriesMultipleRequest;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message searchium.v1.TypedResponse
 */
export interface TypedResponse {
    /**
     * @generated from protobuf oneof: subtype
     */
    subtype: {
        oneofKind: "doneResponse";
        /**
         * @generated from protobuf field: searchium.v1.DoneResponse done_response = 10;
         */
        doneResponse: DoneResponse;
    } | {
        oneofKind: "getFileSystemResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetFileSystemResponse get_file_system_response = 11;
         */
        getFileSystemResponse: GetFileSystemResponse;
    } | {
        oneofKind: "searchFilePathsResponse";
        /**
         * @generated from protobuf field: searchium.v1.SearchFilePathsResponse search_file_paths_response = 12;
         */
        searchFilePathsResponse: SearchFilePathsResponse;
    } | {
        oneofKind: "searchCodeResponse";
        /**
         * @generated from protobuf field: searchium.v1.SearchCodeResponse search_code_response = 13;
         */
        searchCodeResponse: SearchCodeResponse;
    } | {
        oneofKind: "getFileSystemVersionResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetFileSystemVersionResponse get_file_system_version_response = 14;
         */
        getFileSystemVersionResponse: GetFileSystemVersionResponse;
    } | {
        oneofKind: "getFileExtractsResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetFileExtractsResponse get_file_extracts_response = 16;
         */
        getFileExtractsResponse: GetFileExtractsResponse;
    } | {
        oneofKind: "getDirectoryStatisticsResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetDirectoryStatisticsResponse get_directory_statistics_response = 17;
         */
        getDirectoryStatisticsResponse: GetDirectoryStatisticsResponse;
    } | {
        oneofKind: "refreshFileSystemTreeResponse";
        /**
         * @generated from protobuf field: searchium.v1.RefreshFileSystemTreeResponse refresh_file_system_tree_response = 18;
         */
        refreshFileSystemTreeResponse: RefreshFileSystemTreeResponse;
    } | {
        oneofKind: "getDatabaseStatisticsResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetDatabaseStatisticsResponse get_database_statistics_response = 19;
         */
        getDatabaseStatisticsResponse: GetDatabaseStatisticsResponse;
    } | {
        oneofKind: "pauseResumeIndexingResponse";
        /**
         * @generated from protobuf field: searchium.v1.PauseResumeIndexingResponse pause_resume_indexing_response = 20;
         */
        pauseResumeIndexingResponse: PauseResumeIndexingResponse;
    } | {
        oneofKind: "getDatabaseDetailsResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetDatabaseDetailsResponse get_database_details_response = 21;
         */
        getDatabaseDetailsResponse: GetDatabaseDetailsResponse;
    } | {
        oneofKind: "getProjectDetailsResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetProjectDetailsResponse get_project_details_response = 22;
         */
        getProjectDetailsResponse: GetProjectDetailsResponse;
    } | {
        oneofKind: "getDirectoryDetailsResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetDirectoryDetailsResponse get_directory_details_response = 23;
         */
        getDirectoryDetailsResponse: GetDirectoryDetailsResponse;
    } | {
        oneofKind: "getFilesystemTreeResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetFileSystemTreeResponse get_filesystem_tree_response = 24;
         */
        getFilesystemTreeResponse: GetFileSystemTreeResponse;
    } | {
        oneofKind: "getDirectoryEntriesResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetDirectoryEntriesResponse get_directory_entries_response = 25;
         */
        getDirectoryEntriesResponse: GetDirectoryEntriesResponse;
    } | {
        oneofKind: "getDirectoryEntriesMultipleResponse";
        /**
         * @generated from protobuf field: searchium.v1.GetDirectoryEntriesMultipleResponse get_directory_entries_multiple_response = 26;
         */
        getDirectoryEntriesMultipleResponse: GetDirectoryEntriesMultipleResponse;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message searchium.v1.TypedEvent
 */
export interface TypedEvent {
    /**
     * @generated from protobuf oneof: subtype
     */
    subtype: {
        oneofKind: "pairedTypedEvent";
        /**
         * @generated from protobuf field: searchium.v1.PairedTypedEvent paired_typed_event = 10;
         */
        pairedTypedEvent: PairedTypedEvent;
    } | {
        oneofKind: "progressReportEvent";
        /**
         * @generated from protobuf field: searchium.v1.ProgressReportEvent progress_report_event = 11;
         */
        progressReportEvent: ProgressReportEvent;
    } | {
        oneofKind: "indexingServerStateChangedEvent";
        /**
         * @generated from protobuf field: searchium.v1.IndexingServerStateChangedEvent indexing_server_state_changed_event = 21;
         */
        indexingServerStateChangedEvent: IndexingServerStateChangedEvent;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message searchium.v1.PairedTypedEvent
 */
export interface PairedTypedEvent {
    /**
     * @generated from protobuf field: int64 operation_id = 1;
     */
    operationId: bigint;
    /**
     * @generated from protobuf field: searchium.v1.ErrorResponse error = 2;
     */
    error?: ErrorResponse;
    /**
     * @generated from protobuf oneof: subtype
     */
    subtype: {
        oneofKind: "fileSystemScanStarted";
        /**
         * @generated from protobuf field: searchium.v1.FileSystemScanStarted file_system_scan_started = 10;
         */
        fileSystemScanStarted: FileSystemScanStarted;
    } | {
        oneofKind: "fileSystemScanFinished";
        /**
         * @generated from protobuf field: searchium.v1.FileSystemScanFinished file_system_scan_finished = 11;
         */
        fileSystemScanFinished: FileSystemScanFinished;
    } | {
        oneofKind: "searchEngineFilesLoading";
        /**
         * @generated from protobuf field: searchium.v1.SearchEngineFilesLoading search_engine_files_loading = 12;
         */
        searchEngineFilesLoading: SearchEngineFilesLoading;
    } | {
        oneofKind: "searchEngineFilesLoadingProgress";
        /**
         * @generated from protobuf field: searchium.v1.SearchEngineFilesLoadingProgress search_engine_files_loading_progress = 13;
         */
        searchEngineFilesLoadingProgress: SearchEngineFilesLoadingProgress;
    } | {
        oneofKind: "searchEngineFilesLoaded";
        /**
         * @generated from protobuf field: searchium.v1.SearchEngineFilesLoaded search_engine_files_loaded = 14;
         */
        searchEngineFilesLoaded: SearchEngineFilesLoaded;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message searchium.v1.FileSystemScanStarted
 */
export interface FileSystemScanStarted {
}
/**
 * @generated from protobuf message searchium.v1.FileSystemScanFinished
 */
export interface FileSystemScanFinished {
    /**
     * @generated from protobuf field: int32 old_version = 1;
     */
    oldVersion: number;
    /**
     * @generated from protobuf field: int32 new_version = 2;
     */
    newVersion: number;
}
/**
 * @generated from protobuf message searchium.v1.SearchEngineFilesLoading
 */
export interface SearchEngineFilesLoading {
}
/**
 * @generated from protobuf message searchium.v1.SearchEngineFilesLoadingProgress
 */
export interface SearchEngineFilesLoadingProgress {
}
/**
 * @generated from protobuf message searchium.v1.SearchEngineFilesLoaded
 */
export interface SearchEngineFilesLoaded {
    /**
     * @generated from protobuf field: int64 tree_version = 1;
     */
    treeVersion: bigint;
}
/**
 * @generated from protobuf message searchium.v1.ProgressReportEvent
 */
export interface ProgressReportEvent {
    /**
     * @generated from protobuf field: string display_text = 1;
     */
    displayText: string;
    /**
     * @generated from protobuf field: int32 completed = 2;
     */
    completed: number; // number of completed steps <= total    /**
     * @generated from protobuf field: int32 total = 3;
     */
    total: number; // total expected number of steps }
/**
 * @generated from protobuf message searchium.v1.IndexingServerStateChangedEvent
 */
export interface IndexingServerStateChangedEvent {
    /**
     * @generated from protobuf field: searchium.v1.IndexingServerStatus server_status = 1;
     */
    serverStatus: IndexingServerStatus;
    /**
     * @generated from protobuf field: bcl.DateTime last_index_updated_utc = 2;
     */
    lastIndexUpdatedUtc?: DateTime;
}
/**
 * @generated from protobuf message searchium.v1.IpcRequest
 */
export interface IpcRequest {
    /**
     * @generated from protobuf field: bool run_on_sequential_queue = 3;
     */
    runOnSequentialQueue: boolean;
}
/**
 * @generated from protobuf message searchium.v1.IpcResponse
 */
export interface IpcResponse {
    /**
     * @generated from protobuf field: searchium.v1.IpcEvent ipc_event = 10;
     */
    ipcEvent?: IpcEvent;
}
/**
 * @generated from protobuf message searchium.v1.IpcEvent
 */
export interface IpcEvent {
}
/**
 * @generated from protobuf message searchium.v1.RegisterFileRequest
 */
export interface RegisterFileRequest {
    /**
     * @generated from protobuf field: string file_name = 1;
     */
    fileName: string;
}
/**
 * @generated from protobuf message searchium.v1.UnregisterFileRequest
 */
export interface UnregisterFileRequest {
    /**
     * @generated from protobuf field: string file_name = 1;
     */
    fileName: string;
}
/**
 * @generated from protobuf message searchium.v1.GetFileSystemRequest
 */
export interface GetFileSystemRequest {
    /**
     * @generated from protobuf field: int32 known_version = 1;
     */
    knownVersion: number;
}
/**
 * @generated from protobuf message searchium.v1.SearchFilePathsRequest
 */
export interface SearchFilePathsRequest {
    /**
     * @generated from protobuf field: searchium.v1.SearchParams search_params = 1;
     */
    searchParams?: SearchParams;
}
/**
 * @generated from protobuf message searchium.v1.SearchCodeRequest
 */
export interface SearchCodeRequest {
    /**
     * @generated from protobuf field: searchium.v1.SearchParams search_params = 1;
     */
    searchParams?: SearchParams;
}
/**
 * @generated from protobuf message searchium.v1.GetFileSystemVersionRequest
 */
export interface GetFileSystemVersionRequest {
}
/**
 * @generated from protobuf message searchium.v1.GetFileExtractsRequest
 */
export interface GetFileExtractsRequest {
    /**
     * @generated from protobuf field: string file_name = 1;
     */
    fileName: string;
    /**
     * @generated from protobuf field: repeated searchium.v1.FilePositionSpan positions = 2;
     */
    positions: FilePositionSpan[];
    /**
     * @generated from protobuf field: int32 max_extract_length = 3;
     */
    maxExtractLength: number;
}
/**
 * @generated from protobuf message searchium.v1.GetDirectoryStatisticsRequest
 */
export interface GetDirectoryStatisticsRequest {
    /**
     * @generated from protobuf field: string directory_name = 1;
     */
    directoryName: string;
}
/**
 * @generated from protobuf message searchium.v1.RefreshFileSystemTreeRequest
 */
export interface RefreshFileSystemTreeRequest {
}
/**
 * @generated from protobuf message searchium.v1.GetDatabaseStatisticsRequest
 */
export interface GetDatabaseStatisticsRequest {
    /**
     * @generated from protobuf field: bool force_garbage_collection = 1;
     */
    forceGarbageCollection: boolean;
}
/**
 * @generated from protobuf message searchium.v1.PauseIndexingRequest
 */
export interface PauseIndexingRequest {
}
/**
 * @generated from protobuf message searchium.v1.ResumeIndexingRequest
 */
export interface ResumeIndexingRequest {
}
/**
 * @generated from protobuf message searchium.v1.GetDatabaseDetailsRequest
 */
export interface GetDatabaseDetailsRequest {
    /**
     * @generated from protobuf field: int32 max_files_by_extension_details_count = 1;
     */
    maxFilesByExtensionDetailsCount: number;
    /**
     * @generated from protobuf field: int32 max_large_files_details_count = 2;
     */
    maxLargeFilesDetailsCount: number;
}
/**
 * @generated from protobuf message searchium.v1.GetProjectDetailsRequest
 */
export interface GetProjectDetailsRequest {
    /**
     * @generated from protobuf field: string project_path = 1;
     */
    projectPath: string;
    /**
     * @generated from protobuf field: int32 max_files_by_extension_details_count = 2;
     */
    maxFilesByExtensionDetailsCount: number;
    /**
     * @generated from protobuf field: int32 max_large_files_details_count = 3;
     */
    maxLargeFilesDetailsCount: number;
}
/**
 * @generated from protobuf message searchium.v1.GetDirectoryDetailsRequest
 */
export interface GetDirectoryDetailsRequest {
    /**
     * @generated from protobuf field: string path = 1;
     */
    path: string;
    /**
     * @generated from protobuf field: int32 max_files_by_extension_details_count = 2;
     */
    maxFilesByExtensionDetailsCount: number;
    /**
     * @generated from protobuf field: int32 max_large_files_details_count = 3;
     */
    maxLargeFilesDetailsCount: number;
}
/**
 * @generated from protobuf message searchium.v1.GetFilesystemTreeRequest
 */
export interface GetFilesystemTreeRequest {
    /**
     * @generated from protobuf field: int32 known_version = 1;
     */
    knownVersion: number;
}
/**
 * @generated from protobuf message searchium.v1.GetDirectoryEntriesRequest
 */
export interface GetDirectoryEntriesRequest {
    /**
     * @generated from protobuf field: string project_path = 1;
     */
    projectPath: string;
    /**
     * @generated from protobuf field: string directory_relative_path = 2;
     */
    directoryRelativePath: string;
}
/**
 * @generated from protobuf message searchium.v1.GetDirectoryEntriesMultipleRequest
 */
export interface GetDirectoryEntriesMultipleRequest {
    /**
     * @generated from protobuf field: string project_path = 1;
     */
    projectPath: string;
    /**
     * @generated from protobuf field: repeated string relative_path_list = 2;
     */
    relativePathList: string[];
}
/**
 * @generated from protobuf message searchium.v1.FilePositionSpan
 */
export interface FilePositionSpan {
    /**
     * @generated from protobuf field: int32 position = 1;
     */
    position: number;
    /**
     * @generated from protobuf field: int32 length = 2;
     */
    length: number;
}
/**
 * @generated from protobuf message searchium.v1.SearchParams
 */
export interface SearchParams {
    /**
     * @generated from protobuf field: string search_string = 1;
     */
    searchString: string;
    /**
     * @generated from protobuf field: string file_path_pattern = 2;
     */
    filePathPattern: string;
    /**
     * @generated from protobuf field: int32 max_results = 3;
     */
    maxResults: number;
    /**
     * @generated from protobuf field: bool match_case = 4;
     */
    matchCase: boolean;
    /**
     * @generated from protobuf field: bool match_whole_word = 5;
     */
    matchWholeWord: boolean;
    /**
     * @generated from protobuf field: bool include_sym_links = 6;
     */
    includeSymLinks: boolean;
    /**
     * @generated from protobuf field: bool regex = 7;
     */
    regex: boolean;
    /**
     * @generated from protobuf field: bool use_re2_engine = 8;
     */
    useRe2Engine: boolean;
}
/**
 * @generated from protobuf message searchium.v1.DoneResponse
 */
export interface DoneResponse {
    /**
     * @generated from protobuf field: string info = 1;
     */
    info: string;
}
/**
 * @generated from protobuf message searchium.v1.GetFileSystemResponse
 */
export interface GetFileSystemResponse {
    /**
     * @generated from protobuf field: searchium.v1.FileSystemTree_Obsolete file_system_tree_obsolete = 1;
     */
    fileSystemTreeObsolete?: FileSystemTree_Obsolete;
}
/**
 * @generated from protobuf message searchium.v1.SearchFilePathsResponse
 */
export interface SearchFilePathsResponse {
    /**
     * @generated from protobuf field: searchium.v1.FileSystemEntry search_result = 1;
     */
    searchResult?: FileSystemEntry;
    /**
     * @generated from protobuf field: int64 hit_count = 2;
     */
    hitCount: bigint;
    /**
     * @generated from protobuf field: int64 total_count = 3;
     */
    totalCount: bigint;
}
/**
 * @generated from protobuf message searchium.v1.SearchCodeResponse
 */
export interface SearchCodeResponse {
    /**
     * @generated from protobuf field: searchium.v1.FileSystemEntry search_results = 1;
     */
    searchResults?: FileSystemEntry;
    /**
     * @generated from protobuf field: int64 hit_count = 2;
     */
    hitCount: bigint;
    /**
     * @generated from protobuf field: int64 searched_file_count = 3;
     */
    searchedFileCount: bigint;
    /**
     * @generated from protobuf field: int64 total_file_count = 4;
     */
    totalFileCount: bigint;
}
/**
 * @generated from protobuf message searchium.v1.GetFileSystemVersionResponse
 */
export interface GetFileSystemVersionResponse {
    /**
     * @generated from protobuf field: int32 version = 1;
     */
    version: number;
}
/**
 * @generated from protobuf message searchium.v1.GetFileExtractsResponse
 */
export interface GetFileExtractsResponse {
    /**
     * @generated from protobuf field: string file_name = 1;
     */
    fileName: string;
    /**
     * @generated from protobuf field: repeated searchium.v1.FileExtract file_extracts = 2;
     */
    fileExtracts: FileExtract[];
}
/**
 * @generated from protobuf message searchium.v1.GetDirectoryStatisticsResponse
 */
export interface GetDirectoryStatisticsResponse {
    /**
     * @generated from protobuf field: int32 directory_count = 1;
     */
    directoryCount: number;
    /**
     * @generated from protobuf field: int32 file_count = 2;
     */
    fileCount: number;
    /**
     * @generated from protobuf field: int32 indexed_file_count = 3;
     */
    indexedFileCount: number;
    /**
     * @generated from protobuf field: int64 total_indexed_file_size = 4;
     */
    totalIndexedFileSize: bigint;
}
/**
 * @generated from protobuf message searchium.v1.RefreshFileSystemTreeResponse
 */
export interface RefreshFileSystemTreeResponse {
}
/**
 * @generated from protobuf message searchium.v1.GetDatabaseStatisticsResponse
 */
export interface GetDatabaseStatisticsResponse {
    /**
     * @generated from protobuf field: int32 project_count = 1;
     */
    projectCount: number;
    /**
     * @generated from protobuf field: int64 file_count = 2;
     */
    fileCount: bigint;
    /**
     * @generated from protobuf field: int64 searchable_file_count = 3;
     */
    searchableFileCount: bigint;
    /**
     * @generated from protobuf field: int64 server_native_memory_usage = 4;
     */
    serverNativeMemoryUsage: bigint;
    /**
     * @generated from protobuf field: int64 server_gc_memory_usage = 5;
     */
    serverGcMemoryUsage: bigint;
    /**
     * @generated from protobuf field: bcl.DateTime index_last_updated_utc = 6;
     */
    indexLastUpdatedUtc?: DateTime;
    /**
     * @generated from protobuf field: searchium.v1.IndexingServerStatus server_status = 7;
     */
    serverStatus: IndexingServerStatus;
}
/**
 * @generated from protobuf message searchium.v1.PauseResumeIndexingResponse
 */
export interface PauseResumeIndexingResponse {
}
/**
 * @generated from protobuf message searchium.v1.GetDatabaseDetailsResponse
 */
export interface GetDatabaseDetailsResponse {
    /**
     * @generated from protobuf field: repeated searchium.v1.ProjectDetails project_details = 1;
     */
    projectDetails: ProjectDetails[];
}
/**
 * @generated from protobuf message searchium.v1.GetProjectDetailsResponse
 */
export interface GetProjectDetailsResponse {
    /**
     * @generated from protobuf field: searchium.v1.ProjectDetails project_details = 1;
     */
    projectDetails?: ProjectDetails;
}
/**
 * @generated from protobuf message searchium.v1.GetDirectoryDetailsResponse
 */
export interface GetDirectoryDetailsResponse {
    /**
     * @generated from protobuf field: searchium.v1.DirectoryDetails directory_details = 1;
     */
    directoryDetails?: DirectoryDetails;
}
/**
 * @generated from protobuf message searchium.v1.GetFileSystemTreeResponse
 */
export interface GetFileSystemTreeResponse {
    /**
     * @generated from protobuf field: searchium.v1.FileSystemTree file_system_tree = 1;
     */
    fileSystemTree?: FileSystemTree;
}
/**
 * @generated from protobuf message searchium.v1.GetDirectoryEntriesResponse
 */
export interface GetDirectoryEntriesResponse {
    /**
     * @generated from protobuf field: searchium.v1.DirectoryEntry directory_entry = 1;
     */
    directoryEntry?: DirectoryEntry;
}
/**
 * @generated from protobuf message searchium.v1.GetDirectoryEntriesMultipleResponse
 */
export interface GetDirectoryEntriesMultipleResponse {
    /**
     * @generated from protobuf field: repeated searchium.v1.OptionalDirectoryEntry directory_entries = 1;
     */
    directoryEntries: OptionalDirectoryEntry[];
}
/**
 * @generated from protobuf message searchium.v1.FileSystemTree
 */
export interface FileSystemTree {
    /**
     * @generated from protobuf field: int32 version = 1;
     */
    version: number;
    /**
     * @generated from protobuf field: repeated searchium.v1.ProjectEntry projects = 2;
     */
    projects: ProjectEntry[];
}
/**
 * @generated from protobuf message searchium.v1.ProjectEntry
 */
export interface ProjectEntry {
    /**
     * @generated from protobuf field: string root_path = 1;
     */
    rootPath: string;
}
/**
 * @generated from protobuf message searchium.v1.FileSystemTree_Obsolete
 */
export interface FileSystemTree_Obsolete {
    /**
     * @generated from protobuf field: int32 version = 1;
     */
    version: number;
    /**
     * @generated from protobuf field: searchium.v1.DirectoryEntry root = 2;
     */
    root?: DirectoryEntry;
}
/**
 * @generated from protobuf message searchium.v1.ProjectDetails
 */
export interface ProjectDetails {
    /**
     * @generated from protobuf field: string root_path = 1;
     */
    rootPath: string;
    /**
     * @generated from protobuf field: searchium.v1.DirectoryDetails directory_details = 2;
     */
    directoryDetails?: DirectoryDetails;
    /**
     * @generated from protobuf field: searchium.v1.ProjectConfigurationDetails project_configuration_details = 3;
     */
    projectConfigurationDetails?: ProjectConfigurationDetails;
}
/**
 * @generated from protobuf message searchium.v1.ProjectConfigurationDetails
 */
export interface ProjectConfigurationDetails {
    /**
     * @generated from protobuf field: searchium.v1.ProjectConfigurationSectionDetails ignore_paths_section = 1;
     */
    ignorePathsSection?: ProjectConfigurationSectionDetails;
    /**
     * @generated from protobuf field: searchium.v1.ProjectConfigurationSectionDetails ignore_searchable_files_section = 2;
     */
    ignoreSearchableFilesSection?: ProjectConfigurationSectionDetails;
    /**
     * @generated from protobuf field: searchium.v1.ProjectConfigurationSectionDetails include_searchable_files_section = 3;
     */
    includeSearchableFilesSection?: ProjectConfigurationSectionDetails;
}
/**
 * @generated from protobuf message searchium.v1.ProjectConfigurationSectionDetails
 */
export interface ProjectConfigurationSectionDetails {
    /**
     * @generated from protobuf field: string containing_file_path = 1;
     */
    containingFilePath: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: string contents = 3;
     */
    contents: string;
}
/**
 * @generated from protobuf message searchium.v1.OptionalDirectoryEntry
 */
export interface OptionalDirectoryEntry {
    /**
     * @generated from protobuf field: bool has_value = 1;
     */
    hasValue: boolean;
    /**
     * @generated from protobuf field: searchium.v1.DirectoryEntry value = 2;
     */
    value?: DirectoryEntry;
}
/**
 * @generated from protobuf message searchium.v1.DirectoryEntry
 */
export interface DirectoryEntry {
    /**
     * @generated from protobuf field: repeated searchium.v1.FileSystemEntry entries = 1;
     */
    entries: FileSystemEntry[];
}
/**
 * @generated from protobuf message searchium.v1.FileEntry
 */
export interface FileEntry {
}
/**
 * @generated from protobuf message searchium.v1.FileSystemEntry
 */
export interface FileSystemEntry {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: searchium.v1.FileSystemEntryData data = 2;
     */
    data?: FileSystemEntryData;
    /**
     * @generated from protobuf oneof: subtype
     */
    subtype: {
        oneofKind: "fileEntry";
        /**
         * @generated from protobuf field: searchium.v1.FileEntry file_entry = 10;
         */
        fileEntry: FileEntry;
    } | {
        oneofKind: "directoryEntry";
        /**
         * @generated from protobuf field: searchium.v1.DirectoryEntry directory_entry = 11;
         */
        directoryEntry: DirectoryEntry;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message searchium.v1.FileSystemEntryData
 */
export interface FileSystemEntryData {
    /**
     * @generated from protobuf field: searchium.v1.FilePositionsData file_positions_data = 10;
     */
    filePositionsData?: FilePositionsData;
}
/**
 * @generated from protobuf message searchium.v1.FilePositionsData
 */
export interface FilePositionsData {
    /**
     * @generated from protobuf field: repeated searchium.v1.FilePositionSpan positions = 1;
     */
    positions: FilePositionSpan[];
}
/**
 * @generated from protobuf message searchium.v1.DirectoryDetails
 */
export interface DirectoryDetails {
    /**
     * @generated from protobuf field: string path = 1;
     */
    path: string;
    /**
     * @generated from protobuf field: int64 directory_count = 2;
     */
    directoryCount: bigint;
    /**
     * @generated from protobuf field: int64 file_count = 3;
     */
    fileCount: bigint;
    /**
     * @generated from protobuf field: int64 searchable_files_count = 4;
     */
    searchableFilesCount: bigint;
    /**
     * @generated from protobuf field: int64 searchable_files_byte_length = 5;
     */
    searchableFilesByteLength: bigint;
    /**
     * @generated from protobuf field: int64 binary_files_count = 6;
     */
    binaryFilesCount: bigint;
    /**
     * @generated from protobuf field: int64 binary_files_byte_length = 7;
     */
    binaryFilesByteLength: bigint;
    /**
     * @generated from protobuf field: repeated searchium.v1.FileByExtensionDetails searchable_files_by_extension_details = 8;
     */
    searchableFilesByExtensionDetails: FileByExtensionDetails[];
    /**
     * @generated from protobuf field: repeated searchium.v1.LargeFileDetails large_searchable_file_details = 9;
     */
    largeSearchableFileDetails: LargeFileDetails[];
    /**
     * @generated from protobuf field: repeated searchium.v1.FileByExtensionDetails binary_files_by_extension_details = 10;
     */
    binaryFilesByExtensionDetails: FileByExtensionDetails[];
    /**
     * @generated from protobuf field: repeated searchium.v1.LargeFileDetails large_binary_files_details = 11;
     */
    largeBinaryFilesDetails: LargeFileDetails[];
}
/**
 * @generated from protobuf message searchium.v1.FileByExtensionDetails
 */
export interface FileByExtensionDetails {
    /**
     * @generated from protobuf field: string file_extension = 1;
     */
    fileExtension: string;
    /**
     * @generated from protobuf field: int64 file_count = 2;
     */
    fileCount: bigint;
    /**
     * @generated from protobuf field: int64 file_byte_length = 3;
     */
    fileByteLength: bigint;
}
/**
 * @generated from protobuf message searchium.v1.LargeFileDetails
 */
export interface LargeFileDetails {
    /**
     * @generated from protobuf field: string relative_path = 1;
     */
    relativePath: string;
    /**
     * @generated from protobuf field: int64 byte_length = 2;
     */
    byteLength: bigint;
}
/**
 * @generated from protobuf message searchium.v1.FileExtract
 */
export interface FileExtract {
    /**
     * @generated from protobuf field: string text = 1;
     */
    text: string;
    /**
     * @generated from protobuf field: int32 offset = 2;
     */
    offset: number;
    /**
     * @generated from protobuf field: int32 length = 3;
     */
    length: number;
    /**
     * @generated from protobuf field: int32 line_number = 4;
     */
    lineNumber: number;
    /**
     * @generated from protobuf field: int32 column_number = 5;
     */
    columnNumber: number;
}
/**
 * @generated from protobuf enum searchium.v1.IndexingServerStatus
 */
export enum IndexingServerStatus {
    /**
     * @generated from protobuf enum value: INDEXING_SERVER_STATUS_IDLE = 0;
     */
    IDLE = 0,
    /**
     * @generated from protobuf enum value: INDEXING_SERVER_STATUS_PAUSED = 1;
     */
    PAUSED = 1,
    /**
     * @generated from protobuf enum value: INDEXING_SERVER_STATUS_YIELD = 2;
     */
    YIELD = 2,
    /**
     * @generated from protobuf enum value: INDEXING_SERVER_STATUS_BUSY = 3;
     */
    BUSY = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class IpcMessage$Type extends MessageType<IpcMessage> {
    constructor() {
        super("searchium.v1.IpcMessage", [
            { no: 1, name: "request_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "protocol", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "data", kind: "message", T: () => IpcMessageData },
            { no: 10, name: "request", kind: "message", oneof: "requestResponse", T: () => IpcRequest },
            { no: 11, name: "response", kind: "message", oneof: "requestResponse", T: () => IpcResponse }
        ]);
    }
    create(value?: PartialMessage<IpcMessage>): IpcMessage {
        const message = { requestId: 0n, protocol: "", requestResponse: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IpcMessage>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IpcMessage): IpcMessage {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 request_id */ 1:
                    message.requestId = reader.int64().toBigInt();
                    break;
                case /* string protocol */ 2:
                    message.protocol = reader.string();
                    break;
                case /* searchium.v1.IpcMessageData data */ 3:
                    message.data = IpcMessageData.internalBinaryRead(reader, reader.uint32(), options, message.data);
                    break;
                case /* searchium.v1.IpcRequest request */ 10:
                    message.requestResponse = {
                        oneofKind: "request",
                        request: IpcRequest.internalBinaryRead(reader, reader.uint32(), options, (message.requestResponse as any).request)
                    };
                    break;
                case /* searchium.v1.IpcResponse response */ 11:
                    message.requestResponse = {
                        oneofKind: "response",
                        response: IpcResponse.internalBinaryRead(reader, reader.uint32(), options, (message.requestResponse as any).response)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: IpcMessage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 request_id = 1; */
        if (message.requestId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.requestId);
        /* string protocol = 2; */
        if (message.protocol !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.protocol);
        /* searchium.v1.IpcMessageData data = 3; */
        if (message.data)
            IpcMessageData.internalBinaryWrite(message.data, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.IpcRequest request = 10; */
        if (message.requestResponse.oneofKind === "request")
            IpcRequest.internalBinaryWrite(message.requestResponse.request, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.IpcResponse response = 11; */
        if (message.requestResponse.oneofKind === "response")
            IpcResponse.internalBinaryWrite(message.requestResponse.response, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.IpcMessage
 */
export const IpcMessage = new IpcMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpcMessageData$Type extends MessageType<IpcMessageData> {
    constructor() {
        super("searchium.v1.IpcMessageData", [
            { no: 10, name: "ipc_string_data", kind: "message", oneof: "subtype", T: () => IpcStringData },
            { no: 11, name: "typed_message", kind: "message", oneof: "subtype", T: () => TypedMessage },
            { no: 12, name: "error_response", kind: "message", oneof: "subtype", T: () => ErrorResponse }
        ]);
    }
    create(value?: PartialMessage<IpcMessageData>): IpcMessageData {
        const message = { subtype: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IpcMessageData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IpcMessageData): IpcMessageData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.IpcStringData ipc_string_data */ 10:
                    message.subtype = {
                        oneofKind: "ipcStringData",
                        ipcStringData: IpcStringData.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).ipcStringData)
                    };
                    break;
                case /* searchium.v1.TypedMessage typed_message */ 11:
                    message.subtype = {
                        oneofKind: "typedMessage",
                        typedMessage: TypedMessage.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).typedMessage)
                    };
                    break;
                case /* searchium.v1.ErrorResponse error_response */ 12:
                    message.subtype = {
                        oneofKind: "errorResponse",
                        errorResponse: ErrorResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).errorResponse)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: IpcMessageData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.IpcStringData ipc_string_data = 10; */
        if (message.subtype.oneofKind === "ipcStringData")
            IpcStringData.internalBinaryWrite(message.subtype.ipcStringData, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.TypedMessage typed_message = 11; */
        if (message.subtype.oneofKind === "typedMessage")
            TypedMessage.internalBinaryWrite(message.subtype.typedMessage, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.ErrorResponse error_response = 12; */
        if (message.subtype.oneofKind === "errorResponse")
            ErrorResponse.internalBinaryWrite(message.subtype.errorResponse, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.IpcMessageData
 */
export const IpcMessageData = new IpcMessageData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpcStringData$Type extends MessageType<IpcStringData> {
    constructor() {
        super("searchium.v1.IpcStringData", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<IpcStringData>): IpcStringData {
        const message = { text: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IpcStringData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IpcStringData): IpcStringData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: IpcStringData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.IpcStringData
 */
export const IpcStringData = new IpcStringData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TypedMessage$Type extends MessageType<TypedMessage> {
    constructor() {
        super("searchium.v1.TypedMessage", [
            { no: 1, name: "class_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "typed_request", kind: "message", oneof: "subtype", T: () => TypedRequest },
            { no: 11, name: "typed_response", kind: "message", oneof: "subtype", T: () => TypedResponse },
            { no: 12, name: "typed_event", kind: "message", oneof: "subtype", T: () => TypedEvent }
        ]);
    }
    create(value?: PartialMessage<TypedMessage>): TypedMessage {
        const message = { className: "", subtype: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TypedMessage>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TypedMessage): TypedMessage {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string class_name */ 1:
                    message.className = reader.string();
                    break;
                case /* searchium.v1.TypedRequest typed_request */ 10:
                    message.subtype = {
                        oneofKind: "typedRequest",
                        typedRequest: TypedRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).typedRequest)
                    };
                    break;
                case /* searchium.v1.TypedResponse typed_response */ 11:
                    message.subtype = {
                        oneofKind: "typedResponse",
                        typedResponse: TypedResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).typedResponse)
                    };
                    break;
                case /* searchium.v1.TypedEvent typed_event */ 12:
                    message.subtype = {
                        oneofKind: "typedEvent",
                        typedEvent: TypedEvent.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).typedEvent)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TypedMessage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string class_name = 1; */
        if (message.className !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.className);
        /* searchium.v1.TypedRequest typed_request = 10; */
        if (message.subtype.oneofKind === "typedRequest")
            TypedRequest.internalBinaryWrite(message.subtype.typedRequest, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.TypedResponse typed_response = 11; */
        if (message.subtype.oneofKind === "typedResponse")
            TypedResponse.internalBinaryWrite(message.subtype.typedResponse, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.TypedEvent typed_event = 12; */
        if (message.subtype.oneofKind === "typedEvent")
            TypedEvent.internalBinaryWrite(message.subtype.typedEvent, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.TypedMessage
 */
export const TypedMessage = new TypedMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ErrorResponse$Type extends MessageType<ErrorResponse> {
    constructor() {
        super("searchium.v1.ErrorResponse", [
            { no: 1, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "full_type_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "stack_trace", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "inner_error", kind: "message", T: () => ErrorResponse }
        ]);
    }
    create(value?: PartialMessage<ErrorResponse>): ErrorResponse {
        const message = { message: "", fullTypeName: "", stackTrace: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ErrorResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ErrorResponse): ErrorResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string message */ 1:
                    message.message = reader.string();
                    break;
                case /* string full_type_name */ 2:
                    message.fullTypeName = reader.string();
                    break;
                case /* string stack_trace */ 3:
                    message.stackTrace = reader.string();
                    break;
                case /* searchium.v1.ErrorResponse inner_error */ 4:
                    message.innerError = ErrorResponse.internalBinaryRead(reader, reader.uint32(), options, message.innerError);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ErrorResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string message = 1; */
        if (message.message !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.message);
        /* string full_type_name = 2; */
        if (message.fullTypeName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.fullTypeName);
        /* string stack_trace = 3; */
        if (message.stackTrace !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.stackTrace);
        /* searchium.v1.ErrorResponse inner_error = 4; */
        if (message.innerError)
            ErrorResponse.internalBinaryWrite(message.innerError, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.ErrorResponse
 */
export const ErrorResponse = new ErrorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TypedRequest$Type extends MessageType<TypedRequest> {
    constructor() {
        super("searchium.v1.TypedRequest", [
            { no: 10, name: "register_file_request", kind: "message", oneof: "subtype", T: () => RegisterFileRequest },
            { no: 11, name: "unregister_file_request", kind: "message", oneof: "subtype", T: () => UnregisterFileRequest },
            { no: 12, name: "get_file_system_request", kind: "message", oneof: "subtype", T: () => GetFileSystemRequest },
            { no: 13, name: "search_file_paths_request", kind: "message", oneof: "subtype", T: () => SearchFilePathsRequest },
            { no: 14, name: "search_code_request", kind: "message", oneof: "subtype", T: () => SearchCodeRequest },
            { no: 15, name: "get_file_system_version_request", kind: "message", oneof: "subtype", T: () => GetFileSystemVersionRequest },
            { no: 16, name: "get_file_extracts_request", kind: "message", oneof: "subtype", T: () => GetFileExtractsRequest },
            { no: 18, name: "get_directory_statistics_request", kind: "message", oneof: "subtype", T: () => GetDirectoryStatisticsRequest },
            { no: 19, name: "refresh_filesystem_tree_request", kind: "message", oneof: "subtype", T: () => RefreshFileSystemTreeRequest },
            { no: 20, name: "get_database_statistics_request", kind: "message", oneof: "subtype", T: () => GetDatabaseStatisticsRequest },
            { no: 21, name: "pause_indexing_request", kind: "message", oneof: "subtype", T: () => PauseIndexingRequest },
            { no: 22, name: "resume_indexing_request", kind: "message", oneof: "subtype", T: () => ResumeIndexingRequest },
            { no: 23, name: "get_database_details_request", kind: "message", oneof: "subtype", T: () => GetDatabaseDetailsRequest },
            { no: 24, name: "get_project_details_request", kind: "message", oneof: "subtype", T: () => GetProjectDetailsRequest },
            { no: 25, name: "get_directory_details_request", kind: "message", oneof: "subtype", T: () => GetDirectoryDetailsRequest },
            { no: 26, name: "get_filesystem_tree_request", kind: "message", oneof: "subtype", T: () => GetFilesystemTreeRequest },
            { no: 27, name: "get_directory_entries_request", kind: "message", oneof: "subtype", T: () => GetDirectoryEntriesRequest },
            { no: 28, name: "get_directory_entries_multiple_request", kind: "message", oneof: "subtype", T: () => GetDirectoryEntriesMultipleRequest }
        ]);
    }
    create(value?: PartialMessage<TypedRequest>): TypedRequest {
        const message = { subtype: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TypedRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TypedRequest): TypedRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.RegisterFileRequest register_file_request */ 10:
                    message.subtype = {
                        oneofKind: "registerFileRequest",
                        registerFileRequest: RegisterFileRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).registerFileRequest)
                    };
                    break;
                case /* searchium.v1.UnregisterFileRequest unregister_file_request */ 11:
                    message.subtype = {
                        oneofKind: "unregisterFileRequest",
                        unregisterFileRequest: UnregisterFileRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).unregisterFileRequest)
                    };
                    break;
                case /* searchium.v1.GetFileSystemRequest get_file_system_request */ 12:
                    message.subtype = {
                        oneofKind: "getFileSystemRequest",
                        getFileSystemRequest: GetFileSystemRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getFileSystemRequest)
                    };
                    break;
                case /* searchium.v1.SearchFilePathsRequest search_file_paths_request */ 13:
                    message.subtype = {
                        oneofKind: "searchFilePathsRequest",
                        searchFilePathsRequest: SearchFilePathsRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).searchFilePathsRequest)
                    };
                    break;
                case /* searchium.v1.SearchCodeRequest search_code_request */ 14:
                    message.subtype = {
                        oneofKind: "searchCodeRequest",
                        searchCodeRequest: SearchCodeRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).searchCodeRequest)
                    };
                    break;
                case /* searchium.v1.GetFileSystemVersionRequest get_file_system_version_request */ 15:
                    message.subtype = {
                        oneofKind: "getFileSystemVersionRequest",
                        getFileSystemVersionRequest: GetFileSystemVersionRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getFileSystemVersionRequest)
                    };
                    break;
                case /* searchium.v1.GetFileExtractsRequest get_file_extracts_request */ 16:
                    message.subtype = {
                        oneofKind: "getFileExtractsRequest",
                        getFileExtractsRequest: GetFileExtractsRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getFileExtractsRequest)
                    };
                    break;
                case /* searchium.v1.GetDirectoryStatisticsRequest get_directory_statistics_request */ 18:
                    message.subtype = {
                        oneofKind: "getDirectoryStatisticsRequest",
                        getDirectoryStatisticsRequest: GetDirectoryStatisticsRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDirectoryStatisticsRequest)
                    };
                    break;
                case /* searchium.v1.RefreshFileSystemTreeRequest refresh_filesystem_tree_request */ 19:
                    message.subtype = {
                        oneofKind: "refreshFilesystemTreeRequest",
                        refreshFilesystemTreeRequest: RefreshFileSystemTreeRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).refreshFilesystemTreeRequest)
                    };
                    break;
                case /* searchium.v1.GetDatabaseStatisticsRequest get_database_statistics_request */ 20:
                    message.subtype = {
                        oneofKind: "getDatabaseStatisticsRequest",
                        getDatabaseStatisticsRequest: GetDatabaseStatisticsRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDatabaseStatisticsRequest)
                    };
                    break;
                case /* searchium.v1.PauseIndexingRequest pause_indexing_request */ 21:
                    message.subtype = {
                        oneofKind: "pauseIndexingRequest",
                        pauseIndexingRequest: PauseIndexingRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).pauseIndexingRequest)
                    };
                    break;
                case /* searchium.v1.ResumeIndexingRequest resume_indexing_request */ 22:
                    message.subtype = {
                        oneofKind: "resumeIndexingRequest",
                        resumeIndexingRequest: ResumeIndexingRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).resumeIndexingRequest)
                    };
                    break;
                case /* searchium.v1.GetDatabaseDetailsRequest get_database_details_request */ 23:
                    message.subtype = {
                        oneofKind: "getDatabaseDetailsRequest",
                        getDatabaseDetailsRequest: GetDatabaseDetailsRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDatabaseDetailsRequest)
                    };
                    break;
                case /* searchium.v1.GetProjectDetailsRequest get_project_details_request */ 24:
                    message.subtype = {
                        oneofKind: "getProjectDetailsRequest",
                        getProjectDetailsRequest: GetProjectDetailsRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getProjectDetailsRequest)
                    };
                    break;
                case /* searchium.v1.GetDirectoryDetailsRequest get_directory_details_request */ 25:
                    message.subtype = {
                        oneofKind: "getDirectoryDetailsRequest",
                        getDirectoryDetailsRequest: GetDirectoryDetailsRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDirectoryDetailsRequest)
                    };
                    break;
                case /* searchium.v1.GetFilesystemTreeRequest get_filesystem_tree_request */ 26:
                    message.subtype = {
                        oneofKind: "getFilesystemTreeRequest",
                        getFilesystemTreeRequest: GetFilesystemTreeRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getFilesystemTreeRequest)
                    };
                    break;
                case /* searchium.v1.GetDirectoryEntriesRequest get_directory_entries_request */ 27:
                    message.subtype = {
                        oneofKind: "getDirectoryEntriesRequest",
                        getDirectoryEntriesRequest: GetDirectoryEntriesRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDirectoryEntriesRequest)
                    };
                    break;
                case /* searchium.v1.GetDirectoryEntriesMultipleRequest get_directory_entries_multiple_request */ 28:
                    message.subtype = {
                        oneofKind: "getDirectoryEntriesMultipleRequest",
                        getDirectoryEntriesMultipleRequest: GetDirectoryEntriesMultipleRequest.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDirectoryEntriesMultipleRequest)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TypedRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.RegisterFileRequest register_file_request = 10; */
        if (message.subtype.oneofKind === "registerFileRequest")
            RegisterFileRequest.internalBinaryWrite(message.subtype.registerFileRequest, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.UnregisterFileRequest unregister_file_request = 11; */
        if (message.subtype.oneofKind === "unregisterFileRequest")
            UnregisterFileRequest.internalBinaryWrite(message.subtype.unregisterFileRequest, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetFileSystemRequest get_file_system_request = 12; */
        if (message.subtype.oneofKind === "getFileSystemRequest")
            GetFileSystemRequest.internalBinaryWrite(message.subtype.getFileSystemRequest, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.SearchFilePathsRequest search_file_paths_request = 13; */
        if (message.subtype.oneofKind === "searchFilePathsRequest")
            SearchFilePathsRequest.internalBinaryWrite(message.subtype.searchFilePathsRequest, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.SearchCodeRequest search_code_request = 14; */
        if (message.subtype.oneofKind === "searchCodeRequest")
            SearchCodeRequest.internalBinaryWrite(message.subtype.searchCodeRequest, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetFileSystemVersionRequest get_file_system_version_request = 15; */
        if (message.subtype.oneofKind === "getFileSystemVersionRequest")
            GetFileSystemVersionRequest.internalBinaryWrite(message.subtype.getFileSystemVersionRequest, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetFileExtractsRequest get_file_extracts_request = 16; */
        if (message.subtype.oneofKind === "getFileExtractsRequest")
            GetFileExtractsRequest.internalBinaryWrite(message.subtype.getFileExtractsRequest, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDirectoryStatisticsRequest get_directory_statistics_request = 18; */
        if (message.subtype.oneofKind === "getDirectoryStatisticsRequest")
            GetDirectoryStatisticsRequest.internalBinaryWrite(message.subtype.getDirectoryStatisticsRequest, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.RefreshFileSystemTreeRequest refresh_filesystem_tree_request = 19; */
        if (message.subtype.oneofKind === "refreshFilesystemTreeRequest")
            RefreshFileSystemTreeRequest.internalBinaryWrite(message.subtype.refreshFilesystemTreeRequest, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDatabaseStatisticsRequest get_database_statistics_request = 20; */
        if (message.subtype.oneofKind === "getDatabaseStatisticsRequest")
            GetDatabaseStatisticsRequest.internalBinaryWrite(message.subtype.getDatabaseStatisticsRequest, writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.PauseIndexingRequest pause_indexing_request = 21; */
        if (message.subtype.oneofKind === "pauseIndexingRequest")
            PauseIndexingRequest.internalBinaryWrite(message.subtype.pauseIndexingRequest, writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.ResumeIndexingRequest resume_indexing_request = 22; */
        if (message.subtype.oneofKind === "resumeIndexingRequest")
            ResumeIndexingRequest.internalBinaryWrite(message.subtype.resumeIndexingRequest, writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDatabaseDetailsRequest get_database_details_request = 23; */
        if (message.subtype.oneofKind === "getDatabaseDetailsRequest")
            GetDatabaseDetailsRequest.internalBinaryWrite(message.subtype.getDatabaseDetailsRequest, writer.tag(23, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetProjectDetailsRequest get_project_details_request = 24; */
        if (message.subtype.oneofKind === "getProjectDetailsRequest")
            GetProjectDetailsRequest.internalBinaryWrite(message.subtype.getProjectDetailsRequest, writer.tag(24, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDirectoryDetailsRequest get_directory_details_request = 25; */
        if (message.subtype.oneofKind === "getDirectoryDetailsRequest")
            GetDirectoryDetailsRequest.internalBinaryWrite(message.subtype.getDirectoryDetailsRequest, writer.tag(25, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetFilesystemTreeRequest get_filesystem_tree_request = 26; */
        if (message.subtype.oneofKind === "getFilesystemTreeRequest")
            GetFilesystemTreeRequest.internalBinaryWrite(message.subtype.getFilesystemTreeRequest, writer.tag(26, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDirectoryEntriesRequest get_directory_entries_request = 27; */
        if (message.subtype.oneofKind === "getDirectoryEntriesRequest")
            GetDirectoryEntriesRequest.internalBinaryWrite(message.subtype.getDirectoryEntriesRequest, writer.tag(27, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDirectoryEntriesMultipleRequest get_directory_entries_multiple_request = 28; */
        if (message.subtype.oneofKind === "getDirectoryEntriesMultipleRequest")
            GetDirectoryEntriesMultipleRequest.internalBinaryWrite(message.subtype.getDirectoryEntriesMultipleRequest, writer.tag(28, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.TypedRequest
 */
export const TypedRequest = new TypedRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TypedResponse$Type extends MessageType<TypedResponse> {
    constructor() {
        super("searchium.v1.TypedResponse", [
            { no: 10, name: "done_response", kind: "message", oneof: "subtype", T: () => DoneResponse },
            { no: 11, name: "get_file_system_response", kind: "message", oneof: "subtype", T: () => GetFileSystemResponse },
            { no: 12, name: "search_file_paths_response", kind: "message", oneof: "subtype", T: () => SearchFilePathsResponse },
            { no: 13, name: "search_code_response", kind: "message", oneof: "subtype", T: () => SearchCodeResponse },
            { no: 14, name: "get_file_system_version_response", kind: "message", oneof: "subtype", T: () => GetFileSystemVersionResponse },
            { no: 16, name: "get_file_extracts_response", kind: "message", oneof: "subtype", T: () => GetFileExtractsResponse },
            { no: 17, name: "get_directory_statistics_response", kind: "message", oneof: "subtype", T: () => GetDirectoryStatisticsResponse },
            { no: 18, name: "refresh_file_system_tree_response", kind: "message", oneof: "subtype", T: () => RefreshFileSystemTreeResponse },
            { no: 19, name: "get_database_statistics_response", kind: "message", oneof: "subtype", T: () => GetDatabaseStatisticsResponse },
            { no: 20, name: "pause_resume_indexing_response", kind: "message", oneof: "subtype", T: () => PauseResumeIndexingResponse },
            { no: 21, name: "get_database_details_response", kind: "message", oneof: "subtype", T: () => GetDatabaseDetailsResponse },
            { no: 22, name: "get_project_details_response", kind: "message", oneof: "subtype", T: () => GetProjectDetailsResponse },
            { no: 23, name: "get_directory_details_response", kind: "message", oneof: "subtype", T: () => GetDirectoryDetailsResponse },
            { no: 24, name: "get_filesystem_tree_response", kind: "message", oneof: "subtype", T: () => GetFileSystemTreeResponse },
            { no: 25, name: "get_directory_entries_response", kind: "message", oneof: "subtype", T: () => GetDirectoryEntriesResponse },
            { no: 26, name: "get_directory_entries_multiple_response", kind: "message", oneof: "subtype", T: () => GetDirectoryEntriesMultipleResponse }
        ]);
    }
    create(value?: PartialMessage<TypedResponse>): TypedResponse {
        const message = { subtype: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TypedResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TypedResponse): TypedResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.DoneResponse done_response */ 10:
                    message.subtype = {
                        oneofKind: "doneResponse",
                        doneResponse: DoneResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).doneResponse)
                    };
                    break;
                case /* searchium.v1.GetFileSystemResponse get_file_system_response */ 11:
                    message.subtype = {
                        oneofKind: "getFileSystemResponse",
                        getFileSystemResponse: GetFileSystemResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getFileSystemResponse)
                    };
                    break;
                case /* searchium.v1.SearchFilePathsResponse search_file_paths_response */ 12:
                    message.subtype = {
                        oneofKind: "searchFilePathsResponse",
                        searchFilePathsResponse: SearchFilePathsResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).searchFilePathsResponse)
                    };
                    break;
                case /* searchium.v1.SearchCodeResponse search_code_response */ 13:
                    message.subtype = {
                        oneofKind: "searchCodeResponse",
                        searchCodeResponse: SearchCodeResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).searchCodeResponse)
                    };
                    break;
                case /* searchium.v1.GetFileSystemVersionResponse get_file_system_version_response */ 14:
                    message.subtype = {
                        oneofKind: "getFileSystemVersionResponse",
                        getFileSystemVersionResponse: GetFileSystemVersionResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getFileSystemVersionResponse)
                    };
                    break;
                case /* searchium.v1.GetFileExtractsResponse get_file_extracts_response */ 16:
                    message.subtype = {
                        oneofKind: "getFileExtractsResponse",
                        getFileExtractsResponse: GetFileExtractsResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getFileExtractsResponse)
                    };
                    break;
                case /* searchium.v1.GetDirectoryStatisticsResponse get_directory_statistics_response */ 17:
                    message.subtype = {
                        oneofKind: "getDirectoryStatisticsResponse",
                        getDirectoryStatisticsResponse: GetDirectoryStatisticsResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDirectoryStatisticsResponse)
                    };
                    break;
                case /* searchium.v1.RefreshFileSystemTreeResponse refresh_file_system_tree_response */ 18:
                    message.subtype = {
                        oneofKind: "refreshFileSystemTreeResponse",
                        refreshFileSystemTreeResponse: RefreshFileSystemTreeResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).refreshFileSystemTreeResponse)
                    };
                    break;
                case /* searchium.v1.GetDatabaseStatisticsResponse get_database_statistics_response */ 19:
                    message.subtype = {
                        oneofKind: "getDatabaseStatisticsResponse",
                        getDatabaseStatisticsResponse: GetDatabaseStatisticsResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDatabaseStatisticsResponse)
                    };
                    break;
                case /* searchium.v1.PauseResumeIndexingResponse pause_resume_indexing_response */ 20:
                    message.subtype = {
                        oneofKind: "pauseResumeIndexingResponse",
                        pauseResumeIndexingResponse: PauseResumeIndexingResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).pauseResumeIndexingResponse)
                    };
                    break;
                case /* searchium.v1.GetDatabaseDetailsResponse get_database_details_response */ 21:
                    message.subtype = {
                        oneofKind: "getDatabaseDetailsResponse",
                        getDatabaseDetailsResponse: GetDatabaseDetailsResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDatabaseDetailsResponse)
                    };
                    break;
                case /* searchium.v1.GetProjectDetailsResponse get_project_details_response */ 22:
                    message.subtype = {
                        oneofKind: "getProjectDetailsResponse",
                        getProjectDetailsResponse: GetProjectDetailsResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getProjectDetailsResponse)
                    };
                    break;
                case /* searchium.v1.GetDirectoryDetailsResponse get_directory_details_response */ 23:
                    message.subtype = {
                        oneofKind: "getDirectoryDetailsResponse",
                        getDirectoryDetailsResponse: GetDirectoryDetailsResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDirectoryDetailsResponse)
                    };
                    break;
                case /* searchium.v1.GetFileSystemTreeResponse get_filesystem_tree_response */ 24:
                    message.subtype = {
                        oneofKind: "getFilesystemTreeResponse",
                        getFilesystemTreeResponse: GetFileSystemTreeResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getFilesystemTreeResponse)
                    };
                    break;
                case /* searchium.v1.GetDirectoryEntriesResponse get_directory_entries_response */ 25:
                    message.subtype = {
                        oneofKind: "getDirectoryEntriesResponse",
                        getDirectoryEntriesResponse: GetDirectoryEntriesResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDirectoryEntriesResponse)
                    };
                    break;
                case /* searchium.v1.GetDirectoryEntriesMultipleResponse get_directory_entries_multiple_response */ 26:
                    message.subtype = {
                        oneofKind: "getDirectoryEntriesMultipleResponse",
                        getDirectoryEntriesMultipleResponse: GetDirectoryEntriesMultipleResponse.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).getDirectoryEntriesMultipleResponse)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TypedResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.DoneResponse done_response = 10; */
        if (message.subtype.oneofKind === "doneResponse")
            DoneResponse.internalBinaryWrite(message.subtype.doneResponse, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetFileSystemResponse get_file_system_response = 11; */
        if (message.subtype.oneofKind === "getFileSystemResponse")
            GetFileSystemResponse.internalBinaryWrite(message.subtype.getFileSystemResponse, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.SearchFilePathsResponse search_file_paths_response = 12; */
        if (message.subtype.oneofKind === "searchFilePathsResponse")
            SearchFilePathsResponse.internalBinaryWrite(message.subtype.searchFilePathsResponse, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.SearchCodeResponse search_code_response = 13; */
        if (message.subtype.oneofKind === "searchCodeResponse")
            SearchCodeResponse.internalBinaryWrite(message.subtype.searchCodeResponse, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetFileSystemVersionResponse get_file_system_version_response = 14; */
        if (message.subtype.oneofKind === "getFileSystemVersionResponse")
            GetFileSystemVersionResponse.internalBinaryWrite(message.subtype.getFileSystemVersionResponse, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetFileExtractsResponse get_file_extracts_response = 16; */
        if (message.subtype.oneofKind === "getFileExtractsResponse")
            GetFileExtractsResponse.internalBinaryWrite(message.subtype.getFileExtractsResponse, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDirectoryStatisticsResponse get_directory_statistics_response = 17; */
        if (message.subtype.oneofKind === "getDirectoryStatisticsResponse")
            GetDirectoryStatisticsResponse.internalBinaryWrite(message.subtype.getDirectoryStatisticsResponse, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.RefreshFileSystemTreeResponse refresh_file_system_tree_response = 18; */
        if (message.subtype.oneofKind === "refreshFileSystemTreeResponse")
            RefreshFileSystemTreeResponse.internalBinaryWrite(message.subtype.refreshFileSystemTreeResponse, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDatabaseStatisticsResponse get_database_statistics_response = 19; */
        if (message.subtype.oneofKind === "getDatabaseStatisticsResponse")
            GetDatabaseStatisticsResponse.internalBinaryWrite(message.subtype.getDatabaseStatisticsResponse, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.PauseResumeIndexingResponse pause_resume_indexing_response = 20; */
        if (message.subtype.oneofKind === "pauseResumeIndexingResponse")
            PauseResumeIndexingResponse.internalBinaryWrite(message.subtype.pauseResumeIndexingResponse, writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDatabaseDetailsResponse get_database_details_response = 21; */
        if (message.subtype.oneofKind === "getDatabaseDetailsResponse")
            GetDatabaseDetailsResponse.internalBinaryWrite(message.subtype.getDatabaseDetailsResponse, writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetProjectDetailsResponse get_project_details_response = 22; */
        if (message.subtype.oneofKind === "getProjectDetailsResponse")
            GetProjectDetailsResponse.internalBinaryWrite(message.subtype.getProjectDetailsResponse, writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDirectoryDetailsResponse get_directory_details_response = 23; */
        if (message.subtype.oneofKind === "getDirectoryDetailsResponse")
            GetDirectoryDetailsResponse.internalBinaryWrite(message.subtype.getDirectoryDetailsResponse, writer.tag(23, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetFileSystemTreeResponse get_filesystem_tree_response = 24; */
        if (message.subtype.oneofKind === "getFilesystemTreeResponse")
            GetFileSystemTreeResponse.internalBinaryWrite(message.subtype.getFilesystemTreeResponse, writer.tag(24, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDirectoryEntriesResponse get_directory_entries_response = 25; */
        if (message.subtype.oneofKind === "getDirectoryEntriesResponse")
            GetDirectoryEntriesResponse.internalBinaryWrite(message.subtype.getDirectoryEntriesResponse, writer.tag(25, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.GetDirectoryEntriesMultipleResponse get_directory_entries_multiple_response = 26; */
        if (message.subtype.oneofKind === "getDirectoryEntriesMultipleResponse")
            GetDirectoryEntriesMultipleResponse.internalBinaryWrite(message.subtype.getDirectoryEntriesMultipleResponse, writer.tag(26, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.TypedResponse
 */
export const TypedResponse = new TypedResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TypedEvent$Type extends MessageType<TypedEvent> {
    constructor() {
        super("searchium.v1.TypedEvent", [
            { no: 10, name: "paired_typed_event", kind: "message", oneof: "subtype", T: () => PairedTypedEvent },
            { no: 11, name: "progress_report_event", kind: "message", oneof: "subtype", T: () => ProgressReportEvent },
            { no: 21, name: "indexing_server_state_changed_event", kind: "message", oneof: "subtype", T: () => IndexingServerStateChangedEvent }
        ]);
    }
    create(value?: PartialMessage<TypedEvent>): TypedEvent {
        const message = { subtype: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TypedEvent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TypedEvent): TypedEvent {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.PairedTypedEvent paired_typed_event */ 10:
                    message.subtype = {
                        oneofKind: "pairedTypedEvent",
                        pairedTypedEvent: PairedTypedEvent.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).pairedTypedEvent)
                    };
                    break;
                case /* searchium.v1.ProgressReportEvent progress_report_event */ 11:
                    message.subtype = {
                        oneofKind: "progressReportEvent",
                        progressReportEvent: ProgressReportEvent.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).progressReportEvent)
                    };
                    break;
                case /* searchium.v1.IndexingServerStateChangedEvent indexing_server_state_changed_event */ 21:
                    message.subtype = {
                        oneofKind: "indexingServerStateChangedEvent",
                        indexingServerStateChangedEvent: IndexingServerStateChangedEvent.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).indexingServerStateChangedEvent)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TypedEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.PairedTypedEvent paired_typed_event = 10; */
        if (message.subtype.oneofKind === "pairedTypedEvent")
            PairedTypedEvent.internalBinaryWrite(message.subtype.pairedTypedEvent, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.ProgressReportEvent progress_report_event = 11; */
        if (message.subtype.oneofKind === "progressReportEvent")
            ProgressReportEvent.internalBinaryWrite(message.subtype.progressReportEvent, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.IndexingServerStateChangedEvent indexing_server_state_changed_event = 21; */
        if (message.subtype.oneofKind === "indexingServerStateChangedEvent")
            IndexingServerStateChangedEvent.internalBinaryWrite(message.subtype.indexingServerStateChangedEvent, writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.TypedEvent
 */
export const TypedEvent = new TypedEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PairedTypedEvent$Type extends MessageType<PairedTypedEvent> {
    constructor() {
        super("searchium.v1.PairedTypedEvent", [
            { no: 1, name: "operation_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "error", kind: "message", T: () => ErrorResponse },
            { no: 10, name: "file_system_scan_started", kind: "message", oneof: "subtype", T: () => FileSystemScanStarted },
            { no: 11, name: "file_system_scan_finished", kind: "message", oneof: "subtype", T: () => FileSystemScanFinished },
            { no: 12, name: "search_engine_files_loading", kind: "message", oneof: "subtype", T: () => SearchEngineFilesLoading },
            { no: 13, name: "search_engine_files_loading_progress", kind: "message", oneof: "subtype", T: () => SearchEngineFilesLoadingProgress },
            { no: 14, name: "search_engine_files_loaded", kind: "message", oneof: "subtype", T: () => SearchEngineFilesLoaded }
        ]);
    }
    create(value?: PartialMessage<PairedTypedEvent>): PairedTypedEvent {
        const message = { operationId: 0n, subtype: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PairedTypedEvent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PairedTypedEvent): PairedTypedEvent {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 operation_id */ 1:
                    message.operationId = reader.int64().toBigInt();
                    break;
                case /* searchium.v1.ErrorResponse error */ 2:
                    message.error = ErrorResponse.internalBinaryRead(reader, reader.uint32(), options, message.error);
                    break;
                case /* searchium.v1.FileSystemScanStarted file_system_scan_started */ 10:
                    message.subtype = {
                        oneofKind: "fileSystemScanStarted",
                        fileSystemScanStarted: FileSystemScanStarted.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).fileSystemScanStarted)
                    };
                    break;
                case /* searchium.v1.FileSystemScanFinished file_system_scan_finished */ 11:
                    message.subtype = {
                        oneofKind: "fileSystemScanFinished",
                        fileSystemScanFinished: FileSystemScanFinished.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).fileSystemScanFinished)
                    };
                    break;
                case /* searchium.v1.SearchEngineFilesLoading search_engine_files_loading */ 12:
                    message.subtype = {
                        oneofKind: "searchEngineFilesLoading",
                        searchEngineFilesLoading: SearchEngineFilesLoading.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).searchEngineFilesLoading)
                    };
                    break;
                case /* searchium.v1.SearchEngineFilesLoadingProgress search_engine_files_loading_progress */ 13:
                    message.subtype = {
                        oneofKind: "searchEngineFilesLoadingProgress",
                        searchEngineFilesLoadingProgress: SearchEngineFilesLoadingProgress.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).searchEngineFilesLoadingProgress)
                    };
                    break;
                case /* searchium.v1.SearchEngineFilesLoaded search_engine_files_loaded */ 14:
                    message.subtype = {
                        oneofKind: "searchEngineFilesLoaded",
                        searchEngineFilesLoaded: SearchEngineFilesLoaded.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).searchEngineFilesLoaded)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PairedTypedEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 operation_id = 1; */
        if (message.operationId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.operationId);
        /* searchium.v1.ErrorResponse error = 2; */
        if (message.error)
            ErrorResponse.internalBinaryWrite(message.error, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.FileSystemScanStarted file_system_scan_started = 10; */
        if (message.subtype.oneofKind === "fileSystemScanStarted")
            FileSystemScanStarted.internalBinaryWrite(message.subtype.fileSystemScanStarted, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.FileSystemScanFinished file_system_scan_finished = 11; */
        if (message.subtype.oneofKind === "fileSystemScanFinished")
            FileSystemScanFinished.internalBinaryWrite(message.subtype.fileSystemScanFinished, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.SearchEngineFilesLoading search_engine_files_loading = 12; */
        if (message.subtype.oneofKind === "searchEngineFilesLoading")
            SearchEngineFilesLoading.internalBinaryWrite(message.subtype.searchEngineFilesLoading, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.SearchEngineFilesLoadingProgress search_engine_files_loading_progress = 13; */
        if (message.subtype.oneofKind === "searchEngineFilesLoadingProgress")
            SearchEngineFilesLoadingProgress.internalBinaryWrite(message.subtype.searchEngineFilesLoadingProgress, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.SearchEngineFilesLoaded search_engine_files_loaded = 14; */
        if (message.subtype.oneofKind === "searchEngineFilesLoaded")
            SearchEngineFilesLoaded.internalBinaryWrite(message.subtype.searchEngineFilesLoaded, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.PairedTypedEvent
 */
export const PairedTypedEvent = new PairedTypedEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileSystemScanStarted$Type extends MessageType<FileSystemScanStarted> {
    constructor() {
        super("searchium.v1.FileSystemScanStarted", []);
    }
    create(value?: PartialMessage<FileSystemScanStarted>): FileSystemScanStarted {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileSystemScanStarted>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileSystemScanStarted): FileSystemScanStarted {
        return target ?? this.create();
    }
    internalBinaryWrite(message: FileSystemScanStarted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FileSystemScanStarted
 */
export const FileSystemScanStarted = new FileSystemScanStarted$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileSystemScanFinished$Type extends MessageType<FileSystemScanFinished> {
    constructor() {
        super("searchium.v1.FileSystemScanFinished", [
            { no: 1, name: "old_version", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "new_version", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<FileSystemScanFinished>): FileSystemScanFinished {
        const message = { oldVersion: 0, newVersion: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileSystemScanFinished>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileSystemScanFinished): FileSystemScanFinished {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 old_version */ 1:
                    message.oldVersion = reader.int32();
                    break;
                case /* int32 new_version */ 2:
                    message.newVersion = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileSystemScanFinished, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 old_version = 1; */
        if (message.oldVersion !== 0)
            writer.tag(1, WireType.Varint).int32(message.oldVersion);
        /* int32 new_version = 2; */
        if (message.newVersion !== 0)
            writer.tag(2, WireType.Varint).int32(message.newVersion);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FileSystemScanFinished
 */
export const FileSystemScanFinished = new FileSystemScanFinished$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchEngineFilesLoading$Type extends MessageType<SearchEngineFilesLoading> {
    constructor() {
        super("searchium.v1.SearchEngineFilesLoading", []);
    }
    create(value?: PartialMessage<SearchEngineFilesLoading>): SearchEngineFilesLoading {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SearchEngineFilesLoading>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SearchEngineFilesLoading): SearchEngineFilesLoading {
        return target ?? this.create();
    }
    internalBinaryWrite(message: SearchEngineFilesLoading, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.SearchEngineFilesLoading
 */
export const SearchEngineFilesLoading = new SearchEngineFilesLoading$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchEngineFilesLoadingProgress$Type extends MessageType<SearchEngineFilesLoadingProgress> {
    constructor() {
        super("searchium.v1.SearchEngineFilesLoadingProgress", []);
    }
    create(value?: PartialMessage<SearchEngineFilesLoadingProgress>): SearchEngineFilesLoadingProgress {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SearchEngineFilesLoadingProgress>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SearchEngineFilesLoadingProgress): SearchEngineFilesLoadingProgress {
        return target ?? this.create();
    }
    internalBinaryWrite(message: SearchEngineFilesLoadingProgress, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.SearchEngineFilesLoadingProgress
 */
export const SearchEngineFilesLoadingProgress = new SearchEngineFilesLoadingProgress$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchEngineFilesLoaded$Type extends MessageType<SearchEngineFilesLoaded> {
    constructor() {
        super("searchium.v1.SearchEngineFilesLoaded", [
            { no: 1, name: "tree_version", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<SearchEngineFilesLoaded>): SearchEngineFilesLoaded {
        const message = { treeVersion: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SearchEngineFilesLoaded>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SearchEngineFilesLoaded): SearchEngineFilesLoaded {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 tree_version */ 1:
                    message.treeVersion = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SearchEngineFilesLoaded, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 tree_version = 1; */
        if (message.treeVersion !== 0n)
            writer.tag(1, WireType.Varint).int64(message.treeVersion);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.SearchEngineFilesLoaded
 */
export const SearchEngineFilesLoaded = new SearchEngineFilesLoaded$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProgressReportEvent$Type extends MessageType<ProgressReportEvent> {
    constructor() {
        super("searchium.v1.ProgressReportEvent", [
            { no: 1, name: "display_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "completed", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ProgressReportEvent>): ProgressReportEvent {
        const message = { displayText: "", completed: 0, total: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProgressReportEvent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProgressReportEvent): ProgressReportEvent {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string display_text */ 1:
                    message.displayText = reader.string();
                    break;
                case /* int32 completed */ 2:
                    message.completed = reader.int32();
                    break;
                case /* int32 total */ 3:
                    message.total = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProgressReportEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string display_text = 1; */
        if (message.displayText !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.displayText);
        /* int32 completed = 2; */
        if (message.completed !== 0)
            writer.tag(2, WireType.Varint).int32(message.completed);
        /* int32 total = 3; */
        if (message.total !== 0)
            writer.tag(3, WireType.Varint).int32(message.total);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.ProgressReportEvent
 */
export const ProgressReportEvent = new ProgressReportEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexingServerStateChangedEvent$Type extends MessageType<IndexingServerStateChangedEvent> {
    constructor() {
        super("searchium.v1.IndexingServerStateChangedEvent", [
            { no: 1, name: "server_status", kind: "enum", T: () => ["searchium.v1.IndexingServerStatus", IndexingServerStatus, "INDEXING_SERVER_STATUS_"] },
            { no: 2, name: "last_index_updated_utc", kind: "message", T: () => DateTime }
        ]);
    }
    create(value?: PartialMessage<IndexingServerStateChangedEvent>): IndexingServerStateChangedEvent {
        const message = { serverStatus: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IndexingServerStateChangedEvent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IndexingServerStateChangedEvent): IndexingServerStateChangedEvent {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.IndexingServerStatus server_status */ 1:
                    message.serverStatus = reader.int32();
                    break;
                case /* bcl.DateTime last_index_updated_utc */ 2:
                    message.lastIndexUpdatedUtc = DateTime.internalBinaryRead(reader, reader.uint32(), options, message.lastIndexUpdatedUtc);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: IndexingServerStateChangedEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.IndexingServerStatus server_status = 1; */
        if (message.serverStatus !== 0)
            writer.tag(1, WireType.Varint).int32(message.serverStatus);
        /* bcl.DateTime last_index_updated_utc = 2; */
        if (message.lastIndexUpdatedUtc)
            DateTime.internalBinaryWrite(message.lastIndexUpdatedUtc, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.IndexingServerStateChangedEvent
 */
export const IndexingServerStateChangedEvent = new IndexingServerStateChangedEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpcRequest$Type extends MessageType<IpcRequest> {
    constructor() {
        super("searchium.v1.IpcRequest", [
            { no: 3, name: "run_on_sequential_queue", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<IpcRequest>): IpcRequest {
        const message = { runOnSequentialQueue: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IpcRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IpcRequest): IpcRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool run_on_sequential_queue */ 3:
                    message.runOnSequentialQueue = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: IpcRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool run_on_sequential_queue = 3; */
        if (message.runOnSequentialQueue !== false)
            writer.tag(3, WireType.Varint).bool(message.runOnSequentialQueue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.IpcRequest
 */
export const IpcRequest = new IpcRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpcResponse$Type extends MessageType<IpcResponse> {
    constructor() {
        super("searchium.v1.IpcResponse", [
            { no: 10, name: "ipc_event", kind: "message", T: () => IpcEvent }
        ]);
    }
    create(value?: PartialMessage<IpcResponse>): IpcResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IpcResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IpcResponse): IpcResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.IpcEvent ipc_event */ 10:
                    message.ipcEvent = IpcEvent.internalBinaryRead(reader, reader.uint32(), options, message.ipcEvent);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: IpcResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.IpcEvent ipc_event = 10; */
        if (message.ipcEvent)
            IpcEvent.internalBinaryWrite(message.ipcEvent, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.IpcResponse
 */
export const IpcResponse = new IpcResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpcEvent$Type extends MessageType<IpcEvent> {
    constructor() {
        super("searchium.v1.IpcEvent", []);
    }
    create(value?: PartialMessage<IpcEvent>): IpcEvent {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IpcEvent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IpcEvent): IpcEvent {
        return target ?? this.create();
    }
    internalBinaryWrite(message: IpcEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.IpcEvent
 */
export const IpcEvent = new IpcEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisterFileRequest$Type extends MessageType<RegisterFileRequest> {
    constructor() {
        super("searchium.v1.RegisterFileRequest", [
            { no: 1, name: "file_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<RegisterFileRequest>): RegisterFileRequest {
        const message = { fileName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RegisterFileRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RegisterFileRequest): RegisterFileRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string file_name */ 1:
                    message.fileName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RegisterFileRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string file_name = 1; */
        if (message.fileName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.fileName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.RegisterFileRequest
 */
export const RegisterFileRequest = new RegisterFileRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnregisterFileRequest$Type extends MessageType<UnregisterFileRequest> {
    constructor() {
        super("searchium.v1.UnregisterFileRequest", [
            { no: 1, name: "file_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UnregisterFileRequest>): UnregisterFileRequest {
        const message = { fileName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UnregisterFileRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnregisterFileRequest): UnregisterFileRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string file_name */ 1:
                    message.fileName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnregisterFileRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string file_name = 1; */
        if (message.fileName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.fileName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.UnregisterFileRequest
 */
export const UnregisterFileRequest = new UnregisterFileRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFileSystemRequest$Type extends MessageType<GetFileSystemRequest> {
    constructor() {
        super("searchium.v1.GetFileSystemRequest", [
            { no: 1, name: "known_version", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetFileSystemRequest>): GetFileSystemRequest {
        const message = { knownVersion: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFileSystemRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFileSystemRequest): GetFileSystemRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 known_version */ 1:
                    message.knownVersion = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFileSystemRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 known_version = 1; */
        if (message.knownVersion !== 0)
            writer.tag(1, WireType.Varint).int32(message.knownVersion);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetFileSystemRequest
 */
export const GetFileSystemRequest = new GetFileSystemRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchFilePathsRequest$Type extends MessageType<SearchFilePathsRequest> {
    constructor() {
        super("searchium.v1.SearchFilePathsRequest", [
            { no: 1, name: "search_params", kind: "message", T: () => SearchParams }
        ]);
    }
    create(value?: PartialMessage<SearchFilePathsRequest>): SearchFilePathsRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SearchFilePathsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SearchFilePathsRequest): SearchFilePathsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.SearchParams search_params */ 1:
                    message.searchParams = SearchParams.internalBinaryRead(reader, reader.uint32(), options, message.searchParams);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SearchFilePathsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.SearchParams search_params = 1; */
        if (message.searchParams)
            SearchParams.internalBinaryWrite(message.searchParams, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.SearchFilePathsRequest
 */
export const SearchFilePathsRequest = new SearchFilePathsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchCodeRequest$Type extends MessageType<SearchCodeRequest> {
    constructor() {
        super("searchium.v1.SearchCodeRequest", [
            { no: 1, name: "search_params", kind: "message", T: () => SearchParams }
        ]);
    }
    create(value?: PartialMessage<SearchCodeRequest>): SearchCodeRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SearchCodeRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SearchCodeRequest): SearchCodeRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.SearchParams search_params */ 1:
                    message.searchParams = SearchParams.internalBinaryRead(reader, reader.uint32(), options, message.searchParams);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SearchCodeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.SearchParams search_params = 1; */
        if (message.searchParams)
            SearchParams.internalBinaryWrite(message.searchParams, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.SearchCodeRequest
 */
export const SearchCodeRequest = new SearchCodeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFileSystemVersionRequest$Type extends MessageType<GetFileSystemVersionRequest> {
    constructor() {
        super("searchium.v1.GetFileSystemVersionRequest", []);
    }
    create(value?: PartialMessage<GetFileSystemVersionRequest>): GetFileSystemVersionRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFileSystemVersionRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFileSystemVersionRequest): GetFileSystemVersionRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetFileSystemVersionRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetFileSystemVersionRequest
 */
export const GetFileSystemVersionRequest = new GetFileSystemVersionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFileExtractsRequest$Type extends MessageType<GetFileExtractsRequest> {
    constructor() {
        super("searchium.v1.GetFileExtractsRequest", [
            { no: 1, name: "file_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "positions", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FilePositionSpan },
            { no: 3, name: "max_extract_length", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetFileExtractsRequest>): GetFileExtractsRequest {
        const message = { fileName: "", positions: [], maxExtractLength: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFileExtractsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFileExtractsRequest): GetFileExtractsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string file_name */ 1:
                    message.fileName = reader.string();
                    break;
                case /* repeated searchium.v1.FilePositionSpan positions */ 2:
                    message.positions.push(FilePositionSpan.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 max_extract_length */ 3:
                    message.maxExtractLength = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFileExtractsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string file_name = 1; */
        if (message.fileName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.fileName);
        /* repeated searchium.v1.FilePositionSpan positions = 2; */
        for (let i = 0; i < message.positions.length; i++)
            FilePositionSpan.internalBinaryWrite(message.positions[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* int32 max_extract_length = 3; */
        if (message.maxExtractLength !== 0)
            writer.tag(3, WireType.Varint).int32(message.maxExtractLength);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetFileExtractsRequest
 */
export const GetFileExtractsRequest = new GetFileExtractsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDirectoryStatisticsRequest$Type extends MessageType<GetDirectoryStatisticsRequest> {
    constructor() {
        super("searchium.v1.GetDirectoryStatisticsRequest", [
            { no: 1, name: "directory_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GetDirectoryStatisticsRequest>): GetDirectoryStatisticsRequest {
        const message = { directoryName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDirectoryStatisticsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDirectoryStatisticsRequest): GetDirectoryStatisticsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string directory_name */ 1:
                    message.directoryName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDirectoryStatisticsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string directory_name = 1; */
        if (message.directoryName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.directoryName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDirectoryStatisticsRequest
 */
export const GetDirectoryStatisticsRequest = new GetDirectoryStatisticsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RefreshFileSystemTreeRequest$Type extends MessageType<RefreshFileSystemTreeRequest> {
    constructor() {
        super("searchium.v1.RefreshFileSystemTreeRequest", []);
    }
    create(value?: PartialMessage<RefreshFileSystemTreeRequest>): RefreshFileSystemTreeRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RefreshFileSystemTreeRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RefreshFileSystemTreeRequest): RefreshFileSystemTreeRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: RefreshFileSystemTreeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.RefreshFileSystemTreeRequest
 */
export const RefreshFileSystemTreeRequest = new RefreshFileSystemTreeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDatabaseStatisticsRequest$Type extends MessageType<GetDatabaseStatisticsRequest> {
    constructor() {
        super("searchium.v1.GetDatabaseStatisticsRequest", [
            { no: 1, name: "force_garbage_collection", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GetDatabaseStatisticsRequest>): GetDatabaseStatisticsRequest {
        const message = { forceGarbageCollection: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDatabaseStatisticsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDatabaseStatisticsRequest): GetDatabaseStatisticsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool force_garbage_collection */ 1:
                    message.forceGarbageCollection = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDatabaseStatisticsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool force_garbage_collection = 1; */
        if (message.forceGarbageCollection !== false)
            writer.tag(1, WireType.Varint).bool(message.forceGarbageCollection);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDatabaseStatisticsRequest
 */
export const GetDatabaseStatisticsRequest = new GetDatabaseStatisticsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PauseIndexingRequest$Type extends MessageType<PauseIndexingRequest> {
    constructor() {
        super("searchium.v1.PauseIndexingRequest", []);
    }
    create(value?: PartialMessage<PauseIndexingRequest>): PauseIndexingRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PauseIndexingRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PauseIndexingRequest): PauseIndexingRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: PauseIndexingRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.PauseIndexingRequest
 */
export const PauseIndexingRequest = new PauseIndexingRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResumeIndexingRequest$Type extends MessageType<ResumeIndexingRequest> {
    constructor() {
        super("searchium.v1.ResumeIndexingRequest", []);
    }
    create(value?: PartialMessage<ResumeIndexingRequest>): ResumeIndexingRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ResumeIndexingRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ResumeIndexingRequest): ResumeIndexingRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ResumeIndexingRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.ResumeIndexingRequest
 */
export const ResumeIndexingRequest = new ResumeIndexingRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDatabaseDetailsRequest$Type extends MessageType<GetDatabaseDetailsRequest> {
    constructor() {
        super("searchium.v1.GetDatabaseDetailsRequest", [
            { no: 1, name: "max_files_by_extension_details_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "max_large_files_details_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetDatabaseDetailsRequest>): GetDatabaseDetailsRequest {
        const message = { maxFilesByExtensionDetailsCount: 0, maxLargeFilesDetailsCount: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDatabaseDetailsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDatabaseDetailsRequest): GetDatabaseDetailsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 max_files_by_extension_details_count */ 1:
                    message.maxFilesByExtensionDetailsCount = reader.int32();
                    break;
                case /* int32 max_large_files_details_count */ 2:
                    message.maxLargeFilesDetailsCount = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDatabaseDetailsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 max_files_by_extension_details_count = 1; */
        if (message.maxFilesByExtensionDetailsCount !== 0)
            writer.tag(1, WireType.Varint).int32(message.maxFilesByExtensionDetailsCount);
        /* int32 max_large_files_details_count = 2; */
        if (message.maxLargeFilesDetailsCount !== 0)
            writer.tag(2, WireType.Varint).int32(message.maxLargeFilesDetailsCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDatabaseDetailsRequest
 */
export const GetDatabaseDetailsRequest = new GetDatabaseDetailsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetProjectDetailsRequest$Type extends MessageType<GetProjectDetailsRequest> {
    constructor() {
        super("searchium.v1.GetProjectDetailsRequest", [
            { no: 1, name: "project_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "max_files_by_extension_details_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "max_large_files_details_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetProjectDetailsRequest>): GetProjectDetailsRequest {
        const message = { projectPath: "", maxFilesByExtensionDetailsCount: 0, maxLargeFilesDetailsCount: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetProjectDetailsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetProjectDetailsRequest): GetProjectDetailsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string project_path */ 1:
                    message.projectPath = reader.string();
                    break;
                case /* int32 max_files_by_extension_details_count */ 2:
                    message.maxFilesByExtensionDetailsCount = reader.int32();
                    break;
                case /* int32 max_large_files_details_count */ 3:
                    message.maxLargeFilesDetailsCount = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetProjectDetailsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string project_path = 1; */
        if (message.projectPath !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.projectPath);
        /* int32 max_files_by_extension_details_count = 2; */
        if (message.maxFilesByExtensionDetailsCount !== 0)
            writer.tag(2, WireType.Varint).int32(message.maxFilesByExtensionDetailsCount);
        /* int32 max_large_files_details_count = 3; */
        if (message.maxLargeFilesDetailsCount !== 0)
            writer.tag(3, WireType.Varint).int32(message.maxLargeFilesDetailsCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetProjectDetailsRequest
 */
export const GetProjectDetailsRequest = new GetProjectDetailsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDirectoryDetailsRequest$Type extends MessageType<GetDirectoryDetailsRequest> {
    constructor() {
        super("searchium.v1.GetDirectoryDetailsRequest", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "max_files_by_extension_details_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "max_large_files_details_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetDirectoryDetailsRequest>): GetDirectoryDetailsRequest {
        const message = { path: "", maxFilesByExtensionDetailsCount: 0, maxLargeFilesDetailsCount: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDirectoryDetailsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDirectoryDetailsRequest): GetDirectoryDetailsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string path */ 1:
                    message.path = reader.string();
                    break;
                case /* int32 max_files_by_extension_details_count */ 2:
                    message.maxFilesByExtensionDetailsCount = reader.int32();
                    break;
                case /* int32 max_large_files_details_count */ 3:
                    message.maxLargeFilesDetailsCount = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDirectoryDetailsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string path = 1; */
        if (message.path !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.path);
        /* int32 max_files_by_extension_details_count = 2; */
        if (message.maxFilesByExtensionDetailsCount !== 0)
            writer.tag(2, WireType.Varint).int32(message.maxFilesByExtensionDetailsCount);
        /* int32 max_large_files_details_count = 3; */
        if (message.maxLargeFilesDetailsCount !== 0)
            writer.tag(3, WireType.Varint).int32(message.maxLargeFilesDetailsCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDirectoryDetailsRequest
 */
export const GetDirectoryDetailsRequest = new GetDirectoryDetailsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFilesystemTreeRequest$Type extends MessageType<GetFilesystemTreeRequest> {
    constructor() {
        super("searchium.v1.GetFilesystemTreeRequest", [
            { no: 1, name: "known_version", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetFilesystemTreeRequest>): GetFilesystemTreeRequest {
        const message = { knownVersion: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFilesystemTreeRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFilesystemTreeRequest): GetFilesystemTreeRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 known_version */ 1:
                    message.knownVersion = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFilesystemTreeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 known_version = 1; */
        if (message.knownVersion !== 0)
            writer.tag(1, WireType.Varint).int32(message.knownVersion);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetFilesystemTreeRequest
 */
export const GetFilesystemTreeRequest = new GetFilesystemTreeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDirectoryEntriesRequest$Type extends MessageType<GetDirectoryEntriesRequest> {
    constructor() {
        super("searchium.v1.GetDirectoryEntriesRequest", [
            { no: 1, name: "project_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "directory_relative_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GetDirectoryEntriesRequest>): GetDirectoryEntriesRequest {
        const message = { projectPath: "", directoryRelativePath: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDirectoryEntriesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDirectoryEntriesRequest): GetDirectoryEntriesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string project_path */ 1:
                    message.projectPath = reader.string();
                    break;
                case /* string directory_relative_path */ 2:
                    message.directoryRelativePath = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDirectoryEntriesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string project_path = 1; */
        if (message.projectPath !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.projectPath);
        /* string directory_relative_path = 2; */
        if (message.directoryRelativePath !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.directoryRelativePath);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDirectoryEntriesRequest
 */
export const GetDirectoryEntriesRequest = new GetDirectoryEntriesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDirectoryEntriesMultipleRequest$Type extends MessageType<GetDirectoryEntriesMultipleRequest> {
    constructor() {
        super("searchium.v1.GetDirectoryEntriesMultipleRequest", [
            { no: 1, name: "project_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "relative_path_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GetDirectoryEntriesMultipleRequest>): GetDirectoryEntriesMultipleRequest {
        const message = { projectPath: "", relativePathList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDirectoryEntriesMultipleRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDirectoryEntriesMultipleRequest): GetDirectoryEntriesMultipleRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string project_path */ 1:
                    message.projectPath = reader.string();
                    break;
                case /* repeated string relative_path_list */ 2:
                    message.relativePathList.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDirectoryEntriesMultipleRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string project_path = 1; */
        if (message.projectPath !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.projectPath);
        /* repeated string relative_path_list = 2; */
        for (let i = 0; i < message.relativePathList.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.relativePathList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDirectoryEntriesMultipleRequest
 */
export const GetDirectoryEntriesMultipleRequest = new GetDirectoryEntriesMultipleRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FilePositionSpan$Type extends MessageType<FilePositionSpan> {
    constructor() {
        super("searchium.v1.FilePositionSpan", [
            { no: 1, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "length", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<FilePositionSpan>): FilePositionSpan {
        const message = { position: 0, length: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FilePositionSpan>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FilePositionSpan): FilePositionSpan {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 position */ 1:
                    message.position = reader.int32();
                    break;
                case /* int32 length */ 2:
                    message.length = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FilePositionSpan, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 position = 1; */
        if (message.position !== 0)
            writer.tag(1, WireType.Varint).int32(message.position);
        /* int32 length = 2; */
        if (message.length !== 0)
            writer.tag(2, WireType.Varint).int32(message.length);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FilePositionSpan
 */
export const FilePositionSpan = new FilePositionSpan$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchParams$Type extends MessageType<SearchParams> {
    constructor() {
        super("searchium.v1.SearchParams", [
            { no: 1, name: "search_string", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "file_path_pattern", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "max_results", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "match_case", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "match_whole_word", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "include_sym_links", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "regex", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "use_re2_engine", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<SearchParams>): SearchParams {
        const message = { searchString: "", filePathPattern: "", maxResults: 0, matchCase: false, matchWholeWord: false, includeSymLinks: false, regex: false, useRe2Engine: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SearchParams>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SearchParams): SearchParams {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string search_string */ 1:
                    message.searchString = reader.string();
                    break;
                case /* string file_path_pattern */ 2:
                    message.filePathPattern = reader.string();
                    break;
                case /* int32 max_results */ 3:
                    message.maxResults = reader.int32();
                    break;
                case /* bool match_case */ 4:
                    message.matchCase = reader.bool();
                    break;
                case /* bool match_whole_word */ 5:
                    message.matchWholeWord = reader.bool();
                    break;
                case /* bool include_sym_links */ 6:
                    message.includeSymLinks = reader.bool();
                    break;
                case /* bool regex */ 7:
                    message.regex = reader.bool();
                    break;
                case /* bool use_re2_engine */ 8:
                    message.useRe2Engine = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SearchParams, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string search_string = 1; */
        if (message.searchString !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.searchString);
        /* string file_path_pattern = 2; */
        if (message.filePathPattern !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.filePathPattern);
        /* int32 max_results = 3; */
        if (message.maxResults !== 0)
            writer.tag(3, WireType.Varint).int32(message.maxResults);
        /* bool match_case = 4; */
        if (message.matchCase !== false)
            writer.tag(4, WireType.Varint).bool(message.matchCase);
        /* bool match_whole_word = 5; */
        if (message.matchWholeWord !== false)
            writer.tag(5, WireType.Varint).bool(message.matchWholeWord);
        /* bool include_sym_links = 6; */
        if (message.includeSymLinks !== false)
            writer.tag(6, WireType.Varint).bool(message.includeSymLinks);
        /* bool regex = 7; */
        if (message.regex !== false)
            writer.tag(7, WireType.Varint).bool(message.regex);
        /* bool use_re2_engine = 8; */
        if (message.useRe2Engine !== false)
            writer.tag(8, WireType.Varint).bool(message.useRe2Engine);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.SearchParams
 */
export const SearchParams = new SearchParams$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DoneResponse$Type extends MessageType<DoneResponse> {
    constructor() {
        super("searchium.v1.DoneResponse", [
            { no: 1, name: "info", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<DoneResponse>): DoneResponse {
        const message = { info: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DoneResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DoneResponse): DoneResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string info */ 1:
                    message.info = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DoneResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string info = 1; */
        if (message.info !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.info);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.DoneResponse
 */
export const DoneResponse = new DoneResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFileSystemResponse$Type extends MessageType<GetFileSystemResponse> {
    constructor() {
        super("searchium.v1.GetFileSystemResponse", [
            { no: 1, name: "file_system_tree_obsolete", kind: "message", T: () => FileSystemTree_Obsolete }
        ]);
    }
    create(value?: PartialMessage<GetFileSystemResponse>): GetFileSystemResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFileSystemResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFileSystemResponse): GetFileSystemResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.FileSystemTree_Obsolete file_system_tree_obsolete */ 1:
                    message.fileSystemTreeObsolete = FileSystemTree_Obsolete.internalBinaryRead(reader, reader.uint32(), options, message.fileSystemTreeObsolete);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFileSystemResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.FileSystemTree_Obsolete file_system_tree_obsolete = 1; */
        if (message.fileSystemTreeObsolete)
            FileSystemTree_Obsolete.internalBinaryWrite(message.fileSystemTreeObsolete, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetFileSystemResponse
 */
export const GetFileSystemResponse = new GetFileSystemResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchFilePathsResponse$Type extends MessageType<SearchFilePathsResponse> {
    constructor() {
        super("searchium.v1.SearchFilePathsResponse", [
            { no: 1, name: "search_result", kind: "message", T: () => FileSystemEntry },
            { no: 2, name: "hit_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "total_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<SearchFilePathsResponse>): SearchFilePathsResponse {
        const message = { hitCount: 0n, totalCount: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SearchFilePathsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SearchFilePathsResponse): SearchFilePathsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.FileSystemEntry search_result */ 1:
                    message.searchResult = FileSystemEntry.internalBinaryRead(reader, reader.uint32(), options, message.searchResult);
                    break;
                case /* int64 hit_count */ 2:
                    message.hitCount = reader.int64().toBigInt();
                    break;
                case /* int64 total_count */ 3:
                    message.totalCount = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SearchFilePathsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.FileSystemEntry search_result = 1; */
        if (message.searchResult)
            FileSystemEntry.internalBinaryWrite(message.searchResult, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 hit_count = 2; */
        if (message.hitCount !== 0n)
            writer.tag(2, WireType.Varint).int64(message.hitCount);
        /* int64 total_count = 3; */
        if (message.totalCount !== 0n)
            writer.tag(3, WireType.Varint).int64(message.totalCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.SearchFilePathsResponse
 */
export const SearchFilePathsResponse = new SearchFilePathsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchCodeResponse$Type extends MessageType<SearchCodeResponse> {
    constructor() {
        super("searchium.v1.SearchCodeResponse", [
            { no: 1, name: "search_results", kind: "message", T: () => FileSystemEntry },
            { no: 2, name: "hit_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "searched_file_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "total_file_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<SearchCodeResponse>): SearchCodeResponse {
        const message = { hitCount: 0n, searchedFileCount: 0n, totalFileCount: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SearchCodeResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SearchCodeResponse): SearchCodeResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.FileSystemEntry search_results */ 1:
                    message.searchResults = FileSystemEntry.internalBinaryRead(reader, reader.uint32(), options, message.searchResults);
                    break;
                case /* int64 hit_count */ 2:
                    message.hitCount = reader.int64().toBigInt();
                    break;
                case /* int64 searched_file_count */ 3:
                    message.searchedFileCount = reader.int64().toBigInt();
                    break;
                case /* int64 total_file_count */ 4:
                    message.totalFileCount = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SearchCodeResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.FileSystemEntry search_results = 1; */
        if (message.searchResults)
            FileSystemEntry.internalBinaryWrite(message.searchResults, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 hit_count = 2; */
        if (message.hitCount !== 0n)
            writer.tag(2, WireType.Varint).int64(message.hitCount);
        /* int64 searched_file_count = 3; */
        if (message.searchedFileCount !== 0n)
            writer.tag(3, WireType.Varint).int64(message.searchedFileCount);
        /* int64 total_file_count = 4; */
        if (message.totalFileCount !== 0n)
            writer.tag(4, WireType.Varint).int64(message.totalFileCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.SearchCodeResponse
 */
export const SearchCodeResponse = new SearchCodeResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFileSystemVersionResponse$Type extends MessageType<GetFileSystemVersionResponse> {
    constructor() {
        super("searchium.v1.GetFileSystemVersionResponse", [
            { no: 1, name: "version", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetFileSystemVersionResponse>): GetFileSystemVersionResponse {
        const message = { version: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFileSystemVersionResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFileSystemVersionResponse): GetFileSystemVersionResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 version */ 1:
                    message.version = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFileSystemVersionResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 version = 1; */
        if (message.version !== 0)
            writer.tag(1, WireType.Varint).int32(message.version);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetFileSystemVersionResponse
 */
export const GetFileSystemVersionResponse = new GetFileSystemVersionResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFileExtractsResponse$Type extends MessageType<GetFileExtractsResponse> {
    constructor() {
        super("searchium.v1.GetFileExtractsResponse", [
            { no: 1, name: "file_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "file_extracts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FileExtract }
        ]);
    }
    create(value?: PartialMessage<GetFileExtractsResponse>): GetFileExtractsResponse {
        const message = { fileName: "", fileExtracts: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFileExtractsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFileExtractsResponse): GetFileExtractsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string file_name */ 1:
                    message.fileName = reader.string();
                    break;
                case /* repeated searchium.v1.FileExtract file_extracts */ 2:
                    message.fileExtracts.push(FileExtract.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFileExtractsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string file_name = 1; */
        if (message.fileName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.fileName);
        /* repeated searchium.v1.FileExtract file_extracts = 2; */
        for (let i = 0; i < message.fileExtracts.length; i++)
            FileExtract.internalBinaryWrite(message.fileExtracts[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetFileExtractsResponse
 */
export const GetFileExtractsResponse = new GetFileExtractsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDirectoryStatisticsResponse$Type extends MessageType<GetDirectoryStatisticsResponse> {
    constructor() {
        super("searchium.v1.GetDirectoryStatisticsResponse", [
            { no: 1, name: "directory_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "file_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "indexed_file_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "total_indexed_file_size", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<GetDirectoryStatisticsResponse>): GetDirectoryStatisticsResponse {
        const message = { directoryCount: 0, fileCount: 0, indexedFileCount: 0, totalIndexedFileSize: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDirectoryStatisticsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDirectoryStatisticsResponse): GetDirectoryStatisticsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 directory_count */ 1:
                    message.directoryCount = reader.int32();
                    break;
                case /* int32 file_count */ 2:
                    message.fileCount = reader.int32();
                    break;
                case /* int32 indexed_file_count */ 3:
                    message.indexedFileCount = reader.int32();
                    break;
                case /* int64 total_indexed_file_size */ 4:
                    message.totalIndexedFileSize = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDirectoryStatisticsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 directory_count = 1; */
        if (message.directoryCount !== 0)
            writer.tag(1, WireType.Varint).int32(message.directoryCount);
        /* int32 file_count = 2; */
        if (message.fileCount !== 0)
            writer.tag(2, WireType.Varint).int32(message.fileCount);
        /* int32 indexed_file_count = 3; */
        if (message.indexedFileCount !== 0)
            writer.tag(3, WireType.Varint).int32(message.indexedFileCount);
        /* int64 total_indexed_file_size = 4; */
        if (message.totalIndexedFileSize !== 0n)
            writer.tag(4, WireType.Varint).int64(message.totalIndexedFileSize);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDirectoryStatisticsResponse
 */
export const GetDirectoryStatisticsResponse = new GetDirectoryStatisticsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RefreshFileSystemTreeResponse$Type extends MessageType<RefreshFileSystemTreeResponse> {
    constructor() {
        super("searchium.v1.RefreshFileSystemTreeResponse", []);
    }
    create(value?: PartialMessage<RefreshFileSystemTreeResponse>): RefreshFileSystemTreeResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RefreshFileSystemTreeResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RefreshFileSystemTreeResponse): RefreshFileSystemTreeResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: RefreshFileSystemTreeResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.RefreshFileSystemTreeResponse
 */
export const RefreshFileSystemTreeResponse = new RefreshFileSystemTreeResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDatabaseStatisticsResponse$Type extends MessageType<GetDatabaseStatisticsResponse> {
    constructor() {
        super("searchium.v1.GetDatabaseStatisticsResponse", [
            { no: 1, name: "project_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "file_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "searchable_file_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "server_native_memory_usage", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "server_gc_memory_usage", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "index_last_updated_utc", kind: "message", T: () => DateTime },
            { no: 7, name: "server_status", kind: "enum", T: () => ["searchium.v1.IndexingServerStatus", IndexingServerStatus, "INDEXING_SERVER_STATUS_"] }
        ]);
    }
    create(value?: PartialMessage<GetDatabaseStatisticsResponse>): GetDatabaseStatisticsResponse {
        const message = { projectCount: 0, fileCount: 0n, searchableFileCount: 0n, serverNativeMemoryUsage: 0n, serverGcMemoryUsage: 0n, serverStatus: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDatabaseStatisticsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDatabaseStatisticsResponse): GetDatabaseStatisticsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 project_count */ 1:
                    message.projectCount = reader.int32();
                    break;
                case /* int64 file_count */ 2:
                    message.fileCount = reader.int64().toBigInt();
                    break;
                case /* int64 searchable_file_count */ 3:
                    message.searchableFileCount = reader.int64().toBigInt();
                    break;
                case /* int64 server_native_memory_usage */ 4:
                    message.serverNativeMemoryUsage = reader.int64().toBigInt();
                    break;
                case /* int64 server_gc_memory_usage */ 5:
                    message.serverGcMemoryUsage = reader.int64().toBigInt();
                    break;
                case /* bcl.DateTime index_last_updated_utc */ 6:
                    message.indexLastUpdatedUtc = DateTime.internalBinaryRead(reader, reader.uint32(), options, message.indexLastUpdatedUtc);
                    break;
                case /* searchium.v1.IndexingServerStatus server_status */ 7:
                    message.serverStatus = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDatabaseStatisticsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 project_count = 1; */
        if (message.projectCount !== 0)
            writer.tag(1, WireType.Varint).int32(message.projectCount);
        /* int64 file_count = 2; */
        if (message.fileCount !== 0n)
            writer.tag(2, WireType.Varint).int64(message.fileCount);
        /* int64 searchable_file_count = 3; */
        if (message.searchableFileCount !== 0n)
            writer.tag(3, WireType.Varint).int64(message.searchableFileCount);
        /* int64 server_native_memory_usage = 4; */
        if (message.serverNativeMemoryUsage !== 0n)
            writer.tag(4, WireType.Varint).int64(message.serverNativeMemoryUsage);
        /* int64 server_gc_memory_usage = 5; */
        if (message.serverGcMemoryUsage !== 0n)
            writer.tag(5, WireType.Varint).int64(message.serverGcMemoryUsage);
        /* bcl.DateTime index_last_updated_utc = 6; */
        if (message.indexLastUpdatedUtc)
            DateTime.internalBinaryWrite(message.indexLastUpdatedUtc, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.IndexingServerStatus server_status = 7; */
        if (message.serverStatus !== 0)
            writer.tag(7, WireType.Varint).int32(message.serverStatus);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDatabaseStatisticsResponse
 */
export const GetDatabaseStatisticsResponse = new GetDatabaseStatisticsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PauseResumeIndexingResponse$Type extends MessageType<PauseResumeIndexingResponse> {
    constructor() {
        super("searchium.v1.PauseResumeIndexingResponse", []);
    }
    create(value?: PartialMessage<PauseResumeIndexingResponse>): PauseResumeIndexingResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PauseResumeIndexingResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PauseResumeIndexingResponse): PauseResumeIndexingResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: PauseResumeIndexingResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.PauseResumeIndexingResponse
 */
export const PauseResumeIndexingResponse = new PauseResumeIndexingResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDatabaseDetailsResponse$Type extends MessageType<GetDatabaseDetailsResponse> {
    constructor() {
        super("searchium.v1.GetDatabaseDetailsResponse", [
            { no: 1, name: "project_details", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ProjectDetails }
        ]);
    }
    create(value?: PartialMessage<GetDatabaseDetailsResponse>): GetDatabaseDetailsResponse {
        const message = { projectDetails: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDatabaseDetailsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDatabaseDetailsResponse): GetDatabaseDetailsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated searchium.v1.ProjectDetails project_details */ 1:
                    message.projectDetails.push(ProjectDetails.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDatabaseDetailsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated searchium.v1.ProjectDetails project_details = 1; */
        for (let i = 0; i < message.projectDetails.length; i++)
            ProjectDetails.internalBinaryWrite(message.projectDetails[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDatabaseDetailsResponse
 */
export const GetDatabaseDetailsResponse = new GetDatabaseDetailsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetProjectDetailsResponse$Type extends MessageType<GetProjectDetailsResponse> {
    constructor() {
        super("searchium.v1.GetProjectDetailsResponse", [
            { no: 1, name: "project_details", kind: "message", T: () => ProjectDetails }
        ]);
    }
    create(value?: PartialMessage<GetProjectDetailsResponse>): GetProjectDetailsResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetProjectDetailsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetProjectDetailsResponse): GetProjectDetailsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.ProjectDetails project_details */ 1:
                    message.projectDetails = ProjectDetails.internalBinaryRead(reader, reader.uint32(), options, message.projectDetails);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetProjectDetailsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.ProjectDetails project_details = 1; */
        if (message.projectDetails)
            ProjectDetails.internalBinaryWrite(message.projectDetails, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetProjectDetailsResponse
 */
export const GetProjectDetailsResponse = new GetProjectDetailsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDirectoryDetailsResponse$Type extends MessageType<GetDirectoryDetailsResponse> {
    constructor() {
        super("searchium.v1.GetDirectoryDetailsResponse", [
            { no: 1, name: "directory_details", kind: "message", T: () => DirectoryDetails }
        ]);
    }
    create(value?: PartialMessage<GetDirectoryDetailsResponse>): GetDirectoryDetailsResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDirectoryDetailsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDirectoryDetailsResponse): GetDirectoryDetailsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.DirectoryDetails directory_details */ 1:
                    message.directoryDetails = DirectoryDetails.internalBinaryRead(reader, reader.uint32(), options, message.directoryDetails);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDirectoryDetailsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.DirectoryDetails directory_details = 1; */
        if (message.directoryDetails)
            DirectoryDetails.internalBinaryWrite(message.directoryDetails, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDirectoryDetailsResponse
 */
export const GetDirectoryDetailsResponse = new GetDirectoryDetailsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFileSystemTreeResponse$Type extends MessageType<GetFileSystemTreeResponse> {
    constructor() {
        super("searchium.v1.GetFileSystemTreeResponse", [
            { no: 1, name: "file_system_tree", kind: "message", T: () => FileSystemTree }
        ]);
    }
    create(value?: PartialMessage<GetFileSystemTreeResponse>): GetFileSystemTreeResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFileSystemTreeResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFileSystemTreeResponse): GetFileSystemTreeResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.FileSystemTree file_system_tree */ 1:
                    message.fileSystemTree = FileSystemTree.internalBinaryRead(reader, reader.uint32(), options, message.fileSystemTree);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFileSystemTreeResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.FileSystemTree file_system_tree = 1; */
        if (message.fileSystemTree)
            FileSystemTree.internalBinaryWrite(message.fileSystemTree, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetFileSystemTreeResponse
 */
export const GetFileSystemTreeResponse = new GetFileSystemTreeResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDirectoryEntriesResponse$Type extends MessageType<GetDirectoryEntriesResponse> {
    constructor() {
        super("searchium.v1.GetDirectoryEntriesResponse", [
            { no: 1, name: "directory_entry", kind: "message", T: () => DirectoryEntry }
        ]);
    }
    create(value?: PartialMessage<GetDirectoryEntriesResponse>): GetDirectoryEntriesResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDirectoryEntriesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDirectoryEntriesResponse): GetDirectoryEntriesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.DirectoryEntry directory_entry */ 1:
                    message.directoryEntry = DirectoryEntry.internalBinaryRead(reader, reader.uint32(), options, message.directoryEntry);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDirectoryEntriesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.DirectoryEntry directory_entry = 1; */
        if (message.directoryEntry)
            DirectoryEntry.internalBinaryWrite(message.directoryEntry, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDirectoryEntriesResponse
 */
export const GetDirectoryEntriesResponse = new GetDirectoryEntriesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDirectoryEntriesMultipleResponse$Type extends MessageType<GetDirectoryEntriesMultipleResponse> {
    constructor() {
        super("searchium.v1.GetDirectoryEntriesMultipleResponse", [
            { no: 1, name: "directory_entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OptionalDirectoryEntry }
        ]);
    }
    create(value?: PartialMessage<GetDirectoryEntriesMultipleResponse>): GetDirectoryEntriesMultipleResponse {
        const message = { directoryEntries: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetDirectoryEntriesMultipleResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetDirectoryEntriesMultipleResponse): GetDirectoryEntriesMultipleResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated searchium.v1.OptionalDirectoryEntry directory_entries */ 1:
                    message.directoryEntries.push(OptionalDirectoryEntry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetDirectoryEntriesMultipleResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated searchium.v1.OptionalDirectoryEntry directory_entries = 1; */
        for (let i = 0; i < message.directoryEntries.length; i++)
            OptionalDirectoryEntry.internalBinaryWrite(message.directoryEntries[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.GetDirectoryEntriesMultipleResponse
 */
export const GetDirectoryEntriesMultipleResponse = new GetDirectoryEntriesMultipleResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileSystemTree$Type extends MessageType<FileSystemTree> {
    constructor() {
        super("searchium.v1.FileSystemTree", [
            { no: 1, name: "version", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "projects", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ProjectEntry }
        ]);
    }
    create(value?: PartialMessage<FileSystemTree>): FileSystemTree {
        const message = { version: 0, projects: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileSystemTree>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileSystemTree): FileSystemTree {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 version */ 1:
                    message.version = reader.int32();
                    break;
                case /* repeated searchium.v1.ProjectEntry projects */ 2:
                    message.projects.push(ProjectEntry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileSystemTree, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 version = 1; */
        if (message.version !== 0)
            writer.tag(1, WireType.Varint).int32(message.version);
        /* repeated searchium.v1.ProjectEntry projects = 2; */
        for (let i = 0; i < message.projects.length; i++)
            ProjectEntry.internalBinaryWrite(message.projects[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FileSystemTree
 */
export const FileSystemTree = new FileSystemTree$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProjectEntry$Type extends MessageType<ProjectEntry> {
    constructor() {
        super("searchium.v1.ProjectEntry", [
            { no: 1, name: "root_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ProjectEntry>): ProjectEntry {
        const message = { rootPath: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProjectEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProjectEntry): ProjectEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string root_path */ 1:
                    message.rootPath = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProjectEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string root_path = 1; */
        if (message.rootPath !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.rootPath);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.ProjectEntry
 */
export const ProjectEntry = new ProjectEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileSystemTree_Obsolete$Type extends MessageType<FileSystemTree_Obsolete> {
    constructor() {
        super("searchium.v1.FileSystemTree_Obsolete", [
            { no: 1, name: "version", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "root", kind: "message", T: () => DirectoryEntry }
        ]);
    }
    create(value?: PartialMessage<FileSystemTree_Obsolete>): FileSystemTree_Obsolete {
        const message = { version: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileSystemTree_Obsolete>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileSystemTree_Obsolete): FileSystemTree_Obsolete {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 version */ 1:
                    message.version = reader.int32();
                    break;
                case /* searchium.v1.DirectoryEntry root */ 2:
                    message.root = DirectoryEntry.internalBinaryRead(reader, reader.uint32(), options, message.root);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileSystemTree_Obsolete, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 version = 1; */
        if (message.version !== 0)
            writer.tag(1, WireType.Varint).int32(message.version);
        /* searchium.v1.DirectoryEntry root = 2; */
        if (message.root)
            DirectoryEntry.internalBinaryWrite(message.root, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FileSystemTree_Obsolete
 */
export const FileSystemTree_Obsolete = new FileSystemTree_Obsolete$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProjectDetails$Type extends MessageType<ProjectDetails> {
    constructor() {
        super("searchium.v1.ProjectDetails", [
            { no: 1, name: "root_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "directory_details", kind: "message", T: () => DirectoryDetails },
            { no: 3, name: "project_configuration_details", kind: "message", T: () => ProjectConfigurationDetails }
        ]);
    }
    create(value?: PartialMessage<ProjectDetails>): ProjectDetails {
        const message = { rootPath: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProjectDetails>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProjectDetails): ProjectDetails {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string root_path */ 1:
                    message.rootPath = reader.string();
                    break;
                case /* searchium.v1.DirectoryDetails directory_details */ 2:
                    message.directoryDetails = DirectoryDetails.internalBinaryRead(reader, reader.uint32(), options, message.directoryDetails);
                    break;
                case /* searchium.v1.ProjectConfigurationDetails project_configuration_details */ 3:
                    message.projectConfigurationDetails = ProjectConfigurationDetails.internalBinaryRead(reader, reader.uint32(), options, message.projectConfigurationDetails);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProjectDetails, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string root_path = 1; */
        if (message.rootPath !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.rootPath);
        /* searchium.v1.DirectoryDetails directory_details = 2; */
        if (message.directoryDetails)
            DirectoryDetails.internalBinaryWrite(message.directoryDetails, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.ProjectConfigurationDetails project_configuration_details = 3; */
        if (message.projectConfigurationDetails)
            ProjectConfigurationDetails.internalBinaryWrite(message.projectConfigurationDetails, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.ProjectDetails
 */
export const ProjectDetails = new ProjectDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProjectConfigurationDetails$Type extends MessageType<ProjectConfigurationDetails> {
    constructor() {
        super("searchium.v1.ProjectConfigurationDetails", [
            { no: 1, name: "ignore_paths_section", kind: "message", T: () => ProjectConfigurationSectionDetails },
            { no: 2, name: "ignore_searchable_files_section", kind: "message", T: () => ProjectConfigurationSectionDetails },
            { no: 3, name: "include_searchable_files_section", kind: "message", T: () => ProjectConfigurationSectionDetails }
        ]);
    }
    create(value?: PartialMessage<ProjectConfigurationDetails>): ProjectConfigurationDetails {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProjectConfigurationDetails>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProjectConfigurationDetails): ProjectConfigurationDetails {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.ProjectConfigurationSectionDetails ignore_paths_section */ 1:
                    message.ignorePathsSection = ProjectConfigurationSectionDetails.internalBinaryRead(reader, reader.uint32(), options, message.ignorePathsSection);
                    break;
                case /* searchium.v1.ProjectConfigurationSectionDetails ignore_searchable_files_section */ 2:
                    message.ignoreSearchableFilesSection = ProjectConfigurationSectionDetails.internalBinaryRead(reader, reader.uint32(), options, message.ignoreSearchableFilesSection);
                    break;
                case /* searchium.v1.ProjectConfigurationSectionDetails include_searchable_files_section */ 3:
                    message.includeSearchableFilesSection = ProjectConfigurationSectionDetails.internalBinaryRead(reader, reader.uint32(), options, message.includeSearchableFilesSection);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProjectConfigurationDetails, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.ProjectConfigurationSectionDetails ignore_paths_section = 1; */
        if (message.ignorePathsSection)
            ProjectConfigurationSectionDetails.internalBinaryWrite(message.ignorePathsSection, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.ProjectConfigurationSectionDetails ignore_searchable_files_section = 2; */
        if (message.ignoreSearchableFilesSection)
            ProjectConfigurationSectionDetails.internalBinaryWrite(message.ignoreSearchableFilesSection, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.ProjectConfigurationSectionDetails include_searchable_files_section = 3; */
        if (message.includeSearchableFilesSection)
            ProjectConfigurationSectionDetails.internalBinaryWrite(message.includeSearchableFilesSection, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.ProjectConfigurationDetails
 */
export const ProjectConfigurationDetails = new ProjectConfigurationDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProjectConfigurationSectionDetails$Type extends MessageType<ProjectConfigurationSectionDetails> {
    constructor() {
        super("searchium.v1.ProjectConfigurationSectionDetails", [
            { no: 1, name: "containing_file_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "contents", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ProjectConfigurationSectionDetails>): ProjectConfigurationSectionDetails {
        const message = { containingFilePath: "", name: "", contents: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProjectConfigurationSectionDetails>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProjectConfigurationSectionDetails): ProjectConfigurationSectionDetails {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string containing_file_path */ 1:
                    message.containingFilePath = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string contents */ 3:
                    message.contents = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProjectConfigurationSectionDetails, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string containing_file_path = 1; */
        if (message.containingFilePath !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.containingFilePath);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string contents = 3; */
        if (message.contents !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.contents);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.ProjectConfigurationSectionDetails
 */
export const ProjectConfigurationSectionDetails = new ProjectConfigurationSectionDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OptionalDirectoryEntry$Type extends MessageType<OptionalDirectoryEntry> {
    constructor() {
        super("searchium.v1.OptionalDirectoryEntry", [
            { no: 1, name: "has_value", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "value", kind: "message", T: () => DirectoryEntry }
        ]);
    }
    create(value?: PartialMessage<OptionalDirectoryEntry>): OptionalDirectoryEntry {
        const message = { hasValue: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OptionalDirectoryEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OptionalDirectoryEntry): OptionalDirectoryEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool has_value */ 1:
                    message.hasValue = reader.bool();
                    break;
                case /* searchium.v1.DirectoryEntry value */ 2:
                    message.value = DirectoryEntry.internalBinaryRead(reader, reader.uint32(), options, message.value);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OptionalDirectoryEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool has_value = 1; */
        if (message.hasValue !== false)
            writer.tag(1, WireType.Varint).bool(message.hasValue);
        /* searchium.v1.DirectoryEntry value = 2; */
        if (message.value)
            DirectoryEntry.internalBinaryWrite(message.value, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.OptionalDirectoryEntry
 */
export const OptionalDirectoryEntry = new OptionalDirectoryEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DirectoryEntry$Type extends MessageType<DirectoryEntry> {
    constructor() {
        super("searchium.v1.DirectoryEntry", [
            { no: 1, name: "entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FileSystemEntry }
        ]);
    }
    create(value?: PartialMessage<DirectoryEntry>): DirectoryEntry {
        const message = { entries: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DirectoryEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DirectoryEntry): DirectoryEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated searchium.v1.FileSystemEntry entries */ 1:
                    message.entries.push(FileSystemEntry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DirectoryEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated searchium.v1.FileSystemEntry entries = 1; */
        for (let i = 0; i < message.entries.length; i++)
            FileSystemEntry.internalBinaryWrite(message.entries[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.DirectoryEntry
 */
export const DirectoryEntry = new DirectoryEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileEntry$Type extends MessageType<FileEntry> {
    constructor() {
        super("searchium.v1.FileEntry", []);
    }
    create(value?: PartialMessage<FileEntry>): FileEntry {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileEntry): FileEntry {
        return target ?? this.create();
    }
    internalBinaryWrite(message: FileEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FileEntry
 */
export const FileEntry = new FileEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileSystemEntry$Type extends MessageType<FileSystemEntry> {
    constructor() {
        super("searchium.v1.FileSystemEntry", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "data", kind: "message", T: () => FileSystemEntryData },
            { no: 10, name: "file_entry", kind: "message", oneof: "subtype", T: () => FileEntry },
            { no: 11, name: "directory_entry", kind: "message", oneof: "subtype", T: () => DirectoryEntry }
        ]);
    }
    create(value?: PartialMessage<FileSystemEntry>): FileSystemEntry {
        const message = { name: "", subtype: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileSystemEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileSystemEntry): FileSystemEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* searchium.v1.FileSystemEntryData data */ 2:
                    message.data = FileSystemEntryData.internalBinaryRead(reader, reader.uint32(), options, message.data);
                    break;
                case /* searchium.v1.FileEntry file_entry */ 10:
                    message.subtype = {
                        oneofKind: "fileEntry",
                        fileEntry: FileEntry.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).fileEntry)
                    };
                    break;
                case /* searchium.v1.DirectoryEntry directory_entry */ 11:
                    message.subtype = {
                        oneofKind: "directoryEntry",
                        directoryEntry: DirectoryEntry.internalBinaryRead(reader, reader.uint32(), options, (message.subtype as any).directoryEntry)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileSystemEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* searchium.v1.FileSystemEntryData data = 2; */
        if (message.data)
            FileSystemEntryData.internalBinaryWrite(message.data, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.FileEntry file_entry = 10; */
        if (message.subtype.oneofKind === "fileEntry")
            FileEntry.internalBinaryWrite(message.subtype.fileEntry, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v1.DirectoryEntry directory_entry = 11; */
        if (message.subtype.oneofKind === "directoryEntry")
            DirectoryEntry.internalBinaryWrite(message.subtype.directoryEntry, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FileSystemEntry
 */
export const FileSystemEntry = new FileSystemEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileSystemEntryData$Type extends MessageType<FileSystemEntryData> {
    constructor() {
        super("searchium.v1.FileSystemEntryData", [
            { no: 10, name: "file_positions_data", kind: "message", T: () => FilePositionsData }
        ]);
    }
    create(value?: PartialMessage<FileSystemEntryData>): FileSystemEntryData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileSystemEntryData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileSystemEntryData): FileSystemEntryData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v1.FilePositionsData file_positions_data */ 10:
                    message.filePositionsData = FilePositionsData.internalBinaryRead(reader, reader.uint32(), options, message.filePositionsData);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileSystemEntryData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v1.FilePositionsData file_positions_data = 10; */
        if (message.filePositionsData)
            FilePositionsData.internalBinaryWrite(message.filePositionsData, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FileSystemEntryData
 */
export const FileSystemEntryData = new FileSystemEntryData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FilePositionsData$Type extends MessageType<FilePositionsData> {
    constructor() {
        super("searchium.v1.FilePositionsData", [
            { no: 1, name: "positions", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FilePositionSpan }
        ]);
    }
    create(value?: PartialMessage<FilePositionsData>): FilePositionsData {
        const message = { positions: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FilePositionsData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FilePositionsData): FilePositionsData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated searchium.v1.FilePositionSpan positions */ 1:
                    message.positions.push(FilePositionSpan.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FilePositionsData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated searchium.v1.FilePositionSpan positions = 1; */
        for (let i = 0; i < message.positions.length; i++)
            FilePositionSpan.internalBinaryWrite(message.positions[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FilePositionsData
 */
export const FilePositionsData = new FilePositionsData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DirectoryDetails$Type extends MessageType<DirectoryDetails> {
    constructor() {
        super("searchium.v1.DirectoryDetails", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "directory_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "file_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "searchable_files_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "searchable_files_byte_length", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "binary_files_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "binary_files_byte_length", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "searchable_files_by_extension_details", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FileByExtensionDetails },
            { no: 9, name: "large_searchable_file_details", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LargeFileDetails },
            { no: 10, name: "binary_files_by_extension_details", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FileByExtensionDetails },
            { no: 11, name: "large_binary_files_details", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LargeFileDetails }
        ]);
    }
    create(value?: PartialMessage<DirectoryDetails>): DirectoryDetails {
        const message = { path: "", directoryCount: 0n, fileCount: 0n, searchableFilesCount: 0n, searchableFilesByteLength: 0n, binaryFilesCount: 0n, binaryFilesByteLength: 0n, searchableFilesByExtensionDetails: [], largeSearchableFileDetails: [], binaryFilesByExtensionDetails: [], largeBinaryFilesDetails: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DirectoryDetails>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DirectoryDetails): DirectoryDetails {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string path */ 1:
                    message.path = reader.string();
                    break;
                case /* int64 directory_count */ 2:
                    message.directoryCount = reader.int64().toBigInt();
                    break;
                case /* int64 file_count */ 3:
                    message.fileCount = reader.int64().toBigInt();
                    break;
                case /* int64 searchable_files_count */ 4:
                    message.searchableFilesCount = reader.int64().toBigInt();
                    break;
                case /* int64 searchable_files_byte_length */ 5:
                    message.searchableFilesByteLength = reader.int64().toBigInt();
                    break;
                case /* int64 binary_files_count */ 6:
                    message.binaryFilesCount = reader.int64().toBigInt();
                    break;
                case /* int64 binary_files_byte_length */ 7:
                    message.binaryFilesByteLength = reader.int64().toBigInt();
                    break;
                case /* repeated searchium.v1.FileByExtensionDetails searchable_files_by_extension_details */ 8:
                    message.searchableFilesByExtensionDetails.push(FileByExtensionDetails.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated searchium.v1.LargeFileDetails large_searchable_file_details */ 9:
                    message.largeSearchableFileDetails.push(LargeFileDetails.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated searchium.v1.FileByExtensionDetails binary_files_by_extension_details */ 10:
                    message.binaryFilesByExtensionDetails.push(FileByExtensionDetails.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated searchium.v1.LargeFileDetails large_binary_files_details */ 11:
                    message.largeBinaryFilesDetails.push(LargeFileDetails.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DirectoryDetails, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string path = 1; */
        if (message.path !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.path);
        /* int64 directory_count = 2; */
        if (message.directoryCount !== 0n)
            writer.tag(2, WireType.Varint).int64(message.directoryCount);
        /* int64 file_count = 3; */
        if (message.fileCount !== 0n)
            writer.tag(3, WireType.Varint).int64(message.fileCount);
        /* int64 searchable_files_count = 4; */
        if (message.searchableFilesCount !== 0n)
            writer.tag(4, WireType.Varint).int64(message.searchableFilesCount);
        /* int64 searchable_files_byte_length = 5; */
        if (message.searchableFilesByteLength !== 0n)
            writer.tag(5, WireType.Varint).int64(message.searchableFilesByteLength);
        /* int64 binary_files_count = 6; */
        if (message.binaryFilesCount !== 0n)
            writer.tag(6, WireType.Varint).int64(message.binaryFilesCount);
        /* int64 binary_files_byte_length = 7; */
        if (message.binaryFilesByteLength !== 0n)
            writer.tag(7, WireType.Varint).int64(message.binaryFilesByteLength);
        /* repeated searchium.v1.FileByExtensionDetails searchable_files_by_extension_details = 8; */
        for (let i = 0; i < message.searchableFilesByExtensionDetails.length; i++)
            FileByExtensionDetails.internalBinaryWrite(message.searchableFilesByExtensionDetails[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* repeated searchium.v1.LargeFileDetails large_searchable_file_details = 9; */
        for (let i = 0; i < message.largeSearchableFileDetails.length; i++)
            LargeFileDetails.internalBinaryWrite(message.largeSearchableFileDetails[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* repeated searchium.v1.FileByExtensionDetails binary_files_by_extension_details = 10; */
        for (let i = 0; i < message.binaryFilesByExtensionDetails.length; i++)
            FileByExtensionDetails.internalBinaryWrite(message.binaryFilesByExtensionDetails[i], writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* repeated searchium.v1.LargeFileDetails large_binary_files_details = 11; */
        for (let i = 0; i < message.largeBinaryFilesDetails.length; i++)
            LargeFileDetails.internalBinaryWrite(message.largeBinaryFilesDetails[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.DirectoryDetails
 */
export const DirectoryDetails = new DirectoryDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileByExtensionDetails$Type extends MessageType<FileByExtensionDetails> {
    constructor() {
        super("searchium.v1.FileByExtensionDetails", [
            { no: 1, name: "file_extension", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "file_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "file_byte_length", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<FileByExtensionDetails>): FileByExtensionDetails {
        const message = { fileExtension: "", fileCount: 0n, fileByteLength: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileByExtensionDetails>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileByExtensionDetails): FileByExtensionDetails {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string file_extension */ 1:
                    message.fileExtension = reader.string();
                    break;
                case /* int64 file_count */ 2:
                    message.fileCount = reader.int64().toBigInt();
                    break;
                case /* int64 file_byte_length */ 3:
                    message.fileByteLength = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileByExtensionDetails, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string file_extension = 1; */
        if (message.fileExtension !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.fileExtension);
        /* int64 file_count = 2; */
        if (message.fileCount !== 0n)
            writer.tag(2, WireType.Varint).int64(message.fileCount);
        /* int64 file_byte_length = 3; */
        if (message.fileByteLength !== 0n)
            writer.tag(3, WireType.Varint).int64(message.fileByteLength);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FileByExtensionDetails
 */
export const FileByExtensionDetails = new FileByExtensionDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LargeFileDetails$Type extends MessageType<LargeFileDetails> {
    constructor() {
        super("searchium.v1.LargeFileDetails", [
            { no: 1, name: "relative_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "byte_length", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<LargeFileDetails>): LargeFileDetails {
        const message = { relativePath: "", byteLength: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LargeFileDetails>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LargeFileDetails): LargeFileDetails {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string relative_path */ 1:
                    message.relativePath = reader.string();
                    break;
                case /* int64 byte_length */ 2:
                    message.byteLength = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LargeFileDetails, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string relative_path = 1; */
        if (message.relativePath !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.relativePath);
        /* int64 byte_length = 2; */
        if (message.byteLength !== 0n)
            writer.tag(2, WireType.Varint).int64(message.byteLength);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.LargeFileDetails
 */
export const LargeFileDetails = new LargeFileDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileExtract$Type extends MessageType<FileExtract> {
    constructor() {
        super("searchium.v1.FileExtract", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "offset", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "length", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "line_number", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "column_number", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<FileExtract>): FileExtract {
        const message = { text: "", offset: 0, length: 0, lineNumber: 0, columnNumber: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileExtract>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileExtract): FileExtract {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* int32 offset */ 2:
                    message.offset = reader.int32();
                    break;
                case /* int32 length */ 3:
                    message.length = reader.int32();
                    break;
                case /* int32 line_number */ 4:
                    message.lineNumber = reader.int32();
                    break;
                case /* int32 column_number */ 5:
                    message.columnNumber = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileExtract, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* int32 offset = 2; */
        if (message.offset !== 0)
            writer.tag(2, WireType.Varint).int32(message.offset);
        /* int32 length = 3; */
        if (message.length !== 0)
            writer.tag(3, WireType.Varint).int32(message.length);
        /* int32 line_number = 4; */
        if (message.lineNumber !== 0)
            writer.tag(4, WireType.Varint).int32(message.lineNumber);
        /* int32 column_number = 5; */
        if (message.columnNumber !== 0)
            writer.tag(5, WireType.Varint).int32(message.columnNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v1.FileExtract
 */
export const FileExtract = new FileExtract$Type();
