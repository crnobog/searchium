/* eslint-disable */
// @generated by protobuf-ts 2.8.3 with parameter output_legacy_commonjs,eslint_disable
// @generated from protobuf file "searchium/v2/searchium.proto" (package "searchium.v2", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Duration } from "../../google/protobuf/duration";
import { Timestamp } from "../../google/protobuf/timestamp";
/**
 * @generated from protobuf message searchium.v2.HelloRequest
 */
export interface HelloRequest {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message searchium.v2.HelloResponse
 */
export interface HelloResponse {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message searchium.v2.EmptyRequest
 */
export interface EmptyRequest {
}
/**
 * @generated from protobuf message searchium.v2.GenericResponse
 */
export interface GenericResponse {
    /**
     * @generated from protobuf field: searchium.v2.GenericError error = 1;
     */
    error: GenericError;
    /**
     * @generated from protobuf field: string log_message = 2;
     */
    logMessage: string;
}
/**
 * @generated from protobuf message searchium.v2.FolderRegisterRequest
 */
export interface FolderRegisterRequest {
    /**
     * @generated from protobuf field: string path = 1;
     */
    path: string;
    /**
     * @generated from protobuf field: repeated string ignore_file_globs = 2;
     */
    ignoreFileGlobs: string[];
    /**
     * @generated from protobuf field: repeated string ignore_search_globs = 3;
     */
    ignoreSearchGlobs: string[];
}
/**
 * @generated from protobuf message searchium.v2.FolderUnregisterRequest
 */
export interface FolderUnregisterRequest {
    /**
     * @generated from protobuf field: string path = 1;
     */
    path: string;
}
/**
 * @generated from protobuf message searchium.v2.IndexUpdate
 */
export interface IndexUpdate {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp timestamp = 1;
     */
    timestamp?: Timestamp;
    /**
     * @generated from protobuf oneof: type
     */
    type: {
        oneofKind: "filesystemScanStart";
        /**
         * @generated from protobuf field: searchium.v2.IndexUpdate.FilesystemScanStart filesystem_scan_start = 10;
         */
        filesystemScanStart: IndexUpdate_FilesystemScanStart;
    } | {
        oneofKind: "filesystemScanEnd";
        /**
         * @generated from protobuf field: searchium.v2.IndexUpdate.FilesystemScanEnd filesystem_scan_end = 11;
         */
        filesystemScanEnd: IndexUpdate_FilesystemScanEnd;
    } | {
        oneofKind: "fileContentsLoaded";
        /**
         * @generated from protobuf field: searchium.v2.IndexUpdate.FileContentsLoaded file_contents_loaded = 12;
         */
        fileContentsLoaded: IndexUpdate_FileContentsLoaded;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message searchium.v2.IndexUpdate.FilesystemScanStart
 */
export interface IndexUpdate_FilesystemScanStart {
}
/**
 * @generated from protobuf message searchium.v2.IndexUpdate.FilesystemScanEnd
 */
export interface IndexUpdate_FilesystemScanEnd {
}
/**
 * @generated from protobuf message searchium.v2.IndexUpdate.FileContentsLoaded
 */
export interface IndexUpdate_FileContentsLoaded {
}
/**
 * @generated from protobuf message searchium.v2.FilePathSearchRequest
 */
export interface FilePathSearchRequest {
    /**
     * @generated from protobuf field: string query = 1;
     */
    query: string;
    /**
     * @generated from protobuf field: uint32 max_results = 2;
     */
    maxResults: number;
}
/**
 * @generated from protobuf message searchium.v2.FilePathSearchResponse
 */
export interface FilePathSearchResponse {
    /**
     * @generated from protobuf field: repeated string results = 1;
     */
    results: string[];
    /**
     * @generated from protobuf field: google.protobuf.Duration duration = 2;
     */
    duration?: Duration;
}
/**
 * @generated from protobuf message searchium.v2.FileContentsSearchRequest
 */
export interface FileContentsSearchRequest {
    /**
     * @generated from protobuf field: string query_string = 1;
     */
    queryString: string;
    /**
     * @generated from protobuf field: string file_path_pattern = 2;
     */
    filePathPattern: string;
    /**
     * @generated from protobuf field: int32 max_results = 3;
     */
    maxResults: number;
    /**
     * @generated from protobuf field: bool match_case = 4;
     */
    matchCase: boolean;
    /**
     * @generated from protobuf field: bool match_whole_word = 5;
     */
    matchWholeWord: boolean;
    /**
     * @generated from protobuf field: bool regex = 6;
     */
    regex: boolean;
}
/**
 * @generated from protobuf message searchium.v2.Span
 */
export interface Span {
    /**
     * @generated from protobuf field: uint32 offset_bytes = 1;
     */
    offsetBytes: number;
    /**
     * @generated from protobuf field: uint32 length_bytes = 2;
     */
    lengthBytes: number;
}
/**
 * @generated from protobuf message searchium.v2.FileContentsSearchResponse
 */
export interface FileContentsSearchResponse {
    /**
     * @generated from protobuf field: string root_path = 1;
     */
    rootPath: string;
    /**
     * @generated from protobuf field: string file_relative_path = 2;
     */
    fileRelativePath: string;
    /**
     * @generated from protobuf field: repeated searchium.v2.Span spans = 3;
     */
    spans: Span[];
}
/**
 * @generated from protobuf message searchium.v2.FileExtractsRequest
 */
export interface FileExtractsRequest {
    /**
     * @generated from protobuf field: string file_path = 1;
     */
    filePath: string;
    /**
     * @generated from protobuf field: repeated searchium.v2.Span spans = 2;
     */
    spans: Span[];
    /**
     * @generated from protobuf field: uint32 max_extract_length = 3;
     */
    maxExtractLength: number;
}
/**
 * @generated from protobuf message searchium.v2.FileExtract
 */
export interface FileExtract {
    /**
     * @generated from protobuf field: string text = 1;
     */
    text: string;
    /**
     * @generated from protobuf field: uint32 offset = 2;
     */
    offset: number;
    /**
     * @generated from protobuf field: uint32 length = 3;
     */
    length: number;
    /**
     * @generated from protobuf field: uint32 line_number = 4;
     */
    lineNumber: number;
    /**
     * @generated from protobuf field: uint32 column_number = 5;
     */
    columnNumber: number;
}
/**
 * @generated from protobuf message searchium.v2.FileExtractsResponse
 */
export interface FileExtractsResponse {
    /**
     * @generated from protobuf field: string file_path = 1;
     */
    filePath: string;
    /**
     * @generated from protobuf field: repeated searchium.v2.FileExtract file_extracts = 2;
     */
    fileExtracts: FileExtract[];
}
/**
 * @generated from protobuf message searchium.v2.ProcessInfoRequest
 */
export interface ProcessInfoRequest {
}
/**
 * @generated from protobuf message searchium.v2.ProcessInfoResponse
 */
export interface ProcessInfoResponse {
    /**
     * @generated from protobuf field: uint64 physical_memory = 1;
     */
    physicalMemory: bigint;
    /**
     * @generated from protobuf field: uint64 virtual_memory = 2;
     */
    virtualMemory: bigint;
}
/**
 * @generated from protobuf enum searchium.v2.GenericError
 */
export enum GenericError {
    /**
     * @generated from protobuf enum value: GENERIC_ERROR_NONE = 0;
     */
    NONE = 0
}
// @generated message type with reflection information, may provide speed optimized methods
class HelloRequest$Type extends MessageType<HelloRequest> {
    constructor() {
        super("searchium.v2.HelloRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<HelloRequest>): HelloRequest {
        const message = { id: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HelloRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HelloRequest): HelloRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HelloRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.HelloRequest
 */
export const HelloRequest = new HelloRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HelloResponse$Type extends MessageType<HelloResponse> {
    constructor() {
        super("searchium.v2.HelloResponse", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<HelloResponse>): HelloResponse {
        const message = { id: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HelloResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HelloResponse): HelloResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HelloResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.HelloResponse
 */
export const HelloResponse = new HelloResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EmptyRequest$Type extends MessageType<EmptyRequest> {
    constructor() {
        super("searchium.v2.EmptyRequest", []);
    }
    create(value?: PartialMessage<EmptyRequest>): EmptyRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EmptyRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EmptyRequest): EmptyRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: EmptyRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.EmptyRequest
 */
export const EmptyRequest = new EmptyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenericResponse$Type extends MessageType<GenericResponse> {
    constructor() {
        super("searchium.v2.GenericResponse", [
            { no: 1, name: "error", kind: "enum", T: () => ["searchium.v2.GenericError", GenericError, "GENERIC_ERROR_"] },
            { no: 2, name: "log_message", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GenericResponse>): GenericResponse {
        const message = { error: 0, logMessage: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenericResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenericResponse): GenericResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v2.GenericError error */ 1:
                    message.error = reader.int32();
                    break;
                case /* string log_message */ 2:
                    message.logMessage = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenericResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v2.GenericError error = 1; */
        if (message.error !== 0)
            writer.tag(1, WireType.Varint).int32(message.error);
        /* string log_message = 2; */
        if (message.logMessage !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.logMessage);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.GenericResponse
 */
export const GenericResponse = new GenericResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FolderRegisterRequest$Type extends MessageType<FolderRegisterRequest> {
    constructor() {
        super("searchium.v2.FolderRegisterRequest", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "ignore_file_globs", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "ignore_search_globs", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<FolderRegisterRequest>): FolderRegisterRequest {
        const message = { path: "", ignoreFileGlobs: [], ignoreSearchGlobs: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FolderRegisterRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FolderRegisterRequest): FolderRegisterRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string path */ 1:
                    message.path = reader.string();
                    break;
                case /* repeated string ignore_file_globs */ 2:
                    message.ignoreFileGlobs.push(reader.string());
                    break;
                case /* repeated string ignore_search_globs */ 3:
                    message.ignoreSearchGlobs.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FolderRegisterRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string path = 1; */
        if (message.path !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.path);
        /* repeated string ignore_file_globs = 2; */
        for (let i = 0; i < message.ignoreFileGlobs.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.ignoreFileGlobs[i]);
        /* repeated string ignore_search_globs = 3; */
        for (let i = 0; i < message.ignoreSearchGlobs.length; i++)
            writer.tag(3, WireType.LengthDelimited).string(message.ignoreSearchGlobs[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FolderRegisterRequest
 */
export const FolderRegisterRequest = new FolderRegisterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FolderUnregisterRequest$Type extends MessageType<FolderUnregisterRequest> {
    constructor() {
        super("searchium.v2.FolderUnregisterRequest", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<FolderUnregisterRequest>): FolderUnregisterRequest {
        const message = { path: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FolderUnregisterRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FolderUnregisterRequest): FolderUnregisterRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string path */ 1:
                    message.path = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FolderUnregisterRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string path = 1; */
        if (message.path !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.path);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FolderUnregisterRequest
 */
export const FolderUnregisterRequest = new FolderUnregisterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexUpdate$Type extends MessageType<IndexUpdate> {
    constructor() {
        super("searchium.v2.IndexUpdate", [
            { no: 1, name: "timestamp", kind: "message", T: () => Timestamp },
            { no: 10, name: "filesystem_scan_start", kind: "message", oneof: "type", T: () => IndexUpdate_FilesystemScanStart },
            { no: 11, name: "filesystem_scan_end", kind: "message", oneof: "type", T: () => IndexUpdate_FilesystemScanEnd },
            { no: 12, name: "file_contents_loaded", kind: "message", oneof: "type", T: () => IndexUpdate_FileContentsLoaded }
        ]);
    }
    create(value?: PartialMessage<IndexUpdate>): IndexUpdate {
        const message = { type: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IndexUpdate>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IndexUpdate): IndexUpdate {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Timestamp timestamp */ 1:
                    message.timestamp = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.timestamp);
                    break;
                case /* searchium.v2.IndexUpdate.FilesystemScanStart filesystem_scan_start */ 10:
                    message.type = {
                        oneofKind: "filesystemScanStart",
                        filesystemScanStart: IndexUpdate_FilesystemScanStart.internalBinaryRead(reader, reader.uint32(), options, (message.type as any).filesystemScanStart)
                    };
                    break;
                case /* searchium.v2.IndexUpdate.FilesystemScanEnd filesystem_scan_end */ 11:
                    message.type = {
                        oneofKind: "filesystemScanEnd",
                        filesystemScanEnd: IndexUpdate_FilesystemScanEnd.internalBinaryRead(reader, reader.uint32(), options, (message.type as any).filesystemScanEnd)
                    };
                    break;
                case /* searchium.v2.IndexUpdate.FileContentsLoaded file_contents_loaded */ 12:
                    message.type = {
                        oneofKind: "fileContentsLoaded",
                        fileContentsLoaded: IndexUpdate_FileContentsLoaded.internalBinaryRead(reader, reader.uint32(), options, (message.type as any).fileContentsLoaded)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: IndexUpdate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.Timestamp timestamp = 1; */
        if (message.timestamp)
            Timestamp.internalBinaryWrite(message.timestamp, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v2.IndexUpdate.FilesystemScanStart filesystem_scan_start = 10; */
        if (message.type.oneofKind === "filesystemScanStart")
            IndexUpdate_FilesystemScanStart.internalBinaryWrite(message.type.filesystemScanStart, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v2.IndexUpdate.FilesystemScanEnd filesystem_scan_end = 11; */
        if (message.type.oneofKind === "filesystemScanEnd")
            IndexUpdate_FilesystemScanEnd.internalBinaryWrite(message.type.filesystemScanEnd, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v2.IndexUpdate.FileContentsLoaded file_contents_loaded = 12; */
        if (message.type.oneofKind === "fileContentsLoaded")
            IndexUpdate_FileContentsLoaded.internalBinaryWrite(message.type.fileContentsLoaded, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.IndexUpdate
 */
export const IndexUpdate = new IndexUpdate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexUpdate_FilesystemScanStart$Type extends MessageType<IndexUpdate_FilesystemScanStart> {
    constructor() {
        super("searchium.v2.IndexUpdate.FilesystemScanStart", []);
    }
    create(value?: PartialMessage<IndexUpdate_FilesystemScanStart>): IndexUpdate_FilesystemScanStart {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IndexUpdate_FilesystemScanStart>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IndexUpdate_FilesystemScanStart): IndexUpdate_FilesystemScanStart {
        return target ?? this.create();
    }
    internalBinaryWrite(message: IndexUpdate_FilesystemScanStart, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.IndexUpdate.FilesystemScanStart
 */
export const IndexUpdate_FilesystemScanStart = new IndexUpdate_FilesystemScanStart$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexUpdate_FilesystemScanEnd$Type extends MessageType<IndexUpdate_FilesystemScanEnd> {
    constructor() {
        super("searchium.v2.IndexUpdate.FilesystemScanEnd", []);
    }
    create(value?: PartialMessage<IndexUpdate_FilesystemScanEnd>): IndexUpdate_FilesystemScanEnd {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IndexUpdate_FilesystemScanEnd>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IndexUpdate_FilesystemScanEnd): IndexUpdate_FilesystemScanEnd {
        return target ?? this.create();
    }
    internalBinaryWrite(message: IndexUpdate_FilesystemScanEnd, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.IndexUpdate.FilesystemScanEnd
 */
export const IndexUpdate_FilesystemScanEnd = new IndexUpdate_FilesystemScanEnd$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexUpdate_FileContentsLoaded$Type extends MessageType<IndexUpdate_FileContentsLoaded> {
    constructor() {
        super("searchium.v2.IndexUpdate.FileContentsLoaded", []);
    }
    create(value?: PartialMessage<IndexUpdate_FileContentsLoaded>): IndexUpdate_FileContentsLoaded {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IndexUpdate_FileContentsLoaded>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IndexUpdate_FileContentsLoaded): IndexUpdate_FileContentsLoaded {
        return target ?? this.create();
    }
    internalBinaryWrite(message: IndexUpdate_FileContentsLoaded, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.IndexUpdate.FileContentsLoaded
 */
export const IndexUpdate_FileContentsLoaded = new IndexUpdate_FileContentsLoaded$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FilePathSearchRequest$Type extends MessageType<FilePathSearchRequest> {
    constructor() {
        super("searchium.v2.FilePathSearchRequest", [
            { no: 1, name: "query", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "max_results", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FilePathSearchRequest>): FilePathSearchRequest {
        const message = { query: "", maxResults: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FilePathSearchRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FilePathSearchRequest): FilePathSearchRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string query */ 1:
                    message.query = reader.string();
                    break;
                case /* uint32 max_results */ 2:
                    message.maxResults = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FilePathSearchRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string query = 1; */
        if (message.query !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.query);
        /* uint32 max_results = 2; */
        if (message.maxResults !== 0)
            writer.tag(2, WireType.Varint).uint32(message.maxResults);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FilePathSearchRequest
 */
export const FilePathSearchRequest = new FilePathSearchRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FilePathSearchResponse$Type extends MessageType<FilePathSearchResponse> {
    constructor() {
        super("searchium.v2.FilePathSearchResponse", [
            { no: 1, name: "results", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "duration", kind: "message", T: () => Duration }
        ]);
    }
    create(value?: PartialMessage<FilePathSearchResponse>): FilePathSearchResponse {
        const message = { results: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FilePathSearchResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FilePathSearchResponse): FilePathSearchResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string results */ 1:
                    message.results.push(reader.string());
                    break;
                case /* google.protobuf.Duration duration */ 2:
                    message.duration = Duration.internalBinaryRead(reader, reader.uint32(), options, message.duration);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FilePathSearchResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated string results = 1; */
        for (let i = 0; i < message.results.length; i++)
            writer.tag(1, WireType.LengthDelimited).string(message.results[i]);
        /* google.protobuf.Duration duration = 2; */
        if (message.duration)
            Duration.internalBinaryWrite(message.duration, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FilePathSearchResponse
 */
export const FilePathSearchResponse = new FilePathSearchResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileContentsSearchRequest$Type extends MessageType<FileContentsSearchRequest> {
    constructor() {
        super("searchium.v2.FileContentsSearchRequest", [
            { no: 1, name: "query_string", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "file_path_pattern", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "max_results", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "match_case", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "match_whole_word", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "regex", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<FileContentsSearchRequest>): FileContentsSearchRequest {
        const message = { queryString: "", filePathPattern: "", maxResults: 0, matchCase: false, matchWholeWord: false, regex: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileContentsSearchRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileContentsSearchRequest): FileContentsSearchRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string query_string */ 1:
                    message.queryString = reader.string();
                    break;
                case /* string file_path_pattern */ 2:
                    message.filePathPattern = reader.string();
                    break;
                case /* int32 max_results */ 3:
                    message.maxResults = reader.int32();
                    break;
                case /* bool match_case */ 4:
                    message.matchCase = reader.bool();
                    break;
                case /* bool match_whole_word */ 5:
                    message.matchWholeWord = reader.bool();
                    break;
                case /* bool regex */ 6:
                    message.regex = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileContentsSearchRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string query_string = 1; */
        if (message.queryString !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.queryString);
        /* string file_path_pattern = 2; */
        if (message.filePathPattern !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.filePathPattern);
        /* int32 max_results = 3; */
        if (message.maxResults !== 0)
            writer.tag(3, WireType.Varint).int32(message.maxResults);
        /* bool match_case = 4; */
        if (message.matchCase !== false)
            writer.tag(4, WireType.Varint).bool(message.matchCase);
        /* bool match_whole_word = 5; */
        if (message.matchWholeWord !== false)
            writer.tag(5, WireType.Varint).bool(message.matchWholeWord);
        /* bool regex = 6; */
        if (message.regex !== false)
            writer.tag(6, WireType.Varint).bool(message.regex);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FileContentsSearchRequest
 */
export const FileContentsSearchRequest = new FileContentsSearchRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Span$Type extends MessageType<Span> {
    constructor() {
        super("searchium.v2.Span", [
            { no: 1, name: "offset_bytes", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "length_bytes", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<Span>): Span {
        const message = { offsetBytes: 0, lengthBytes: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Span>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Span): Span {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 offset_bytes */ 1:
                    message.offsetBytes = reader.uint32();
                    break;
                case /* uint32 length_bytes */ 2:
                    message.lengthBytes = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Span, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 offset_bytes = 1; */
        if (message.offsetBytes !== 0)
            writer.tag(1, WireType.Varint).uint32(message.offsetBytes);
        /* uint32 length_bytes = 2; */
        if (message.lengthBytes !== 0)
            writer.tag(2, WireType.Varint).uint32(message.lengthBytes);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.Span
 */
export const Span = new Span$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileContentsSearchResponse$Type extends MessageType<FileContentsSearchResponse> {
    constructor() {
        super("searchium.v2.FileContentsSearchResponse", [
            { no: 1, name: "root_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "file_relative_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "spans", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Span }
        ]);
    }
    create(value?: PartialMessage<FileContentsSearchResponse>): FileContentsSearchResponse {
        const message = { rootPath: "", fileRelativePath: "", spans: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileContentsSearchResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileContentsSearchResponse): FileContentsSearchResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string root_path */ 1:
                    message.rootPath = reader.string();
                    break;
                case /* string file_relative_path */ 2:
                    message.fileRelativePath = reader.string();
                    break;
                case /* repeated searchium.v2.Span spans */ 3:
                    message.spans.push(Span.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileContentsSearchResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string root_path = 1; */
        if (message.rootPath !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.rootPath);
        /* string file_relative_path = 2; */
        if (message.fileRelativePath !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.fileRelativePath);
        /* repeated searchium.v2.Span spans = 3; */
        for (let i = 0; i < message.spans.length; i++)
            Span.internalBinaryWrite(message.spans[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FileContentsSearchResponse
 */
export const FileContentsSearchResponse = new FileContentsSearchResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileExtractsRequest$Type extends MessageType<FileExtractsRequest> {
    constructor() {
        super("searchium.v2.FileExtractsRequest", [
            { no: 1, name: "file_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "spans", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Span },
            { no: 3, name: "max_extract_length", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FileExtractsRequest>): FileExtractsRequest {
        const message = { filePath: "", spans: [], maxExtractLength: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileExtractsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileExtractsRequest): FileExtractsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string file_path */ 1:
                    message.filePath = reader.string();
                    break;
                case /* repeated searchium.v2.Span spans */ 2:
                    message.spans.push(Span.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* uint32 max_extract_length */ 3:
                    message.maxExtractLength = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileExtractsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string file_path = 1; */
        if (message.filePath !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.filePath);
        /* repeated searchium.v2.Span spans = 2; */
        for (let i = 0; i < message.spans.length; i++)
            Span.internalBinaryWrite(message.spans[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* uint32 max_extract_length = 3; */
        if (message.maxExtractLength !== 0)
            writer.tag(3, WireType.Varint).uint32(message.maxExtractLength);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FileExtractsRequest
 */
export const FileExtractsRequest = new FileExtractsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileExtract$Type extends MessageType<FileExtract> {
    constructor() {
        super("searchium.v2.FileExtract", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "offset", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "length", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "line_number", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "column_number", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FileExtract>): FileExtract {
        const message = { text: "", offset: 0, length: 0, lineNumber: 0, columnNumber: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileExtract>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileExtract): FileExtract {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* uint32 offset */ 2:
                    message.offset = reader.uint32();
                    break;
                case /* uint32 length */ 3:
                    message.length = reader.uint32();
                    break;
                case /* uint32 line_number */ 4:
                    message.lineNumber = reader.uint32();
                    break;
                case /* uint32 column_number */ 5:
                    message.columnNumber = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileExtract, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* uint32 offset = 2; */
        if (message.offset !== 0)
            writer.tag(2, WireType.Varint).uint32(message.offset);
        /* uint32 length = 3; */
        if (message.length !== 0)
            writer.tag(3, WireType.Varint).uint32(message.length);
        /* uint32 line_number = 4; */
        if (message.lineNumber !== 0)
            writer.tag(4, WireType.Varint).uint32(message.lineNumber);
        /* uint32 column_number = 5; */
        if (message.columnNumber !== 0)
            writer.tag(5, WireType.Varint).uint32(message.columnNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FileExtract
 */
export const FileExtract = new FileExtract$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileExtractsResponse$Type extends MessageType<FileExtractsResponse> {
    constructor() {
        super("searchium.v2.FileExtractsResponse", [
            { no: 1, name: "file_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "file_extracts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FileExtract }
        ]);
    }
    create(value?: PartialMessage<FileExtractsResponse>): FileExtractsResponse {
        const message = { filePath: "", fileExtracts: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FileExtractsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FileExtractsResponse): FileExtractsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string file_path */ 1:
                    message.filePath = reader.string();
                    break;
                case /* repeated searchium.v2.FileExtract file_extracts */ 2:
                    message.fileExtracts.push(FileExtract.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FileExtractsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string file_path = 1; */
        if (message.filePath !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.filePath);
        /* repeated searchium.v2.FileExtract file_extracts = 2; */
        for (let i = 0; i < message.fileExtracts.length; i++)
            FileExtract.internalBinaryWrite(message.fileExtracts[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FileExtractsResponse
 */
export const FileExtractsResponse = new FileExtractsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProcessInfoRequest$Type extends MessageType<ProcessInfoRequest> {
    constructor() {
        super("searchium.v2.ProcessInfoRequest", []);
    }
    create(value?: PartialMessage<ProcessInfoRequest>): ProcessInfoRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProcessInfoRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProcessInfoRequest): ProcessInfoRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ProcessInfoRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.ProcessInfoRequest
 */
export const ProcessInfoRequest = new ProcessInfoRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProcessInfoResponse$Type extends MessageType<ProcessInfoResponse> {
    constructor() {
        super("searchium.v2.ProcessInfoResponse", [
            { no: 1, name: "physical_memory", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "virtual_memory", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<ProcessInfoResponse>): ProcessInfoResponse {
        const message = { physicalMemory: 0n, virtualMemory: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProcessInfoResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProcessInfoResponse): ProcessInfoResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 physical_memory */ 1:
                    message.physicalMemory = reader.uint64().toBigInt();
                    break;
                case /* uint64 virtual_memory */ 2:
                    message.virtualMemory = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProcessInfoResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 physical_memory = 1; */
        if (message.physicalMemory !== 0n)
            writer.tag(1, WireType.Varint).uint64(message.physicalMemory);
        /* uint64 virtual_memory = 2; */
        if (message.virtualMemory !== 0n)
            writer.tag(2, WireType.Varint).uint64(message.virtualMemory);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.ProcessInfoResponse
 */
export const ProcessInfoResponse = new ProcessInfoResponse$Type();
/**
 * @generated ServiceType for protobuf service searchium.v2.SearchiumService
 */
export const SearchiumService = new ServiceType("searchium.v2.SearchiumService", [
    { name: "Hello", options: {}, I: HelloRequest, O: HelloResponse },
    { name: "RegisterFolder", serverStreaming: true, options: {}, I: FolderRegisterRequest, O: IndexUpdate },
    { name: "UnregisterFolder", options: {}, I: FolderUnregisterRequest, O: GenericResponse },
    { name: "SearchFilePaths", serverStreaming: true, clientStreaming: true, options: {}, I: FilePathSearchRequest, O: FilePathSearchResponse },
    { name: "SearchFileContents", serverStreaming: true, options: {}, I: FileContentsSearchRequest, O: FileContentsSearchResponse },
    { name: "GetFileExtracts", options: {}, I: FileExtractsRequest, O: FileExtractsResponse },
    { name: "GetProcessInfo", options: {}, I: ProcessInfoRequest, O: ProcessInfoResponse }
]);
