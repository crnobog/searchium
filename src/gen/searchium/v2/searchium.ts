/* eslint-disable */
// @generated by protobuf-ts 2.8.3 with parameter output_legacy_commonjs,eslint_disable
// @generated from protobuf file "searchium/v2/searchium.proto" (package "searchium.v2", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../../google/protobuf/timestamp";
/**
 * @generated from protobuf message searchium.v2.HelloRequest
 */
export interface HelloRequest {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message searchium.v2.HelloResponse
 */
export interface HelloResponse {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message searchium.v2.EmptyRequest
 */
export interface EmptyRequest {
}
/**
 * @generated from protobuf message searchium.v2.GenericResponse
 */
export interface GenericResponse {
    /**
     * @generated from protobuf field: searchium.v2.GenericError error = 1;
     */
    error: GenericError;
    /**
     * @generated from protobuf field: string log_message = 2;
     */
    logMessage: string;
}
/**
 * @generated from protobuf message searchium.v2.FolderRegisterRequest
 */
export interface FolderRegisterRequest {
    /**
     * @generated from protobuf field: string path = 1;
     */
    path: string;
    /**
     * @generated from protobuf field: repeated string ignore_file_globs = 2;
     */
    ignoreFileGlobs: string[];
    /**
     * @generated from protobuf field: repeated string ignore_search_globs = 3;
     */
    ignoreSearchGlobs: string[];
}
/**
 * @generated from protobuf message searchium.v2.FolderUnregisterRequest
 */
export interface FolderUnregisterRequest {
    /**
     * @generated from protobuf field: string path = 1;
     */
    path: string;
}
/**
 * @generated from protobuf message searchium.v2.IndexUpdate
 */
export interface IndexUpdate {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp timestamp = 1;
     */
    timestamp?: Timestamp;
    /**
     * @generated from protobuf oneof: type
     */
    type: {
        oneofKind: "filesystemScanStart";
        /**
         * @generated from protobuf field: searchium.v2.GenericEvent filesystem_scan_start = 10;
         */
        filesystemScanStart: GenericEvent;
    } | {
        oneofKind: "filesystemScanEnd";
        /**
         * @generated from protobuf field: searchium.v2.GenericEvent filesystem_scan_end = 11;
         */
        filesystemScanEnd: GenericEvent;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message searchium.v2.GenericEvent
 */
export interface GenericEvent {
}
/**
 * @generated from protobuf enum searchium.v2.GenericError
 */
export enum GenericError {
    /**
     * @generated from protobuf enum value: GENERIC_ERROR_NONE = 0;
     */
    NONE = 0
}
// @generated message type with reflection information, may provide speed optimized methods
class HelloRequest$Type extends MessageType<HelloRequest> {
    constructor() {
        super("searchium.v2.HelloRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<HelloRequest>): HelloRequest {
        const message = { id: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HelloRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HelloRequest): HelloRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HelloRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.HelloRequest
 */
export const HelloRequest = new HelloRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HelloResponse$Type extends MessageType<HelloResponse> {
    constructor() {
        super("searchium.v2.HelloResponse", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<HelloResponse>): HelloResponse {
        const message = { id: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HelloResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HelloResponse): HelloResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HelloResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.HelloResponse
 */
export const HelloResponse = new HelloResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EmptyRequest$Type extends MessageType<EmptyRequest> {
    constructor() {
        super("searchium.v2.EmptyRequest", []);
    }
    create(value?: PartialMessage<EmptyRequest>): EmptyRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EmptyRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EmptyRequest): EmptyRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: EmptyRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.EmptyRequest
 */
export const EmptyRequest = new EmptyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenericResponse$Type extends MessageType<GenericResponse> {
    constructor() {
        super("searchium.v2.GenericResponse", [
            { no: 1, name: "error", kind: "enum", T: () => ["searchium.v2.GenericError", GenericError, "GENERIC_ERROR_"] },
            { no: 2, name: "log_message", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GenericResponse>): GenericResponse {
        const message = { error: 0, logMessage: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenericResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenericResponse): GenericResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* searchium.v2.GenericError error */ 1:
                    message.error = reader.int32();
                    break;
                case /* string log_message */ 2:
                    message.logMessage = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenericResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* searchium.v2.GenericError error = 1; */
        if (message.error !== 0)
            writer.tag(1, WireType.Varint).int32(message.error);
        /* string log_message = 2; */
        if (message.logMessage !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.logMessage);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.GenericResponse
 */
export const GenericResponse = new GenericResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FolderRegisterRequest$Type extends MessageType<FolderRegisterRequest> {
    constructor() {
        super("searchium.v2.FolderRegisterRequest", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "ignore_file_globs", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "ignore_search_globs", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<FolderRegisterRequest>): FolderRegisterRequest {
        const message = { path: "", ignoreFileGlobs: [], ignoreSearchGlobs: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FolderRegisterRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FolderRegisterRequest): FolderRegisterRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string path */ 1:
                    message.path = reader.string();
                    break;
                case /* repeated string ignore_file_globs */ 2:
                    message.ignoreFileGlobs.push(reader.string());
                    break;
                case /* repeated string ignore_search_globs */ 3:
                    message.ignoreSearchGlobs.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FolderRegisterRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string path = 1; */
        if (message.path !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.path);
        /* repeated string ignore_file_globs = 2; */
        for (let i = 0; i < message.ignoreFileGlobs.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.ignoreFileGlobs[i]);
        /* repeated string ignore_search_globs = 3; */
        for (let i = 0; i < message.ignoreSearchGlobs.length; i++)
            writer.tag(3, WireType.LengthDelimited).string(message.ignoreSearchGlobs[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FolderRegisterRequest
 */
export const FolderRegisterRequest = new FolderRegisterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FolderUnregisterRequest$Type extends MessageType<FolderUnregisterRequest> {
    constructor() {
        super("searchium.v2.FolderUnregisterRequest", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<FolderUnregisterRequest>): FolderUnregisterRequest {
        const message = { path: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FolderUnregisterRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FolderUnregisterRequest): FolderUnregisterRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string path */ 1:
                    message.path = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FolderUnregisterRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string path = 1; */
        if (message.path !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.path);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.FolderUnregisterRequest
 */
export const FolderUnregisterRequest = new FolderUnregisterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IndexUpdate$Type extends MessageType<IndexUpdate> {
    constructor() {
        super("searchium.v2.IndexUpdate", [
            { no: 1, name: "timestamp", kind: "message", T: () => Timestamp },
            { no: 10, name: "filesystem_scan_start", kind: "message", oneof: "type", T: () => GenericEvent },
            { no: 11, name: "filesystem_scan_end", kind: "message", oneof: "type", T: () => GenericEvent }
        ]);
    }
    create(value?: PartialMessage<IndexUpdate>): IndexUpdate {
        const message = { type: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<IndexUpdate>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: IndexUpdate): IndexUpdate {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Timestamp timestamp */ 1:
                    message.timestamp = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.timestamp);
                    break;
                case /* searchium.v2.GenericEvent filesystem_scan_start */ 10:
                    message.type = {
                        oneofKind: "filesystemScanStart",
                        filesystemScanStart: GenericEvent.internalBinaryRead(reader, reader.uint32(), options, (message.type as any).filesystemScanStart)
                    };
                    break;
                case /* searchium.v2.GenericEvent filesystem_scan_end */ 11:
                    message.type = {
                        oneofKind: "filesystemScanEnd",
                        filesystemScanEnd: GenericEvent.internalBinaryRead(reader, reader.uint32(), options, (message.type as any).filesystemScanEnd)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: IndexUpdate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.Timestamp timestamp = 1; */
        if (message.timestamp)
            Timestamp.internalBinaryWrite(message.timestamp, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v2.GenericEvent filesystem_scan_start = 10; */
        if (message.type.oneofKind === "filesystemScanStart")
            GenericEvent.internalBinaryWrite(message.type.filesystemScanStart, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* searchium.v2.GenericEvent filesystem_scan_end = 11; */
        if (message.type.oneofKind === "filesystemScanEnd")
            GenericEvent.internalBinaryWrite(message.type.filesystemScanEnd, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.IndexUpdate
 */
export const IndexUpdate = new IndexUpdate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenericEvent$Type extends MessageType<GenericEvent> {
    constructor() {
        super("searchium.v2.GenericEvent", []);
    }
    create(value?: PartialMessage<GenericEvent>): GenericEvent {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenericEvent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenericEvent): GenericEvent {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GenericEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message searchium.v2.GenericEvent
 */
export const GenericEvent = new GenericEvent$Type();
/**
 * @generated ServiceType for protobuf service searchium.v2.SearchiumService
 */
export const SearchiumService = new ServiceType("searchium.v2.SearchiumService", [
    { name: "Hello", options: {}, I: HelloRequest, O: HelloResponse },
    { name: "RegisterFolder", serverStreaming: true, options: {}, I: FolderRegisterRequest, O: IndexUpdate },
    { name: "UnregisterFolder", options: {}, I: FolderUnregisterRequest, O: GenericResponse }
]);
