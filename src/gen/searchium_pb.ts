// @generated by protoc-gen-es v1.1.1 with parameter "target=ts"
// @generated from file searchium.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { DateTime } from "./protobuf-net/bcl_pb.js";

/**
 * @generated from enum IndexingServerStatus
 */
export enum IndexingServerStatus {
  /**
   * @generated from enum value: INDEXING_SERVER_STATUS_IDLE = 0;
   */
  IDLE = 0,

  /**
   * @generated from enum value: INDEXING_SERVER_STATUS_PAUSED = 1;
   */
  PAUSED = 1,

  /**
   * @generated from enum value: INDEXING_SERVER_STATUS_YIELD = 2;
   */
  YIELD = 2,

  /**
   * @generated from enum value: INDEXING_SERVER_STATUS_BUSY = 3;
   */
  BUSY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(IndexingServerStatus)
proto3.util.setEnumType(IndexingServerStatus, "IndexingServerStatus", [
  { no: 0, name: "INDEXING_SERVER_STATUS_IDLE" },
  { no: 1, name: "INDEXING_SERVER_STATUS_PAUSED" },
  { no: 2, name: "INDEXING_SERVER_STATUS_YIELD" },
  { no: 3, name: "INDEXING_SERVER_STATUS_BUSY" },
]);

/**
 * @generated from message IpcMessage
 */
export class IpcMessage extends Message<IpcMessage> {
  /**
   * @generated from field: int64 request_id = 1;
   */
  requestId = protoInt64.zero;

  /**
   * @generated from field: string protocol = 2;
   */
  protocol = "";

  /**
   * @generated from field: IpcMessageData data = 3;
   */
  data?: IpcMessageData;

  /**
   * @generated from oneof IpcMessage.request_response
   */
  requestResponse: {
    /**
     * @generated from field: IpcRequest request = 10;
     */
    value: IpcRequest;
    case: "request";
  } | {
    /**
     * @generated from field: IpcResponse response = 11;
     */
    value: IpcResponse;
    case: "response";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<IpcMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "IpcMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "protocol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "data", kind: "message", T: IpcMessageData },
    { no: 10, name: "request", kind: "message", T: IpcRequest, oneof: "request_response" },
    { no: 11, name: "response", kind: "message", T: IpcResponse, oneof: "request_response" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IpcMessage {
    return new IpcMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IpcMessage {
    return new IpcMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IpcMessage {
    return new IpcMessage().fromJsonString(jsonString, options);
  }

  static equals(a: IpcMessage | PlainMessage<IpcMessage> | undefined, b: IpcMessage | PlainMessage<IpcMessage> | undefined): boolean {
    return proto3.util.equals(IpcMessage, a, b);
  }
}

/**
 * @generated from message IpcMessageData
 */
export class IpcMessageData extends Message<IpcMessageData> {
  /**
   * @generated from oneof IpcMessageData.subtype
   */
  subtype: {
    /**
     * @generated from field: IpcStringData ipc_string_data = 10;
     */
    value: IpcStringData;
    case: "ipcStringData";
  } | {
    /**
     * @generated from field: TypedMessage typed_message = 11;
     */
    value: TypedMessage;
    case: "typedMessage";
  } | {
    /**
     * @generated from field: ErrorResponse error_response = 12;
     */
    value: ErrorResponse;
    case: "errorResponse";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<IpcMessageData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "IpcMessageData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "ipc_string_data", kind: "message", T: IpcStringData, oneof: "subtype" },
    { no: 11, name: "typed_message", kind: "message", T: TypedMessage, oneof: "subtype" },
    { no: 12, name: "error_response", kind: "message", T: ErrorResponse, oneof: "subtype" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IpcMessageData {
    return new IpcMessageData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IpcMessageData {
    return new IpcMessageData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IpcMessageData {
    return new IpcMessageData().fromJsonString(jsonString, options);
  }

  static equals(a: IpcMessageData | PlainMessage<IpcMessageData> | undefined, b: IpcMessageData | PlainMessage<IpcMessageData> | undefined): boolean {
    return proto3.util.equals(IpcMessageData, a, b);
  }
}

/**
 * @generated from message IpcStringData
 */
export class IpcStringData extends Message<IpcStringData> {
  /**
   * @generated from field: string text = 1;
   */
  text = "";

  constructor(data?: PartialMessage<IpcStringData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "IpcStringData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IpcStringData {
    return new IpcStringData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IpcStringData {
    return new IpcStringData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IpcStringData {
    return new IpcStringData().fromJsonString(jsonString, options);
  }

  static equals(a: IpcStringData | PlainMessage<IpcStringData> | undefined, b: IpcStringData | PlainMessage<IpcStringData> | undefined): boolean {
    return proto3.util.equals(IpcStringData, a, b);
  }
}

/**
 * @generated from message TypedMessage
 */
export class TypedMessage extends Message<TypedMessage> {
  /**
   * @generated from field: string class_name = 1;
   */
  className = "";

  /**
   * @generated from oneof TypedMessage.subtype
   */
  subtype: {
    /**
     * @generated from field: TypedRequest typed_request = 10;
     */
    value: TypedRequest;
    case: "typedRequest";
  } | {
    /**
     * @generated from field: TypedResponse typed_response = 11;
     */
    value: TypedResponse;
    case: "typedResponse";
  } | {
    /**
     * @generated from field: TypedEvent typed_event = 12;
     */
    value: TypedEvent;
    case: "typedEvent";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TypedMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "TypedMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "typed_request", kind: "message", T: TypedRequest, oneof: "subtype" },
    { no: 11, name: "typed_response", kind: "message", T: TypedResponse, oneof: "subtype" },
    { no: 12, name: "typed_event", kind: "message", T: TypedEvent, oneof: "subtype" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypedMessage {
    return new TypedMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypedMessage {
    return new TypedMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypedMessage {
    return new TypedMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TypedMessage | PlainMessage<TypedMessage> | undefined, b: TypedMessage | PlainMessage<TypedMessage> | undefined): boolean {
    return proto3.util.equals(TypedMessage, a, b);
  }
}

/**
 * @generated from message ErrorResponse
 */
export class ErrorResponse extends Message<ErrorResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message = "";

  /**
   * @generated from field: string full_type_name = 2;
   */
  fullTypeName = "";

  /**
   * @generated from field: string stack_trace = 3;
   */
  stackTrace = "";

  /**
   * @generated from field: ErrorResponse inner_error = 4;
   */
  innerError?: ErrorResponse;

  constructor(data?: PartialMessage<ErrorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ErrorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "full_type_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "stack_trace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "inner_error", kind: "message", T: ErrorResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ErrorResponse {
    return new ErrorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ErrorResponse {
    return new ErrorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ErrorResponse {
    return new ErrorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ErrorResponse | PlainMessage<ErrorResponse> | undefined, b: ErrorResponse | PlainMessage<ErrorResponse> | undefined): boolean {
    return proto3.util.equals(ErrorResponse, a, b);
  }
}

/**
 * @generated from message TypedRequest
 */
export class TypedRequest extends Message<TypedRequest> {
  /**
   * @generated from oneof TypedRequest.subtype
   */
  subtype: {
    /**
     * @generated from field: RegisterFileRequest register_file_request = 10;
     */
    value: RegisterFileRequest;
    case: "registerFileRequest";
  } | {
    /**
     * @generated from field: UnregisterFileRequest unregister_file_request = 11;
     */
    value: UnregisterFileRequest;
    case: "unregisterFileRequest";
  } | {
    /**
     * @generated from field: GetFileSystemRequest get_file_system_request = 12;
     */
    value: GetFileSystemRequest;
    case: "getFileSystemRequest";
  } | {
    /**
     * @generated from field: SearchFilePathsRequest search_file_paths_request = 13;
     */
    value: SearchFilePathsRequest;
    case: "searchFilePathsRequest";
  } | {
    /**
     * @generated from field: SearchCodeRequest search_code_request = 14;
     */
    value: SearchCodeRequest;
    case: "searchCodeRequest";
  } | {
    /**
     * @generated from field: GetFileSystemVersionRequest get_file_system_version_request = 15;
     */
    value: GetFileSystemVersionRequest;
    case: "getFileSystemVersionRequest";
  } | {
    /**
     * @generated from field: GetFileExtractsRequest get_file_extracts_request = 16;
     */
    value: GetFileExtractsRequest;
    case: "getFileExtractsRequest";
  } | {
    /**
     * @generated from field: GetDirectoryStatisticsRequest get_directory_statistics_request = 18;
     */
    value: GetDirectoryStatisticsRequest;
    case: "getDirectoryStatisticsRequest";
  } | {
    /**
     * @generated from field: RefreshFileSystemTreeRequest refresh_filesystem_tree_request = 19;
     */
    value: RefreshFileSystemTreeRequest;
    case: "refreshFilesystemTreeRequest";
  } | {
    /**
     * @generated from field: GetDatabaseStatisticsRequest get_database_statistics_request = 20;
     */
    value: GetDatabaseStatisticsRequest;
    case: "getDatabaseStatisticsRequest";
  } | {
    /**
     * @generated from field: PauseIndexingRequest pause_indexing_request = 21;
     */
    value: PauseIndexingRequest;
    case: "pauseIndexingRequest";
  } | {
    /**
     * @generated from field: ResumeIndexingRequest resume_indexing_request = 22;
     */
    value: ResumeIndexingRequest;
    case: "resumeIndexingRequest";
  } | {
    /**
     * @generated from field: GetDatabaseDetailsRequest get_database_details_request = 23;
     */
    value: GetDatabaseDetailsRequest;
    case: "getDatabaseDetailsRequest";
  } | {
    /**
     * @generated from field: GetProjectDetailsRequest get_project_details_request = 24;
     */
    value: GetProjectDetailsRequest;
    case: "getProjectDetailsRequest";
  } | {
    /**
     * @generated from field: GetDirectoryDetailsRequest get_directory_details_request = 25;
     */
    value: GetDirectoryDetailsRequest;
    case: "getDirectoryDetailsRequest";
  } | {
    /**
     * @generated from field: GetFilesystemTreeRequest get_filesystem_tree_request = 26;
     */
    value: GetFilesystemTreeRequest;
    case: "getFilesystemTreeRequest";
  } | {
    /**
     * @generated from field: GetDirectoryEntriesRequest get_directory_entries_request = 27;
     */
    value: GetDirectoryEntriesRequest;
    case: "getDirectoryEntriesRequest";
  } | {
    /**
     * @generated from field: GetDirectoryEntriesMultipleRequest get_directory_entries_multiple_request = 28;
     */
    value: GetDirectoryEntriesMultipleRequest;
    case: "getDirectoryEntriesMultipleRequest";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TypedRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "TypedRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "register_file_request", kind: "message", T: RegisterFileRequest, oneof: "subtype" },
    { no: 11, name: "unregister_file_request", kind: "message", T: UnregisterFileRequest, oneof: "subtype" },
    { no: 12, name: "get_file_system_request", kind: "message", T: GetFileSystemRequest, oneof: "subtype" },
    { no: 13, name: "search_file_paths_request", kind: "message", T: SearchFilePathsRequest, oneof: "subtype" },
    { no: 14, name: "search_code_request", kind: "message", T: SearchCodeRequest, oneof: "subtype" },
    { no: 15, name: "get_file_system_version_request", kind: "message", T: GetFileSystemVersionRequest, oneof: "subtype" },
    { no: 16, name: "get_file_extracts_request", kind: "message", T: GetFileExtractsRequest, oneof: "subtype" },
    { no: 18, name: "get_directory_statistics_request", kind: "message", T: GetDirectoryStatisticsRequest, oneof: "subtype" },
    { no: 19, name: "refresh_filesystem_tree_request", kind: "message", T: RefreshFileSystemTreeRequest, oneof: "subtype" },
    { no: 20, name: "get_database_statistics_request", kind: "message", T: GetDatabaseStatisticsRequest, oneof: "subtype" },
    { no: 21, name: "pause_indexing_request", kind: "message", T: PauseIndexingRequest, oneof: "subtype" },
    { no: 22, name: "resume_indexing_request", kind: "message", T: ResumeIndexingRequest, oneof: "subtype" },
    { no: 23, name: "get_database_details_request", kind: "message", T: GetDatabaseDetailsRequest, oneof: "subtype" },
    { no: 24, name: "get_project_details_request", kind: "message", T: GetProjectDetailsRequest, oneof: "subtype" },
    { no: 25, name: "get_directory_details_request", kind: "message", T: GetDirectoryDetailsRequest, oneof: "subtype" },
    { no: 26, name: "get_filesystem_tree_request", kind: "message", T: GetFilesystemTreeRequest, oneof: "subtype" },
    { no: 27, name: "get_directory_entries_request", kind: "message", T: GetDirectoryEntriesRequest, oneof: "subtype" },
    { no: 28, name: "get_directory_entries_multiple_request", kind: "message", T: GetDirectoryEntriesMultipleRequest, oneof: "subtype" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypedRequest {
    return new TypedRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypedRequest {
    return new TypedRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypedRequest {
    return new TypedRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TypedRequest | PlainMessage<TypedRequest> | undefined, b: TypedRequest | PlainMessage<TypedRequest> | undefined): boolean {
    return proto3.util.equals(TypedRequest, a, b);
  }
}

/**
 * @generated from message TypedResponse
 */
export class TypedResponse extends Message<TypedResponse> {
  /**
   * @generated from oneof TypedResponse.subtype
   */
  subtype: {
    /**
     * @generated from field: DoneResponse done_response = 10;
     */
    value: DoneResponse;
    case: "doneResponse";
  } | {
    /**
     * @generated from field: GetFileSystemResponse get_file_system_response = 11;
     */
    value: GetFileSystemResponse;
    case: "getFileSystemResponse";
  } | {
    /**
     * @generated from field: SearchFilePathsResponse search_file_paths_response = 12;
     */
    value: SearchFilePathsResponse;
    case: "searchFilePathsResponse";
  } | {
    /**
     * @generated from field: SearchCodeResponse search_code_response = 13;
     */
    value: SearchCodeResponse;
    case: "searchCodeResponse";
  } | {
    /**
     * @generated from field: GetFileSystemVersionResponse get_file_system_version_response = 14;
     */
    value: GetFileSystemVersionResponse;
    case: "getFileSystemVersionResponse";
  } | {
    /**
     * @generated from field: GetFileExtractsResponse get_file_extracts_response = 16;
     */
    value: GetFileExtractsResponse;
    case: "getFileExtractsResponse";
  } | {
    /**
     * @generated from field: GetDirectoryStatisticsResponse get_directory_statistics_response = 17;
     */
    value: GetDirectoryStatisticsResponse;
    case: "getDirectoryStatisticsResponse";
  } | {
    /**
     * @generated from field: RefreshFileSystemTreeResponse refresh_file_system_tree_response = 18;
     */
    value: RefreshFileSystemTreeResponse;
    case: "refreshFileSystemTreeResponse";
  } | {
    /**
     * @generated from field: GetDatabaseStatisticsResponse get_database_statistics_response = 19;
     */
    value: GetDatabaseStatisticsResponse;
    case: "getDatabaseStatisticsResponse";
  } | {
    /**
     * @generated from field: PauseResumeIndexingResponse pause_resume_indexing_response = 20;
     */
    value: PauseResumeIndexingResponse;
    case: "pauseResumeIndexingResponse";
  } | {
    /**
     * @generated from field: GetDatabaseDetailsResponse get_database_details_response = 21;
     */
    value: GetDatabaseDetailsResponse;
    case: "getDatabaseDetailsResponse";
  } | {
    /**
     * @generated from field: GetProjectDetailsResponse get_project_details_response = 22;
     */
    value: GetProjectDetailsResponse;
    case: "getProjectDetailsResponse";
  } | {
    /**
     * @generated from field: GetDirectoryDetailsResponse get_directory_details_response = 23;
     */
    value: GetDirectoryDetailsResponse;
    case: "getDirectoryDetailsResponse";
  } | {
    /**
     * @generated from field: GetFileSystemTreeResponse get_filesystem_tree_response = 24;
     */
    value: GetFileSystemTreeResponse;
    case: "getFilesystemTreeResponse";
  } | {
    /**
     * @generated from field: GetDirectoryEntriesResponse get_directory_entries_response = 25;
     */
    value: GetDirectoryEntriesResponse;
    case: "getDirectoryEntriesResponse";
  } | {
    /**
     * @generated from field: GetDirectoryEntriesMultipleResponse get_directory_entries_multiple_response = 26;
     */
    value: GetDirectoryEntriesMultipleResponse;
    case: "getDirectoryEntriesMultipleResponse";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TypedResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "TypedResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "done_response", kind: "message", T: DoneResponse, oneof: "subtype" },
    { no: 11, name: "get_file_system_response", kind: "message", T: GetFileSystemResponse, oneof: "subtype" },
    { no: 12, name: "search_file_paths_response", kind: "message", T: SearchFilePathsResponse, oneof: "subtype" },
    { no: 13, name: "search_code_response", kind: "message", T: SearchCodeResponse, oneof: "subtype" },
    { no: 14, name: "get_file_system_version_response", kind: "message", T: GetFileSystemVersionResponse, oneof: "subtype" },
    { no: 16, name: "get_file_extracts_response", kind: "message", T: GetFileExtractsResponse, oneof: "subtype" },
    { no: 17, name: "get_directory_statistics_response", kind: "message", T: GetDirectoryStatisticsResponse, oneof: "subtype" },
    { no: 18, name: "refresh_file_system_tree_response", kind: "message", T: RefreshFileSystemTreeResponse, oneof: "subtype" },
    { no: 19, name: "get_database_statistics_response", kind: "message", T: GetDatabaseStatisticsResponse, oneof: "subtype" },
    { no: 20, name: "pause_resume_indexing_response", kind: "message", T: PauseResumeIndexingResponse, oneof: "subtype" },
    { no: 21, name: "get_database_details_response", kind: "message", T: GetDatabaseDetailsResponse, oneof: "subtype" },
    { no: 22, name: "get_project_details_response", kind: "message", T: GetProjectDetailsResponse, oneof: "subtype" },
    { no: 23, name: "get_directory_details_response", kind: "message", T: GetDirectoryDetailsResponse, oneof: "subtype" },
    { no: 24, name: "get_filesystem_tree_response", kind: "message", T: GetFileSystemTreeResponse, oneof: "subtype" },
    { no: 25, name: "get_directory_entries_response", kind: "message", T: GetDirectoryEntriesResponse, oneof: "subtype" },
    { no: 26, name: "get_directory_entries_multiple_response", kind: "message", T: GetDirectoryEntriesMultipleResponse, oneof: "subtype" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypedResponse {
    return new TypedResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypedResponse {
    return new TypedResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypedResponse {
    return new TypedResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TypedResponse | PlainMessage<TypedResponse> | undefined, b: TypedResponse | PlainMessage<TypedResponse> | undefined): boolean {
    return proto3.util.equals(TypedResponse, a, b);
  }
}

/**
 * @generated from message TypedEvent
 */
export class TypedEvent extends Message<TypedEvent> {
  /**
   * @generated from oneof TypedEvent.subtype
   */
  subtype: {
    /**
     * @generated from field: PairedTypedEvent paired_typed_event = 10;
     */
    value: PairedTypedEvent;
    case: "pairedTypedEvent";
  } | {
    /**
     * @generated from field: ProgressReportEvent progress_report_event = 11;
     */
    value: ProgressReportEvent;
    case: "progressReportEvent";
  } | {
    /**
     * @generated from field: IndexingServerStateChangedEvent indexing_server_state_changed_event = 12;
     */
    value: IndexingServerStateChangedEvent;
    case: "indexingServerStateChangedEvent";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TypedEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "TypedEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "paired_typed_event", kind: "message", T: PairedTypedEvent, oneof: "subtype" },
    { no: 11, name: "progress_report_event", kind: "message", T: ProgressReportEvent, oneof: "subtype" },
    { no: 12, name: "indexing_server_state_changed_event", kind: "message", T: IndexingServerStateChangedEvent, oneof: "subtype" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypedEvent {
    return new TypedEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypedEvent {
    return new TypedEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypedEvent {
    return new TypedEvent().fromJsonString(jsonString, options);
  }

  static equals(a: TypedEvent | PlainMessage<TypedEvent> | undefined, b: TypedEvent | PlainMessage<TypedEvent> | undefined): boolean {
    return proto3.util.equals(TypedEvent, a, b);
  }
}

/**
 * @generated from message PairedTypedEvent
 */
export class PairedTypedEvent extends Message<PairedTypedEvent> {
  /**
   * @generated from field: int64 operation_id = 1;
   */
  operationId = protoInt64.zero;

  /**
   * @generated from field: ErrorResponse error = 2;
   */
  error?: ErrorResponse;

  /**
   * @generated from oneof PairedTypedEvent.subtype
   */
  subtype: {
    /**
     * @generated from field: FileSystemScanStarted file_system_scan_started = 10;
     */
    value: FileSystemScanStarted;
    case: "fileSystemScanStarted";
  } | {
    /**
     * @generated from field: FileSystemScanFinished file_system_scan_finished = 11;
     */
    value: FileSystemScanFinished;
    case: "fileSystemScanFinished";
  } | {
    /**
     * @generated from field: SearchEngineFilesLoading search_engine_files_loading = 12;
     */
    value: SearchEngineFilesLoading;
    case: "searchEngineFilesLoading";
  } | {
    /**
     * @generated from field: SearchEngineFilesLoadingProgress search_engine_files_loading_progress = 13;
     */
    value: SearchEngineFilesLoadingProgress;
    case: "searchEngineFilesLoadingProgress";
  } | {
    /**
     * @generated from field: SearchEngineFilesLoaded search_engine_files_loaded = 14;
     */
    value: SearchEngineFilesLoaded;
    case: "searchEngineFilesLoaded";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PairedTypedEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "PairedTypedEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "operation_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "error", kind: "message", T: ErrorResponse },
    { no: 10, name: "file_system_scan_started", kind: "message", T: FileSystemScanStarted, oneof: "subtype" },
    { no: 11, name: "file_system_scan_finished", kind: "message", T: FileSystemScanFinished, oneof: "subtype" },
    { no: 12, name: "search_engine_files_loading", kind: "message", T: SearchEngineFilesLoading, oneof: "subtype" },
    { no: 13, name: "search_engine_files_loading_progress", kind: "message", T: SearchEngineFilesLoadingProgress, oneof: "subtype" },
    { no: 14, name: "search_engine_files_loaded", kind: "message", T: SearchEngineFilesLoaded, oneof: "subtype" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PairedTypedEvent {
    return new PairedTypedEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PairedTypedEvent {
    return new PairedTypedEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PairedTypedEvent {
    return new PairedTypedEvent().fromJsonString(jsonString, options);
  }

  static equals(a: PairedTypedEvent | PlainMessage<PairedTypedEvent> | undefined, b: PairedTypedEvent | PlainMessage<PairedTypedEvent> | undefined): boolean {
    return proto3.util.equals(PairedTypedEvent, a, b);
  }
}

/**
 * @generated from message FileSystemScanStarted
 */
export class FileSystemScanStarted extends Message<FileSystemScanStarted> {
  constructor(data?: PartialMessage<FileSystemScanStarted>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FileSystemScanStarted";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileSystemScanStarted {
    return new FileSystemScanStarted().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileSystemScanStarted {
    return new FileSystemScanStarted().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileSystemScanStarted {
    return new FileSystemScanStarted().fromJsonString(jsonString, options);
  }

  static equals(a: FileSystemScanStarted | PlainMessage<FileSystemScanStarted> | undefined, b: FileSystemScanStarted | PlainMessage<FileSystemScanStarted> | undefined): boolean {
    return proto3.util.equals(FileSystemScanStarted, a, b);
  }
}

/**
 * @generated from message FileSystemScanFinished
 */
export class FileSystemScanFinished extends Message<FileSystemScanFinished> {
  /**
   * @generated from field: int32 old_version = 1;
   */
  oldVersion = 0;

  /**
   * @generated from field: int32 new_version = 2;
   */
  newVersion = 0;

  constructor(data?: PartialMessage<FileSystemScanFinished>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FileSystemScanFinished";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "old_version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "new_version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileSystemScanFinished {
    return new FileSystemScanFinished().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileSystemScanFinished {
    return new FileSystemScanFinished().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileSystemScanFinished {
    return new FileSystemScanFinished().fromJsonString(jsonString, options);
  }

  static equals(a: FileSystemScanFinished | PlainMessage<FileSystemScanFinished> | undefined, b: FileSystemScanFinished | PlainMessage<FileSystemScanFinished> | undefined): boolean {
    return proto3.util.equals(FileSystemScanFinished, a, b);
  }
}

/**
 * @generated from message SearchEngineFilesLoading
 */
export class SearchEngineFilesLoading extends Message<SearchEngineFilesLoading> {
  constructor(data?: PartialMessage<SearchEngineFilesLoading>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SearchEngineFilesLoading";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchEngineFilesLoading {
    return new SearchEngineFilesLoading().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchEngineFilesLoading {
    return new SearchEngineFilesLoading().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchEngineFilesLoading {
    return new SearchEngineFilesLoading().fromJsonString(jsonString, options);
  }

  static equals(a: SearchEngineFilesLoading | PlainMessage<SearchEngineFilesLoading> | undefined, b: SearchEngineFilesLoading | PlainMessage<SearchEngineFilesLoading> | undefined): boolean {
    return proto3.util.equals(SearchEngineFilesLoading, a, b);
  }
}

/**
 * @generated from message SearchEngineFilesLoadingProgress
 */
export class SearchEngineFilesLoadingProgress extends Message<SearchEngineFilesLoadingProgress> {
  constructor(data?: PartialMessage<SearchEngineFilesLoadingProgress>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SearchEngineFilesLoadingProgress";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchEngineFilesLoadingProgress {
    return new SearchEngineFilesLoadingProgress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchEngineFilesLoadingProgress {
    return new SearchEngineFilesLoadingProgress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchEngineFilesLoadingProgress {
    return new SearchEngineFilesLoadingProgress().fromJsonString(jsonString, options);
  }

  static equals(a: SearchEngineFilesLoadingProgress | PlainMessage<SearchEngineFilesLoadingProgress> | undefined, b: SearchEngineFilesLoadingProgress | PlainMessage<SearchEngineFilesLoadingProgress> | undefined): boolean {
    return proto3.util.equals(SearchEngineFilesLoadingProgress, a, b);
  }
}

/**
 * @generated from message SearchEngineFilesLoaded
 */
export class SearchEngineFilesLoaded extends Message<SearchEngineFilesLoaded> {
  /**
   * @generated from field: int64 tree_version = 1;
   */
  treeVersion = protoInt64.zero;

  constructor(data?: PartialMessage<SearchEngineFilesLoaded>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SearchEngineFilesLoaded";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tree_version", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchEngineFilesLoaded {
    return new SearchEngineFilesLoaded().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchEngineFilesLoaded {
    return new SearchEngineFilesLoaded().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchEngineFilesLoaded {
    return new SearchEngineFilesLoaded().fromJsonString(jsonString, options);
  }

  static equals(a: SearchEngineFilesLoaded | PlainMessage<SearchEngineFilesLoaded> | undefined, b: SearchEngineFilesLoaded | PlainMessage<SearchEngineFilesLoaded> | undefined): boolean {
    return proto3.util.equals(SearchEngineFilesLoaded, a, b);
  }
}

/**
 * @generated from message ProgressReportEvent
 */
export class ProgressReportEvent extends Message<ProgressReportEvent> {
  /**
   * @generated from field: string display_text = 1;
   */
  displayText = "";

  /**
   * number of completed steps <= total
   *
   * @generated from field: int32 completed = 2;
   */
  completed = 0;

  /**
   * total expected number of steps 
   *
   * @generated from field: int32 total = 3;
   */
  total = 0;

  constructor(data?: PartialMessage<ProgressReportEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ProgressReportEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "display_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "completed", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "total", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProgressReportEvent {
    return new ProgressReportEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProgressReportEvent {
    return new ProgressReportEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProgressReportEvent {
    return new ProgressReportEvent().fromJsonString(jsonString, options);
  }

  static equals(a: ProgressReportEvent | PlainMessage<ProgressReportEvent> | undefined, b: ProgressReportEvent | PlainMessage<ProgressReportEvent> | undefined): boolean {
    return proto3.util.equals(ProgressReportEvent, a, b);
  }
}

/**
 * @generated from message IndexingServerStateChangedEvent
 */
export class IndexingServerStateChangedEvent extends Message<IndexingServerStateChangedEvent> {
  /**
   * @generated from field: IndexingServerStatus server_status = 1;
   */
  serverStatus = IndexingServerStatus.IDLE;

  /**
   * @generated from field: bcl.DateTime last_index_updated_utc = 2;
   */
  lastIndexUpdatedUtc?: DateTime;

  constructor(data?: PartialMessage<IndexingServerStateChangedEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "IndexingServerStateChangedEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "server_status", kind: "enum", T: proto3.getEnumType(IndexingServerStatus) },
    { no: 2, name: "last_index_updated_utc", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IndexingServerStateChangedEvent {
    return new IndexingServerStateChangedEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IndexingServerStateChangedEvent {
    return new IndexingServerStateChangedEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IndexingServerStateChangedEvent {
    return new IndexingServerStateChangedEvent().fromJsonString(jsonString, options);
  }

  static equals(a: IndexingServerStateChangedEvent | PlainMessage<IndexingServerStateChangedEvent> | undefined, b: IndexingServerStateChangedEvent | PlainMessage<IndexingServerStateChangedEvent> | undefined): boolean {
    return proto3.util.equals(IndexingServerStateChangedEvent, a, b);
  }
}

/**
 * @generated from message IpcRequest
 */
export class IpcRequest extends Message<IpcRequest> {
  /**
   * @generated from field: bool run_on_sequential_queue = 3;
   */
  runOnSequentialQueue = false;

  constructor(data?: PartialMessage<IpcRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "IpcRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "run_on_sequential_queue", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IpcRequest {
    return new IpcRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IpcRequest {
    return new IpcRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IpcRequest {
    return new IpcRequest().fromJsonString(jsonString, options);
  }

  static equals(a: IpcRequest | PlainMessage<IpcRequest> | undefined, b: IpcRequest | PlainMessage<IpcRequest> | undefined): boolean {
    return proto3.util.equals(IpcRequest, a, b);
  }
}

/**
 * @generated from message IpcResponse
 */
export class IpcResponse extends Message<IpcResponse> {
  /**
   * @generated from field: IpcEvent ipc_event = 10;
   */
  ipcEvent?: IpcEvent;

  constructor(data?: PartialMessage<IpcResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "IpcResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "ipc_event", kind: "message", T: IpcEvent },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IpcResponse {
    return new IpcResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IpcResponse {
    return new IpcResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IpcResponse {
    return new IpcResponse().fromJsonString(jsonString, options);
  }

  static equals(a: IpcResponse | PlainMessage<IpcResponse> | undefined, b: IpcResponse | PlainMessage<IpcResponse> | undefined): boolean {
    return proto3.util.equals(IpcResponse, a, b);
  }
}

/**
 * @generated from message IpcEvent
 */
export class IpcEvent extends Message<IpcEvent> {
  constructor(data?: PartialMessage<IpcEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "IpcEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IpcEvent {
    return new IpcEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IpcEvent {
    return new IpcEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IpcEvent {
    return new IpcEvent().fromJsonString(jsonString, options);
  }

  static equals(a: IpcEvent | PlainMessage<IpcEvent> | undefined, b: IpcEvent | PlainMessage<IpcEvent> | undefined): boolean {
    return proto3.util.equals(IpcEvent, a, b);
  }
}

/**
 * @generated from message RegisterFileRequest
 */
export class RegisterFileRequest extends Message<RegisterFileRequest> {
  /**
   * @generated from field: string file_name = 1;
   */
  fileName = "";

  constructor(data?: PartialMessage<RegisterFileRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "RegisterFileRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterFileRequest {
    return new RegisterFileRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterFileRequest {
    return new RegisterFileRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterFileRequest {
    return new RegisterFileRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegisterFileRequest | PlainMessage<RegisterFileRequest> | undefined, b: RegisterFileRequest | PlainMessage<RegisterFileRequest> | undefined): boolean {
    return proto3.util.equals(RegisterFileRequest, a, b);
  }
}

/**
 * @generated from message UnregisterFileRequest
 */
export class UnregisterFileRequest extends Message<UnregisterFileRequest> {
  /**
   * @generated from field: string file_name = 1;
   */
  fileName = "";

  constructor(data?: PartialMessage<UnregisterFileRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "UnregisterFileRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnregisterFileRequest {
    return new UnregisterFileRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnregisterFileRequest {
    return new UnregisterFileRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnregisterFileRequest {
    return new UnregisterFileRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnregisterFileRequest | PlainMessage<UnregisterFileRequest> | undefined, b: UnregisterFileRequest | PlainMessage<UnregisterFileRequest> | undefined): boolean {
    return proto3.util.equals(UnregisterFileRequest, a, b);
  }
}

/**
 * @generated from message GetFileSystemRequest
 */
export class GetFileSystemRequest extends Message<GetFileSystemRequest> {
  /**
   * @generated from field: int32 known_version = 1;
   */
  knownVersion = 0;

  constructor(data?: PartialMessage<GetFileSystemRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetFileSystemRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "known_version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFileSystemRequest {
    return new GetFileSystemRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFileSystemRequest {
    return new GetFileSystemRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFileSystemRequest {
    return new GetFileSystemRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFileSystemRequest | PlainMessage<GetFileSystemRequest> | undefined, b: GetFileSystemRequest | PlainMessage<GetFileSystemRequest> | undefined): boolean {
    return proto3.util.equals(GetFileSystemRequest, a, b);
  }
}

/**
 * @generated from message SearchFilePathsRequest
 */
export class SearchFilePathsRequest extends Message<SearchFilePathsRequest> {
  /**
   * @generated from field: SearchParams search_params = 1;
   */
  searchParams?: SearchParams;

  constructor(data?: PartialMessage<SearchFilePathsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SearchFilePathsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "search_params", kind: "message", T: SearchParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchFilePathsRequest {
    return new SearchFilePathsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchFilePathsRequest {
    return new SearchFilePathsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchFilePathsRequest {
    return new SearchFilePathsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SearchFilePathsRequest | PlainMessage<SearchFilePathsRequest> | undefined, b: SearchFilePathsRequest | PlainMessage<SearchFilePathsRequest> | undefined): boolean {
    return proto3.util.equals(SearchFilePathsRequest, a, b);
  }
}

/**
 * @generated from message SearchCodeRequest
 */
export class SearchCodeRequest extends Message<SearchCodeRequest> {
  /**
   * @generated from field: SearchParams search_params = 1;
   */
  searchParams?: SearchParams;

  constructor(data?: PartialMessage<SearchCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SearchCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "search_params", kind: "message", T: SearchParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchCodeRequest {
    return new SearchCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchCodeRequest {
    return new SearchCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchCodeRequest {
    return new SearchCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SearchCodeRequest | PlainMessage<SearchCodeRequest> | undefined, b: SearchCodeRequest | PlainMessage<SearchCodeRequest> | undefined): boolean {
    return proto3.util.equals(SearchCodeRequest, a, b);
  }
}

/**
 * @generated from message GetFileSystemVersionRequest
 */
export class GetFileSystemVersionRequest extends Message<GetFileSystemVersionRequest> {
  constructor(data?: PartialMessage<GetFileSystemVersionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetFileSystemVersionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFileSystemVersionRequest {
    return new GetFileSystemVersionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFileSystemVersionRequest {
    return new GetFileSystemVersionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFileSystemVersionRequest {
    return new GetFileSystemVersionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFileSystemVersionRequest | PlainMessage<GetFileSystemVersionRequest> | undefined, b: GetFileSystemVersionRequest | PlainMessage<GetFileSystemVersionRequest> | undefined): boolean {
    return proto3.util.equals(GetFileSystemVersionRequest, a, b);
  }
}

/**
 * @generated from message GetFileExtractsRequest
 */
export class GetFileExtractsRequest extends Message<GetFileExtractsRequest> {
  /**
   * @generated from field: string file_name = 1;
   */
  fileName = "";

  /**
   * @generated from field: repeated FilePositionSpan positions = 2;
   */
  positions: FilePositionSpan[] = [];

  /**
   * @generated from field: int32 max_extract_length = 3;
   */
  maxExtractLength = 0;

  constructor(data?: PartialMessage<GetFileExtractsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetFileExtractsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "positions", kind: "message", T: FilePositionSpan, repeated: true },
    { no: 3, name: "max_extract_length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFileExtractsRequest {
    return new GetFileExtractsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFileExtractsRequest {
    return new GetFileExtractsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFileExtractsRequest {
    return new GetFileExtractsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFileExtractsRequest | PlainMessage<GetFileExtractsRequest> | undefined, b: GetFileExtractsRequest | PlainMessage<GetFileExtractsRequest> | undefined): boolean {
    return proto3.util.equals(GetFileExtractsRequest, a, b);
  }
}

/**
 * @generated from message GetDirectoryStatisticsRequest
 */
export class GetDirectoryStatisticsRequest extends Message<GetDirectoryStatisticsRequest> {
  /**
   * @generated from field: string directory_name = 1;
   */
  directoryName = "";

  constructor(data?: PartialMessage<GetDirectoryStatisticsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDirectoryStatisticsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDirectoryStatisticsRequest {
    return new GetDirectoryStatisticsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDirectoryStatisticsRequest {
    return new GetDirectoryStatisticsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDirectoryStatisticsRequest {
    return new GetDirectoryStatisticsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDirectoryStatisticsRequest | PlainMessage<GetDirectoryStatisticsRequest> | undefined, b: GetDirectoryStatisticsRequest | PlainMessage<GetDirectoryStatisticsRequest> | undefined): boolean {
    return proto3.util.equals(GetDirectoryStatisticsRequest, a, b);
  }
}

/**
 * @generated from message RefreshFileSystemTreeRequest
 */
export class RefreshFileSystemTreeRequest extends Message<RefreshFileSystemTreeRequest> {
  constructor(data?: PartialMessage<RefreshFileSystemTreeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "RefreshFileSystemTreeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshFileSystemTreeRequest {
    return new RefreshFileSystemTreeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshFileSystemTreeRequest {
    return new RefreshFileSystemTreeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshFileSystemTreeRequest {
    return new RefreshFileSystemTreeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RefreshFileSystemTreeRequest | PlainMessage<RefreshFileSystemTreeRequest> | undefined, b: RefreshFileSystemTreeRequest | PlainMessage<RefreshFileSystemTreeRequest> | undefined): boolean {
    return proto3.util.equals(RefreshFileSystemTreeRequest, a, b);
  }
}

/**
 * @generated from message GetDatabaseStatisticsRequest
 */
export class GetDatabaseStatisticsRequest extends Message<GetDatabaseStatisticsRequest> {
  /**
   * @generated from field: bool force_garbage_collection = 1;
   */
  forceGarbageCollection = false;

  constructor(data?: PartialMessage<GetDatabaseStatisticsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDatabaseStatisticsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "force_garbage_collection", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDatabaseStatisticsRequest {
    return new GetDatabaseStatisticsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDatabaseStatisticsRequest {
    return new GetDatabaseStatisticsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDatabaseStatisticsRequest {
    return new GetDatabaseStatisticsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDatabaseStatisticsRequest | PlainMessage<GetDatabaseStatisticsRequest> | undefined, b: GetDatabaseStatisticsRequest | PlainMessage<GetDatabaseStatisticsRequest> | undefined): boolean {
    return proto3.util.equals(GetDatabaseStatisticsRequest, a, b);
  }
}

/**
 * @generated from message PauseIndexingRequest
 */
export class PauseIndexingRequest extends Message<PauseIndexingRequest> {
  constructor(data?: PartialMessage<PauseIndexingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "PauseIndexingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PauseIndexingRequest {
    return new PauseIndexingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PauseIndexingRequest {
    return new PauseIndexingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PauseIndexingRequest {
    return new PauseIndexingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PauseIndexingRequest | PlainMessage<PauseIndexingRequest> | undefined, b: PauseIndexingRequest | PlainMessage<PauseIndexingRequest> | undefined): boolean {
    return proto3.util.equals(PauseIndexingRequest, a, b);
  }
}

/**
 * @generated from message ResumeIndexingRequest
 */
export class ResumeIndexingRequest extends Message<ResumeIndexingRequest> {
  constructor(data?: PartialMessage<ResumeIndexingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ResumeIndexingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResumeIndexingRequest {
    return new ResumeIndexingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResumeIndexingRequest {
    return new ResumeIndexingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResumeIndexingRequest {
    return new ResumeIndexingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResumeIndexingRequest | PlainMessage<ResumeIndexingRequest> | undefined, b: ResumeIndexingRequest | PlainMessage<ResumeIndexingRequest> | undefined): boolean {
    return proto3.util.equals(ResumeIndexingRequest, a, b);
  }
}

/**
 * @generated from message GetDatabaseDetailsRequest
 */
export class GetDatabaseDetailsRequest extends Message<GetDatabaseDetailsRequest> {
  /**
   * @generated from field: int32 max_files_by_extension_details_count = 1;
   */
  maxFilesByExtensionDetailsCount = 0;

  /**
   * @generated from field: int32 max_large_files_details_count = 2;
   */
  maxLargeFilesDetailsCount = 0;

  constructor(data?: PartialMessage<GetDatabaseDetailsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDatabaseDetailsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "max_files_by_extension_details_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "max_large_files_details_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDatabaseDetailsRequest {
    return new GetDatabaseDetailsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDatabaseDetailsRequest {
    return new GetDatabaseDetailsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDatabaseDetailsRequest {
    return new GetDatabaseDetailsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDatabaseDetailsRequest | PlainMessage<GetDatabaseDetailsRequest> | undefined, b: GetDatabaseDetailsRequest | PlainMessage<GetDatabaseDetailsRequest> | undefined): boolean {
    return proto3.util.equals(GetDatabaseDetailsRequest, a, b);
  }
}

/**
 * @generated from message GetProjectDetailsRequest
 */
export class GetProjectDetailsRequest extends Message<GetProjectDetailsRequest> {
  /**
   * @generated from field: string project_path = 1;
   */
  projectPath = "";

  /**
   * @generated from field: int32 max_files_by_extension_details_count = 2;
   */
  maxFilesByExtensionDetailsCount = 0;

  /**
   * @generated from field: int32 max_large_files_details_count = 3;
   */
  maxLargeFilesDetailsCount = 0;

  constructor(data?: PartialMessage<GetProjectDetailsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetProjectDetailsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "max_files_by_extension_details_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "max_large_files_details_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProjectDetailsRequest {
    return new GetProjectDetailsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProjectDetailsRequest {
    return new GetProjectDetailsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProjectDetailsRequest {
    return new GetProjectDetailsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetProjectDetailsRequest | PlainMessage<GetProjectDetailsRequest> | undefined, b: GetProjectDetailsRequest | PlainMessage<GetProjectDetailsRequest> | undefined): boolean {
    return proto3.util.equals(GetProjectDetailsRequest, a, b);
  }
}

/**
 * @generated from message GetDirectoryDetailsRequest
 */
export class GetDirectoryDetailsRequest extends Message<GetDirectoryDetailsRequest> {
  /**
   * @generated from field: string path = 1;
   */
  path = "";

  /**
   * @generated from field: int32 max_files_by_extension_details_count = 2;
   */
  maxFilesByExtensionDetailsCount = 0;

  /**
   * @generated from field: int32 max_large_files_details_count = 3;
   */
  maxLargeFilesDetailsCount = 0;

  constructor(data?: PartialMessage<GetDirectoryDetailsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDirectoryDetailsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "max_files_by_extension_details_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "max_large_files_details_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDirectoryDetailsRequest {
    return new GetDirectoryDetailsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDirectoryDetailsRequest {
    return new GetDirectoryDetailsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDirectoryDetailsRequest {
    return new GetDirectoryDetailsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDirectoryDetailsRequest | PlainMessage<GetDirectoryDetailsRequest> | undefined, b: GetDirectoryDetailsRequest | PlainMessage<GetDirectoryDetailsRequest> | undefined): boolean {
    return proto3.util.equals(GetDirectoryDetailsRequest, a, b);
  }
}

/**
 * @generated from message GetFilesystemTreeRequest
 */
export class GetFilesystemTreeRequest extends Message<GetFilesystemTreeRequest> {
  /**
   * @generated from field: int32 known_version = 1;
   */
  knownVersion = 0;

  constructor(data?: PartialMessage<GetFilesystemTreeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetFilesystemTreeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "known_version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFilesystemTreeRequest {
    return new GetFilesystemTreeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFilesystemTreeRequest {
    return new GetFilesystemTreeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFilesystemTreeRequest {
    return new GetFilesystemTreeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFilesystemTreeRequest | PlainMessage<GetFilesystemTreeRequest> | undefined, b: GetFilesystemTreeRequest | PlainMessage<GetFilesystemTreeRequest> | undefined): boolean {
    return proto3.util.equals(GetFilesystemTreeRequest, a, b);
  }
}

/**
 * @generated from message GetDirectoryEntriesRequest
 */
export class GetDirectoryEntriesRequest extends Message<GetDirectoryEntriesRequest> {
  /**
   * @generated from field: string project_path = 1;
   */
  projectPath = "";

  /**
   * @generated from field: string directory_relative_path = 2;
   */
  directoryRelativePath = "";

  constructor(data?: PartialMessage<GetDirectoryEntriesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDirectoryEntriesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "directory_relative_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDirectoryEntriesRequest {
    return new GetDirectoryEntriesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDirectoryEntriesRequest {
    return new GetDirectoryEntriesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDirectoryEntriesRequest {
    return new GetDirectoryEntriesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDirectoryEntriesRequest | PlainMessage<GetDirectoryEntriesRequest> | undefined, b: GetDirectoryEntriesRequest | PlainMessage<GetDirectoryEntriesRequest> | undefined): boolean {
    return proto3.util.equals(GetDirectoryEntriesRequest, a, b);
  }
}

/**
 * @generated from message GetDirectoryEntriesMultipleRequest
 */
export class GetDirectoryEntriesMultipleRequest extends Message<GetDirectoryEntriesMultipleRequest> {
  /**
   * @generated from field: string project_path = 1;
   */
  projectPath = "";

  /**
   * @generated from field: repeated string relative_path_list = 2;
   */
  relativePathList: string[] = [];

  constructor(data?: PartialMessage<GetDirectoryEntriesMultipleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDirectoryEntriesMultipleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "relative_path_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDirectoryEntriesMultipleRequest {
    return new GetDirectoryEntriesMultipleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDirectoryEntriesMultipleRequest {
    return new GetDirectoryEntriesMultipleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDirectoryEntriesMultipleRequest {
    return new GetDirectoryEntriesMultipleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDirectoryEntriesMultipleRequest | PlainMessage<GetDirectoryEntriesMultipleRequest> | undefined, b: GetDirectoryEntriesMultipleRequest | PlainMessage<GetDirectoryEntriesMultipleRequest> | undefined): boolean {
    return proto3.util.equals(GetDirectoryEntriesMultipleRequest, a, b);
  }
}

/**
 * @generated from message FilePositionSpan
 */
export class FilePositionSpan extends Message<FilePositionSpan> {
  /**
   * @generated from field: int32 position = 1;
   */
  position = 0;

  /**
   * @generated from field: int32 length = 2;
   */
  length = 0;

  constructor(data?: PartialMessage<FilePositionSpan>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FilePositionSpan";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "position", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilePositionSpan {
    return new FilePositionSpan().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilePositionSpan {
    return new FilePositionSpan().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilePositionSpan {
    return new FilePositionSpan().fromJsonString(jsonString, options);
  }

  static equals(a: FilePositionSpan | PlainMessage<FilePositionSpan> | undefined, b: FilePositionSpan | PlainMessage<FilePositionSpan> | undefined): boolean {
    return proto3.util.equals(FilePositionSpan, a, b);
  }
}

/**
 * @generated from message SearchParams
 */
export class SearchParams extends Message<SearchParams> {
  /**
   * @generated from field: string search_string = 1;
   */
  searchString = "";

  /**
   * @generated from field: string file_path_pattern = 2;
   */
  filePathPattern = "";

  /**
   * @generated from field: int32 max_results = 3;
   */
  maxResults = 0;

  /**
   * @generated from field: bool match_case = 4;
   */
  matchCase = false;

  /**
   * @generated from field: bool match_whole_word = 5;
   */
  matchWholeWord = false;

  /**
   * @generated from field: bool include_sym_links = 6;
   */
  includeSymLinks = false;

  /**
   * @generated from field: bool regex = 7;
   */
  regex = false;

  /**
   * @generated from field: bool use_re2_engine = 8;
   */
  useRe2Engine = false;

  constructor(data?: PartialMessage<SearchParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SearchParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "search_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "file_path_pattern", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "max_results", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "match_case", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "match_whole_word", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "include_sym_links", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "regex", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "use_re2_engine", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParams {
    return new SearchParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParams {
    return new SearchParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParams {
    return new SearchParams().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParams | PlainMessage<SearchParams> | undefined, b: SearchParams | PlainMessage<SearchParams> | undefined): boolean {
    return proto3.util.equals(SearchParams, a, b);
  }
}

/**
 * @generated from message DoneResponse
 */
export class DoneResponse extends Message<DoneResponse> {
  /**
   * @generated from field: string info = 1;
   */
  info = "";

  constructor(data?: PartialMessage<DoneResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "DoneResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "info", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DoneResponse {
    return new DoneResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DoneResponse {
    return new DoneResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DoneResponse {
    return new DoneResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DoneResponse | PlainMessage<DoneResponse> | undefined, b: DoneResponse | PlainMessage<DoneResponse> | undefined): boolean {
    return proto3.util.equals(DoneResponse, a, b);
  }
}

/**
 * @generated from message GetFileSystemResponse
 */
export class GetFileSystemResponse extends Message<GetFileSystemResponse> {
  /**
   * @generated from field: FileSystemTree_Obsolete file_system_tree_obsolete = 1;
   */
  fileSystemTreeObsolete?: FileSystemTree_Obsolete;

  constructor(data?: PartialMessage<GetFileSystemResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetFileSystemResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_system_tree_obsolete", kind: "message", T: FileSystemTree_Obsolete },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFileSystemResponse {
    return new GetFileSystemResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFileSystemResponse {
    return new GetFileSystemResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFileSystemResponse {
    return new GetFileSystemResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFileSystemResponse | PlainMessage<GetFileSystemResponse> | undefined, b: GetFileSystemResponse | PlainMessage<GetFileSystemResponse> | undefined): boolean {
    return proto3.util.equals(GetFileSystemResponse, a, b);
  }
}

/**
 * @generated from message SearchFilePathsResponse
 */
export class SearchFilePathsResponse extends Message<SearchFilePathsResponse> {
  /**
   * @generated from field: DirectoryEntry search_result = 1;
   */
  searchResult?: DirectoryEntry;

  /**
   * @generated from field: int64 hit_count = 2;
   */
  hitCount = protoInt64.zero;

  /**
   * @generated from field: int64 total_count = 3;
   */
  totalCount = protoInt64.zero;

  constructor(data?: PartialMessage<SearchFilePathsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SearchFilePathsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "search_result", kind: "message", T: DirectoryEntry },
    { no: 2, name: "hit_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "total_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchFilePathsResponse {
    return new SearchFilePathsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchFilePathsResponse {
    return new SearchFilePathsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchFilePathsResponse {
    return new SearchFilePathsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SearchFilePathsResponse | PlainMessage<SearchFilePathsResponse> | undefined, b: SearchFilePathsResponse | PlainMessage<SearchFilePathsResponse> | undefined): boolean {
    return proto3.util.equals(SearchFilePathsResponse, a, b);
  }
}

/**
 * @generated from message SearchCodeResponse
 */
export class SearchCodeResponse extends Message<SearchCodeResponse> {
  /**
   * @generated from field: DirectoryEntry search_results = 1;
   */
  searchResults?: DirectoryEntry;

  /**
   * @generated from field: int64 hit_count = 2;
   */
  hitCount = protoInt64.zero;

  /**
   * @generated from field: int64 searched_file_count = 3;
   */
  searchedFileCount = protoInt64.zero;

  /**
   * @generated from field: int64 total_file_count = 4;
   */
  totalFileCount = protoInt64.zero;

  constructor(data?: PartialMessage<SearchCodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SearchCodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "search_results", kind: "message", T: DirectoryEntry },
    { no: 2, name: "hit_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "searched_file_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "total_file_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchCodeResponse {
    return new SearchCodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchCodeResponse {
    return new SearchCodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchCodeResponse {
    return new SearchCodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SearchCodeResponse | PlainMessage<SearchCodeResponse> | undefined, b: SearchCodeResponse | PlainMessage<SearchCodeResponse> | undefined): boolean {
    return proto3.util.equals(SearchCodeResponse, a, b);
  }
}

/**
 * @generated from message GetFileSystemVersionResponse
 */
export class GetFileSystemVersionResponse extends Message<GetFileSystemVersionResponse> {
  /**
   * @generated from field: int32 version = 1;
   */
  version = 0;

  constructor(data?: PartialMessage<GetFileSystemVersionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetFileSystemVersionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFileSystemVersionResponse {
    return new GetFileSystemVersionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFileSystemVersionResponse {
    return new GetFileSystemVersionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFileSystemVersionResponse {
    return new GetFileSystemVersionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFileSystemVersionResponse | PlainMessage<GetFileSystemVersionResponse> | undefined, b: GetFileSystemVersionResponse | PlainMessage<GetFileSystemVersionResponse> | undefined): boolean {
    return proto3.util.equals(GetFileSystemVersionResponse, a, b);
  }
}

/**
 * @generated from message GetFileExtractsResponse
 */
export class GetFileExtractsResponse extends Message<GetFileExtractsResponse> {
  /**
   * @generated from field: string file_name = 1;
   */
  fileName = "";

  /**
   * @generated from field: repeated FileExtract file_extracts = 2;
   */
  fileExtracts: FileExtract[] = [];

  constructor(data?: PartialMessage<GetFileExtractsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetFileExtractsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "file_extracts", kind: "message", T: FileExtract, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFileExtractsResponse {
    return new GetFileExtractsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFileExtractsResponse {
    return new GetFileExtractsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFileExtractsResponse {
    return new GetFileExtractsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFileExtractsResponse | PlainMessage<GetFileExtractsResponse> | undefined, b: GetFileExtractsResponse | PlainMessage<GetFileExtractsResponse> | undefined): boolean {
    return proto3.util.equals(GetFileExtractsResponse, a, b);
  }
}

/**
 * @generated from message GetDirectoryStatisticsResponse
 */
export class GetDirectoryStatisticsResponse extends Message<GetDirectoryStatisticsResponse> {
  /**
   * @generated from field: int32 directory_count = 1;
   */
  directoryCount = 0;

  /**
   * @generated from field: int32 file_count = 2;
   */
  fileCount = 0;

  /**
   * @generated from field: int32 indexed_file_count = 3;
   */
  indexedFileCount = 0;

  /**
   * @generated from field: int64 total_indexed_file_size = 4;
   */
  totalIndexedFileSize = protoInt64.zero;

  constructor(data?: PartialMessage<GetDirectoryStatisticsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDirectoryStatisticsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "file_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "indexed_file_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "total_indexed_file_size", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDirectoryStatisticsResponse {
    return new GetDirectoryStatisticsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDirectoryStatisticsResponse {
    return new GetDirectoryStatisticsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDirectoryStatisticsResponse {
    return new GetDirectoryStatisticsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDirectoryStatisticsResponse | PlainMessage<GetDirectoryStatisticsResponse> | undefined, b: GetDirectoryStatisticsResponse | PlainMessage<GetDirectoryStatisticsResponse> | undefined): boolean {
    return proto3.util.equals(GetDirectoryStatisticsResponse, a, b);
  }
}

/**
 * @generated from message RefreshFileSystemTreeResponse
 */
export class RefreshFileSystemTreeResponse extends Message<RefreshFileSystemTreeResponse> {
  constructor(data?: PartialMessage<RefreshFileSystemTreeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "RefreshFileSystemTreeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshFileSystemTreeResponse {
    return new RefreshFileSystemTreeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshFileSystemTreeResponse {
    return new RefreshFileSystemTreeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshFileSystemTreeResponse {
    return new RefreshFileSystemTreeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RefreshFileSystemTreeResponse | PlainMessage<RefreshFileSystemTreeResponse> | undefined, b: RefreshFileSystemTreeResponse | PlainMessage<RefreshFileSystemTreeResponse> | undefined): boolean {
    return proto3.util.equals(RefreshFileSystemTreeResponse, a, b);
  }
}

/**
 * @generated from message GetDatabaseStatisticsResponse
 */
export class GetDatabaseStatisticsResponse extends Message<GetDatabaseStatisticsResponse> {
  /**
   * @generated from field: int32 project_count = 1;
   */
  projectCount = 0;

  /**
   * @generated from field: int64 file_count = 2;
   */
  fileCount = protoInt64.zero;

  /**
   * @generated from field: int64 searchable_file_count = 3;
   */
  searchableFileCount = protoInt64.zero;

  /**
   * @generated from field: int64 server_native_memory_usage = 4;
   */
  serverNativeMemoryUsage = protoInt64.zero;

  /**
   * @generated from field: int64 server_gc_memory_usage = 5;
   */
  serverGcMemoryUsage = protoInt64.zero;

  /**
   * @generated from field: bcl.DateTime index_last_updated_utc = 6;
   */
  indexLastUpdatedUtc?: DateTime;

  /**
   * @generated from field: IndexingServerStatus server_status = 7;
   */
  serverStatus = IndexingServerStatus.IDLE;

  constructor(data?: PartialMessage<GetDatabaseStatisticsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDatabaseStatisticsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "file_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "searchable_file_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "server_native_memory_usage", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "server_gc_memory_usage", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "index_last_updated_utc", kind: "message", T: DateTime },
    { no: 7, name: "server_status", kind: "enum", T: proto3.getEnumType(IndexingServerStatus) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDatabaseStatisticsResponse {
    return new GetDatabaseStatisticsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDatabaseStatisticsResponse {
    return new GetDatabaseStatisticsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDatabaseStatisticsResponse {
    return new GetDatabaseStatisticsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDatabaseStatisticsResponse | PlainMessage<GetDatabaseStatisticsResponse> | undefined, b: GetDatabaseStatisticsResponse | PlainMessage<GetDatabaseStatisticsResponse> | undefined): boolean {
    return proto3.util.equals(GetDatabaseStatisticsResponse, a, b);
  }
}

/**
 * @generated from message PauseResumeIndexingResponse
 */
export class PauseResumeIndexingResponse extends Message<PauseResumeIndexingResponse> {
  constructor(data?: PartialMessage<PauseResumeIndexingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "PauseResumeIndexingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PauseResumeIndexingResponse {
    return new PauseResumeIndexingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PauseResumeIndexingResponse {
    return new PauseResumeIndexingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PauseResumeIndexingResponse {
    return new PauseResumeIndexingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PauseResumeIndexingResponse | PlainMessage<PauseResumeIndexingResponse> | undefined, b: PauseResumeIndexingResponse | PlainMessage<PauseResumeIndexingResponse> | undefined): boolean {
    return proto3.util.equals(PauseResumeIndexingResponse, a, b);
  }
}

/**
 * @generated from message GetDatabaseDetailsResponse
 */
export class GetDatabaseDetailsResponse extends Message<GetDatabaseDetailsResponse> {
  /**
   * @generated from field: repeated ProjectDetails project_details = 1;
   */
  projectDetails: ProjectDetails[] = [];

  constructor(data?: PartialMessage<GetDatabaseDetailsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDatabaseDetailsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_details", kind: "message", T: ProjectDetails, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDatabaseDetailsResponse {
    return new GetDatabaseDetailsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDatabaseDetailsResponse {
    return new GetDatabaseDetailsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDatabaseDetailsResponse {
    return new GetDatabaseDetailsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDatabaseDetailsResponse | PlainMessage<GetDatabaseDetailsResponse> | undefined, b: GetDatabaseDetailsResponse | PlainMessage<GetDatabaseDetailsResponse> | undefined): boolean {
    return proto3.util.equals(GetDatabaseDetailsResponse, a, b);
  }
}

/**
 * @generated from message GetProjectDetailsResponse
 */
export class GetProjectDetailsResponse extends Message<GetProjectDetailsResponse> {
  /**
   * @generated from field: ProjectDetails project_details = 1;
   */
  projectDetails?: ProjectDetails;

  constructor(data?: PartialMessage<GetProjectDetailsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetProjectDetailsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_details", kind: "message", T: ProjectDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProjectDetailsResponse {
    return new GetProjectDetailsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProjectDetailsResponse {
    return new GetProjectDetailsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProjectDetailsResponse {
    return new GetProjectDetailsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetProjectDetailsResponse | PlainMessage<GetProjectDetailsResponse> | undefined, b: GetProjectDetailsResponse | PlainMessage<GetProjectDetailsResponse> | undefined): boolean {
    return proto3.util.equals(GetProjectDetailsResponse, a, b);
  }
}

/**
 * @generated from message GetDirectoryDetailsResponse
 */
export class GetDirectoryDetailsResponse extends Message<GetDirectoryDetailsResponse> {
  /**
   * @generated from field: DirectoryDetails directory_details = 1;
   */
  directoryDetails?: DirectoryDetails;

  constructor(data?: PartialMessage<GetDirectoryDetailsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDirectoryDetailsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory_details", kind: "message", T: DirectoryDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDirectoryDetailsResponse {
    return new GetDirectoryDetailsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDirectoryDetailsResponse {
    return new GetDirectoryDetailsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDirectoryDetailsResponse {
    return new GetDirectoryDetailsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDirectoryDetailsResponse | PlainMessage<GetDirectoryDetailsResponse> | undefined, b: GetDirectoryDetailsResponse | PlainMessage<GetDirectoryDetailsResponse> | undefined): boolean {
    return proto3.util.equals(GetDirectoryDetailsResponse, a, b);
  }
}

/**
 * @generated from message GetFileSystemTreeResponse
 */
export class GetFileSystemTreeResponse extends Message<GetFileSystemTreeResponse> {
  /**
   * @generated from field: FileSystemTree file_system_tree = 1;
   */
  fileSystemTree?: FileSystemTree;

  constructor(data?: PartialMessage<GetFileSystemTreeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetFileSystemTreeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_system_tree", kind: "message", T: FileSystemTree },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFileSystemTreeResponse {
    return new GetFileSystemTreeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFileSystemTreeResponse {
    return new GetFileSystemTreeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFileSystemTreeResponse {
    return new GetFileSystemTreeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFileSystemTreeResponse | PlainMessage<GetFileSystemTreeResponse> | undefined, b: GetFileSystemTreeResponse | PlainMessage<GetFileSystemTreeResponse> | undefined): boolean {
    return proto3.util.equals(GetFileSystemTreeResponse, a, b);
  }
}

/**
 * @generated from message GetDirectoryEntriesResponse
 */
export class GetDirectoryEntriesResponse extends Message<GetDirectoryEntriesResponse> {
  /**
   * @generated from field: DirectoryEntry directory_entry = 1;
   */
  directoryEntry?: DirectoryEntry;

  constructor(data?: PartialMessage<GetDirectoryEntriesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDirectoryEntriesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory_entry", kind: "message", T: DirectoryEntry },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDirectoryEntriesResponse {
    return new GetDirectoryEntriesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDirectoryEntriesResponse {
    return new GetDirectoryEntriesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDirectoryEntriesResponse {
    return new GetDirectoryEntriesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDirectoryEntriesResponse | PlainMessage<GetDirectoryEntriesResponse> | undefined, b: GetDirectoryEntriesResponse | PlainMessage<GetDirectoryEntriesResponse> | undefined): boolean {
    return proto3.util.equals(GetDirectoryEntriesResponse, a, b);
  }
}

/**
 * @generated from message GetDirectoryEntriesMultipleResponse
 */
export class GetDirectoryEntriesMultipleResponse extends Message<GetDirectoryEntriesMultipleResponse> {
  /**
   * @generated from field: repeated OptionalDirectoryEntry directory_entries = 1;
   */
  directoryEntries: OptionalDirectoryEntry[] = [];

  constructor(data?: PartialMessage<GetDirectoryEntriesMultipleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "GetDirectoryEntriesMultipleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory_entries", kind: "message", T: OptionalDirectoryEntry, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDirectoryEntriesMultipleResponse {
    return new GetDirectoryEntriesMultipleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDirectoryEntriesMultipleResponse {
    return new GetDirectoryEntriesMultipleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDirectoryEntriesMultipleResponse {
    return new GetDirectoryEntriesMultipleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDirectoryEntriesMultipleResponse | PlainMessage<GetDirectoryEntriesMultipleResponse> | undefined, b: GetDirectoryEntriesMultipleResponse | PlainMessage<GetDirectoryEntriesMultipleResponse> | undefined): boolean {
    return proto3.util.equals(GetDirectoryEntriesMultipleResponse, a, b);
  }
}

/**
 * @generated from message FileSystemTree
 */
export class FileSystemTree extends Message<FileSystemTree> {
  /**
   * @generated from field: int32 version = 1;
   */
  version = 0;

  /**
   * @generated from field: repeated ProjectEntry projects = 2;
   */
  projects: ProjectEntry[] = [];

  constructor(data?: PartialMessage<FileSystemTree>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FileSystemTree";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "projects", kind: "message", T: ProjectEntry, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileSystemTree {
    return new FileSystemTree().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileSystemTree {
    return new FileSystemTree().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileSystemTree {
    return new FileSystemTree().fromJsonString(jsonString, options);
  }

  static equals(a: FileSystemTree | PlainMessage<FileSystemTree> | undefined, b: FileSystemTree | PlainMessage<FileSystemTree> | undefined): boolean {
    return proto3.util.equals(FileSystemTree, a, b);
  }
}

/**
 * @generated from message ProjectEntry
 */
export class ProjectEntry extends Message<ProjectEntry> {
  /**
   * @generated from field: string root_path = 1;
   */
  rootPath = "";

  constructor(data?: PartialMessage<ProjectEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ProjectEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "root_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectEntry {
    return new ProjectEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectEntry {
    return new ProjectEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectEntry {
    return new ProjectEntry().fromJsonString(jsonString, options);
  }

  static equals(a: ProjectEntry | PlainMessage<ProjectEntry> | undefined, b: ProjectEntry | PlainMessage<ProjectEntry> | undefined): boolean {
    return proto3.util.equals(ProjectEntry, a, b);
  }
}

/**
 * @generated from message FileSystemTree_Obsolete
 */
export class FileSystemTree_Obsolete extends Message<FileSystemTree_Obsolete> {
  /**
   * @generated from field: int32 version = 1;
   */
  version = 0;

  /**
   * @generated from field: DirectoryEntry root = 2;
   */
  root?: DirectoryEntry;

  constructor(data?: PartialMessage<FileSystemTree_Obsolete>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FileSystemTree_Obsolete";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "root", kind: "message", T: DirectoryEntry },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileSystemTree_Obsolete {
    return new FileSystemTree_Obsolete().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileSystemTree_Obsolete {
    return new FileSystemTree_Obsolete().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileSystemTree_Obsolete {
    return new FileSystemTree_Obsolete().fromJsonString(jsonString, options);
  }

  static equals(a: FileSystemTree_Obsolete | PlainMessage<FileSystemTree_Obsolete> | undefined, b: FileSystemTree_Obsolete | PlainMessage<FileSystemTree_Obsolete> | undefined): boolean {
    return proto3.util.equals(FileSystemTree_Obsolete, a, b);
  }
}

/**
 * @generated from message ProjectDetails
 */
export class ProjectDetails extends Message<ProjectDetails> {
  /**
   * @generated from field: string root_path = 1;
   */
  rootPath = "";

  /**
   * @generated from field: DirectoryDetails directory_details = 2;
   */
  directoryDetails?: DirectoryDetails;

  /**
   * @generated from field: ProjectConfigurationDetails project_configuration_details = 3;
   */
  projectConfigurationDetails?: ProjectConfigurationDetails;

  constructor(data?: PartialMessage<ProjectDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ProjectDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "root_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "directory_details", kind: "message", T: DirectoryDetails },
    { no: 3, name: "project_configuration_details", kind: "message", T: ProjectConfigurationDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectDetails {
    return new ProjectDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectDetails {
    return new ProjectDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectDetails {
    return new ProjectDetails().fromJsonString(jsonString, options);
  }

  static equals(a: ProjectDetails | PlainMessage<ProjectDetails> | undefined, b: ProjectDetails | PlainMessage<ProjectDetails> | undefined): boolean {
    return proto3.util.equals(ProjectDetails, a, b);
  }
}

/**
 * @generated from message ProjectConfigurationDetails
 */
export class ProjectConfigurationDetails extends Message<ProjectConfigurationDetails> {
  /**
   * @generated from field: ProjectConfigurationSectionDetails ignore_paths_section = 1;
   */
  ignorePathsSection?: ProjectConfigurationSectionDetails;

  /**
   * @generated from field: ProjectConfigurationSectionDetails ignore_searchable_files_section = 2;
   */
  ignoreSearchableFilesSection?: ProjectConfigurationSectionDetails;

  /**
   * @generated from field: ProjectConfigurationSectionDetails include_searchable_files_section = 3;
   */
  includeSearchableFilesSection?: ProjectConfigurationSectionDetails;

  constructor(data?: PartialMessage<ProjectConfigurationDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ProjectConfigurationDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ignore_paths_section", kind: "message", T: ProjectConfigurationSectionDetails },
    { no: 2, name: "ignore_searchable_files_section", kind: "message", T: ProjectConfigurationSectionDetails },
    { no: 3, name: "include_searchable_files_section", kind: "message", T: ProjectConfigurationSectionDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectConfigurationDetails {
    return new ProjectConfigurationDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectConfigurationDetails {
    return new ProjectConfigurationDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectConfigurationDetails {
    return new ProjectConfigurationDetails().fromJsonString(jsonString, options);
  }

  static equals(a: ProjectConfigurationDetails | PlainMessage<ProjectConfigurationDetails> | undefined, b: ProjectConfigurationDetails | PlainMessage<ProjectConfigurationDetails> | undefined): boolean {
    return proto3.util.equals(ProjectConfigurationDetails, a, b);
  }
}

/**
 * @generated from message ProjectConfigurationSectionDetails
 */
export class ProjectConfigurationSectionDetails extends Message<ProjectConfigurationSectionDetails> {
  /**
   * @generated from field: string containing_file_path = 1;
   */
  containingFilePath = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string contents = 3;
   */
  contents = "";

  constructor(data?: PartialMessage<ProjectConfigurationSectionDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ProjectConfigurationSectionDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "containing_file_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "contents", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectConfigurationSectionDetails {
    return new ProjectConfigurationSectionDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectConfigurationSectionDetails {
    return new ProjectConfigurationSectionDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectConfigurationSectionDetails {
    return new ProjectConfigurationSectionDetails().fromJsonString(jsonString, options);
  }

  static equals(a: ProjectConfigurationSectionDetails | PlainMessage<ProjectConfigurationSectionDetails> | undefined, b: ProjectConfigurationSectionDetails | PlainMessage<ProjectConfigurationSectionDetails> | undefined): boolean {
    return proto3.util.equals(ProjectConfigurationSectionDetails, a, b);
  }
}

/**
 * @generated from message OptionalDirectoryEntry
 */
export class OptionalDirectoryEntry extends Message<OptionalDirectoryEntry> {
  /**
   * @generated from field: bool has_value = 1;
   */
  hasValue = false;

  /**
   * @generated from field: DirectoryEntry value = 2;
   */
  value?: DirectoryEntry;

  constructor(data?: PartialMessage<OptionalDirectoryEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "OptionalDirectoryEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "has_value", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "value", kind: "message", T: DirectoryEntry },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OptionalDirectoryEntry {
    return new OptionalDirectoryEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OptionalDirectoryEntry {
    return new OptionalDirectoryEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OptionalDirectoryEntry {
    return new OptionalDirectoryEntry().fromJsonString(jsonString, options);
  }

  static equals(a: OptionalDirectoryEntry | PlainMessage<OptionalDirectoryEntry> | undefined, b: OptionalDirectoryEntry | PlainMessage<OptionalDirectoryEntry> | undefined): boolean {
    return proto3.util.equals(OptionalDirectoryEntry, a, b);
  }
}

/**
 * @generated from message DirectoryEntry
 */
export class DirectoryEntry extends Message<DirectoryEntry> {
  /**
   * @generated from field: repeated FileSystemEntry entries = 1;
   */
  entries: FileSystemEntry[] = [];

  constructor(data?: PartialMessage<DirectoryEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "DirectoryEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entries", kind: "message", T: FileSystemEntry, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DirectoryEntry {
    return new DirectoryEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DirectoryEntry {
    return new DirectoryEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DirectoryEntry {
    return new DirectoryEntry().fromJsonString(jsonString, options);
  }

  static equals(a: DirectoryEntry | PlainMessage<DirectoryEntry> | undefined, b: DirectoryEntry | PlainMessage<DirectoryEntry> | undefined): boolean {
    return proto3.util.equals(DirectoryEntry, a, b);
  }
}

/**
 * @generated from message FileEntry
 */
export class FileEntry extends Message<FileEntry> {
  constructor(data?: PartialMessage<FileEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FileEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileEntry {
    return new FileEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileEntry {
    return new FileEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileEntry {
    return new FileEntry().fromJsonString(jsonString, options);
  }

  static equals(a: FileEntry | PlainMessage<FileEntry> | undefined, b: FileEntry | PlainMessage<FileEntry> | undefined): boolean {
    return proto3.util.equals(FileEntry, a, b);
  }
}

/**
 * @generated from message FileSystemEntry
 */
export class FileSystemEntry extends Message<FileSystemEntry> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: FileSystemEntryData data = 2;
   */
  data?: FileSystemEntryData;

  /**
   * @generated from oneof FileSystemEntry.subtype
   */
  subtype: {
    /**
     * @generated from field: FileEntry file_entry = 10;
     */
    value: FileEntry;
    case: "fileEntry";
  } | {
    /**
     * @generated from field: DirectoryEntry directory_entry = 11;
     */
    value: DirectoryEntry;
    case: "directoryEntry";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<FileSystemEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FileSystemEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "data", kind: "message", T: FileSystemEntryData },
    { no: 10, name: "file_entry", kind: "message", T: FileEntry, oneof: "subtype" },
    { no: 11, name: "directory_entry", kind: "message", T: DirectoryEntry, oneof: "subtype" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileSystemEntry {
    return new FileSystemEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileSystemEntry {
    return new FileSystemEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileSystemEntry {
    return new FileSystemEntry().fromJsonString(jsonString, options);
  }

  static equals(a: FileSystemEntry | PlainMessage<FileSystemEntry> | undefined, b: FileSystemEntry | PlainMessage<FileSystemEntry> | undefined): boolean {
    return proto3.util.equals(FileSystemEntry, a, b);
  }
}

/**
 * @generated from message FileSystemEntryData
 */
export class FileSystemEntryData extends Message<FileSystemEntryData> {
  /**
   * @generated from field: FilePositionsData file_positions_data = 10;
   */
  filePositionsData?: FilePositionsData;

  constructor(data?: PartialMessage<FileSystemEntryData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FileSystemEntryData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "file_positions_data", kind: "message", T: FilePositionsData },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileSystemEntryData {
    return new FileSystemEntryData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileSystemEntryData {
    return new FileSystemEntryData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileSystemEntryData {
    return new FileSystemEntryData().fromJsonString(jsonString, options);
  }

  static equals(a: FileSystemEntryData | PlainMessage<FileSystemEntryData> | undefined, b: FileSystemEntryData | PlainMessage<FileSystemEntryData> | undefined): boolean {
    return proto3.util.equals(FileSystemEntryData, a, b);
  }
}

/**
 * @generated from message FilePositionsData
 */
export class FilePositionsData extends Message<FilePositionsData> {
  /**
   * @generated from field: repeated FilePositionSpan positions = 1;
   */
  positions: FilePositionSpan[] = [];

  constructor(data?: PartialMessage<FilePositionsData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FilePositionsData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "positions", kind: "message", T: FilePositionSpan, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilePositionsData {
    return new FilePositionsData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilePositionsData {
    return new FilePositionsData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilePositionsData {
    return new FilePositionsData().fromJsonString(jsonString, options);
  }

  static equals(a: FilePositionsData | PlainMessage<FilePositionsData> | undefined, b: FilePositionsData | PlainMessage<FilePositionsData> | undefined): boolean {
    return proto3.util.equals(FilePositionsData, a, b);
  }
}

/**
 * @generated from message DirectoryDetails
 */
export class DirectoryDetails extends Message<DirectoryDetails> {
  /**
   * @generated from field: string path = 1;
   */
  path = "";

  /**
   * @generated from field: int64 directory_count = 2;
   */
  directoryCount = protoInt64.zero;

  /**
   * @generated from field: int64 file_count = 3;
   */
  fileCount = protoInt64.zero;

  /**
   * @generated from field: int64 searchable_files_count = 4;
   */
  searchableFilesCount = protoInt64.zero;

  /**
   * @generated from field: int64 searchable_files_byte_length = 5;
   */
  searchableFilesByteLength = protoInt64.zero;

  /**
   * @generated from field: int64 binary_files_count = 6;
   */
  binaryFilesCount = protoInt64.zero;

  /**
   * @generated from field: int64 binary_files_byte_length = 7;
   */
  binaryFilesByteLength = protoInt64.zero;

  /**
   * @generated from field: repeated FileByExtensionDetails searchable_files_by_extension_details = 8;
   */
  searchableFilesByExtensionDetails: FileByExtensionDetails[] = [];

  /**
   * @generated from field: repeated LargeFileDetails large_searchable_file_details = 9;
   */
  largeSearchableFileDetails: LargeFileDetails[] = [];

  /**
   * @generated from field: repeated FileByExtensionDetails binary_files_by_extension_details = 10;
   */
  binaryFilesByExtensionDetails: FileByExtensionDetails[] = [];

  /**
   * @generated from field: repeated LargeFileDetails large_binary_files_details = 11;
   */
  largeBinaryFilesDetails: LargeFileDetails[] = [];

  constructor(data?: PartialMessage<DirectoryDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "DirectoryDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "directory_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "file_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "searchable_files_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "searchable_files_byte_length", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "binary_files_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "binary_files_byte_length", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "searchable_files_by_extension_details", kind: "message", T: FileByExtensionDetails, repeated: true },
    { no: 9, name: "large_searchable_file_details", kind: "message", T: LargeFileDetails, repeated: true },
    { no: 10, name: "binary_files_by_extension_details", kind: "message", T: FileByExtensionDetails, repeated: true },
    { no: 11, name: "large_binary_files_details", kind: "message", T: LargeFileDetails, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DirectoryDetails {
    return new DirectoryDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DirectoryDetails {
    return new DirectoryDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DirectoryDetails {
    return new DirectoryDetails().fromJsonString(jsonString, options);
  }

  static equals(a: DirectoryDetails | PlainMessage<DirectoryDetails> | undefined, b: DirectoryDetails | PlainMessage<DirectoryDetails> | undefined): boolean {
    return proto3.util.equals(DirectoryDetails, a, b);
  }
}

/**
 * @generated from message FileByExtensionDetails
 */
export class FileByExtensionDetails extends Message<FileByExtensionDetails> {
  /**
   * @generated from field: string file_extension = 1;
   */
  fileExtension = "";

  /**
   * @generated from field: int64 file_count = 2;
   */
  fileCount = protoInt64.zero;

  /**
   * @generated from field: int64 file_byte_length = 3;
   */
  fileByteLength = protoInt64.zero;

  constructor(data?: PartialMessage<FileByExtensionDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FileByExtensionDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_extension", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "file_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "file_byte_length", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileByExtensionDetails {
    return new FileByExtensionDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileByExtensionDetails {
    return new FileByExtensionDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileByExtensionDetails {
    return new FileByExtensionDetails().fromJsonString(jsonString, options);
  }

  static equals(a: FileByExtensionDetails | PlainMessage<FileByExtensionDetails> | undefined, b: FileByExtensionDetails | PlainMessage<FileByExtensionDetails> | undefined): boolean {
    return proto3.util.equals(FileByExtensionDetails, a, b);
  }
}

/**
 * @generated from message LargeFileDetails
 */
export class LargeFileDetails extends Message<LargeFileDetails> {
  /**
   * @generated from field: string relative_path = 1;
   */
  relativePath = "";

  /**
   * @generated from field: int64 byte_length = 2;
   */
  byteLength = protoInt64.zero;

  constructor(data?: PartialMessage<LargeFileDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "LargeFileDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "relative_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "byte_length", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LargeFileDetails {
    return new LargeFileDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LargeFileDetails {
    return new LargeFileDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LargeFileDetails {
    return new LargeFileDetails().fromJsonString(jsonString, options);
  }

  static equals(a: LargeFileDetails | PlainMessage<LargeFileDetails> | undefined, b: LargeFileDetails | PlainMessage<LargeFileDetails> | undefined): boolean {
    return proto3.util.equals(LargeFileDetails, a, b);
  }
}

/**
 * @generated from message FileExtract
 */
export class FileExtract extends Message<FileExtract> {
  /**
   * @generated from field: string text = 1;
   */
  text = "";

  /**
   * @generated from field: int32 offset = 2;
   */
  offset = 0;

  /**
   * @generated from field: int32 length = 3;
   */
  length = 0;

  /**
   * @generated from field: int32 line_number = 4;
   */
  lineNumber = 0;

  /**
   * @generated from field: int32 column_number = 5;
   */
  columnNumber = 0;

  constructor(data?: PartialMessage<FileExtract>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "FileExtract";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "line_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "column_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileExtract {
    return new FileExtract().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileExtract {
    return new FileExtract().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileExtract {
    return new FileExtract().fromJsonString(jsonString, options);
  }

  static equals(a: FileExtract | PlainMessage<FileExtract> | undefined, b: FileExtract | PlainMessage<FileExtract> | undefined): boolean {
    return proto3.util.equals(FileExtract, a, b);
  }
}

